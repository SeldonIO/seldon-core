apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: {{ .Values.cluster.name }}
  annotations:
    strimzi.io/node-pools: enabled
    strimzi.io/kraft: enabled
spec:
  entityOperator:
    userOperator: {}
  kafka:
    version: {{ .Values.cluster.version }}
    metadataVersion: {{ .Values.cluster.metadataVersion }}
    replicas: {{ .Values.broker.replicas }}
    listeners:
      {{- if .Values.broker.plaintext.enabled }}
      - name: plain
        port: {{ .Values.broker.plaintext.port }}
        type: {{ .Values.broker.plaintext.listenerType }}
        tls: false
      {{- end }}
      {{- if .Values.broker.tls.enabled }}
      - name: tls
        port: {{ .Values.broker.tls.port }}
        type: {{ .Values.broker.tls.listenerType }}
        tls: true
        authentication:
          type: {{ .Values.broker.tls.authentication.type }}
      {{- end }}
    readinessProbe:
      initialDelaySeconds: {{ .Values.broker.readiness.initialDelaySeconds }}
      timeoutSeconds: {{ .Values.broker.readiness.timeoutSeconds }}
    livenessProbe:
      initialDelaySeconds: {{ .Values.broker.liveness.initialDelaySeconds }}
      timeoutSeconds: {{ .Values.broker.liveness.timeoutSeconds }}
    resources:
      requests:
        cpu: '{{ .Values.broker.resources.cpu }}'
        memory: '{{ .Values.broker.resources.memory }}'
      limits:
        memory: '{{ .Values.broker.resources.memory }}'
    config:
      auto.create.topics.enable: {{ .Values.topic.autoCreate }}
      offsets.topic.replication.factor: {{ .Values.topic.offsetReplicationFactor }}
      transaction.state.log.replication.factor: {{ .Values.topic.txStateReplicationFactor }}
      transaction.state.log.min.isr: {{ .Values.topic.txStateMinISR }}
      default.replication.factor: {{ .Values.topic.defaultReplicationFactor }}
      min.insync.replicas: {{ .Values.topic.minISR }}
      message.max.bytes: {{ .Values.broker.messageMaxBytes }}
    template:
      pod:
        tmpDirSizeLimit: {{ .Values.broker.tmpDirSizeLimit }}
    storage:
      type: jbod
      volumes:
      - id: 0
        type: persistent-claim
        size: {{ .Values.broker.pvcSize }}
        deleteClaim: false
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: kafka-metrics-config.yml
