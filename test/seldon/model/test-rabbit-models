#!/bin/bash

set -o nounset -o errexit -o pipefail

SCRIPT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
MODELS_DIR=$SCRIPT_DIR/../../models
COMMON_DIR=$SCRIPT_DIR/../common

source "${COMMON_DIR}/with_backoff.sh"

COMPUTE_NAMESPACE=seldon-regression-test

RABBITMQ_USER=$(kubectl -n rabbitmq get secret rabbitmq-cluster-default-user -o jsonpath="{.data.username}" | base64 --decode)
RABBITMQ_PASSWORD=$(kubectl -n rabbitmq get secret rabbitmq-cluster-default-user -o jsonpath="{.data.password}" | base64 --decode)
EXPECTED_IRIS_RESULT_PAYLOAD='{"data":{"names":["t:0","t:1","t:2"],"ndarray":[[0.0006985194531162835,0.00366803903943666,0.995633441507447]]},"meta":{"requestPath":{"classifier":"seldonio/sklearnserver:1.14.1"}}}'
EXPECTED_CIFAR10_RESULT_PAYLOAD='1.45e-08,1.25e-09,1.63e-07,1.15e-01,1.74e-07,6.19e-06,8.85e-01,6.07e-09,7.44e-08,4.73e-09,'

echo ">>> Sending predict message to iris rabbitmq model input queue..."
kubectl -n rabbitmq exec rabbitmq-cluster-server-0 -c rabbitmq -- \
    curl -X POST "http://localhost:15672/api/exchanges/%2F/amq.default/publish" \
    --user "${RABBITMQ_USER}:${RABBITMQ_PASSWORD}" \
    -H "Content-type: application/json" \
    -H "Accept: application/json" \
    -d '{"properties":{"content_type":"application/json"},"routing_key":"iris-model-rabbitmq-input","payload":"{\"data\": {\"ndarray\": [[1,2,3,4]] }}","payload_encoding":"string"}'

function retrieveIrisResult {
  IRIS_RESULT_PAYLOAD=$(kubectl -n rabbitmq exec rabbitmq-cluster-server-0 -c rabbitmq -- \
      curl -X POST "http://localhost:15672/api/queues/%2F/iris-model-rabbitmq-output/get" \
      --user "${RABBITMQ_USER}:${RABBITMQ_PASSWORD}" \
      -H "Content-type: application/json" \
      -H "Accept: application/json" \
      -d '{"count":1,"ackmode":"ack_requeue_false","encoding":"auto"}' | jq -e -r '.[0].payload')
}
with_backoff retrieveIrisResult

if [ "${EXPECTED_IRIS_RESULT_PAYLOAD}" != "${IRIS_RESULT_PAYLOAD}" ]; then
  echo "UNEXPECTED IRIS MODEL RESULT: ${IRIS_RESULT_PAYLOAD}"
  exit 1
fi

CIFAR10_REQUEST_PAYLOAD="$(<$MODELS_DIR/cifar10_tensorflow_single.json)"
echo ">>> Sending predict message to cifar10 rabbitmq model input queue..."
kubectl -n rabbitmq exec rabbitmq-cluster-server-0 -c rabbitmq -- \
    curl -X POST "http://localhost:15672/api/exchanges/%2F/amq.default/publish" \
    --user "${RABBITMQ_USER}:${RABBITMQ_PASSWORD}" \
    -H "Content-type: application/json" \
    -H "Accept: application/json" \
    -d "${CIFAR10_REQUEST_PAYLOAD}"

function retrieveCifar10Result {
  CIFAR10_RESULT_PAYLOAD=$(kubectl -n rabbitmq exec rabbitmq-cluster-server-0 -c rabbitmq -- \
      curl -X POST "http://localhost:15672/api/queues/%2F/cifar10-rest-output/get" \
      --user "${RABBITMQ_USER}:${RABBITMQ_PASSWORD}" \
      -H "Content-type: application/json" \
      -H "Accept: application/json" \
      -d '{"count":1,"ackmode":"ack_requeue_false","encoding":"auto"}' | \
      jq -e -r '.[0].payload' | jq -r '.predictions[0][]' | xargs -I{} printf "%.2e," "{}")
}
with_backoff retrieveCifar10Result

if [ "${EXPECTED_CIFAR10_RESULT_PAYLOAD}" != "${CIFAR10_RESULT_PAYLOAD}" ]; then
  echo "UNEXPECTED CIFAR10 MODEL RESULT: ${CIFAR10_RESULT_PAYLOAD}"
  exit 1
fi
