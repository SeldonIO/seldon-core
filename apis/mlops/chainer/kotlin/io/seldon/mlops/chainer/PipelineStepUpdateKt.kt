/*
Copyright 2022 Seldon Technologies Ltd.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: chainer.proto

package io.seldon.mlops.chainer;

@kotlin.jvm.JvmName("-initializepipelineStepUpdate")
public inline fun pipelineStepUpdate(block: io.seldon.mlops.chainer.PipelineStepUpdateKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.chainer.ChainerOuterClass.PipelineStepUpdate =
  io.seldon.mlops.chainer.PipelineStepUpdateKt.Dsl._create(io.seldon.mlops.chainer.ChainerOuterClass.PipelineStepUpdate.newBuilder()).apply { block() }._build()
public object PipelineStepUpdateKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.seldon.mlops.chainer.ChainerOuterClass.PipelineStepUpdate.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.seldon.mlops.chainer.ChainerOuterClass.PipelineStepUpdate.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.seldon.mlops.chainer.ChainerOuterClass.PipelineStepUpdate = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class SourcesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * https://docs.google.com/document/d/1tX-uaOvngx1RpEyWEZ4EbEcU8D0OgYuRWVb2UAi85n4/edit
     * Pipeline Resource example, e.g. transform.outputs.traffic
     *    seldon.&lt;namespace&gt;.&lt;model name&gt;.&lt;inputs|outputs&gt;.&lt;tensor name&gt;
     * </pre>
     *
     * <code>repeated string sources = 1;</code>
     * @return A list containing the sources.
     */
    public val sources: com.google.protobuf.kotlin.DslList<kotlin.String, SourcesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getSourcesList()
      )
    /**
     * <pre>
     * https://docs.google.com/document/d/1tX-uaOvngx1RpEyWEZ4EbEcU8D0OgYuRWVb2UAi85n4/edit
     * Pipeline Resource example, e.g. transform.outputs.traffic
     *    seldon.&lt;namespace&gt;.&lt;model name&gt;.&lt;inputs|outputs&gt;.&lt;tensor name&gt;
     * </pre>
     *
     * <code>repeated string sources = 1;</code>
     * @param value The sources to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addSources")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, SourcesProxy>.add(value: kotlin.String) {
      _builder.addSources(value)
    }
    /**
     * <pre>
     * https://docs.google.com/document/d/1tX-uaOvngx1RpEyWEZ4EbEcU8D0OgYuRWVb2UAi85n4/edit
     * Pipeline Resource example, e.g. transform.outputs.traffic
     *    seldon.&lt;namespace&gt;.&lt;model name&gt;.&lt;inputs|outputs&gt;.&lt;tensor name&gt;
     * </pre>
     *
     * <code>repeated string sources = 1;</code>
     * @param value The sources to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignSources")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, SourcesProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <pre>
     * https://docs.google.com/document/d/1tX-uaOvngx1RpEyWEZ4EbEcU8D0OgYuRWVb2UAi85n4/edit
     * Pipeline Resource example, e.g. transform.outputs.traffic
     *    seldon.&lt;namespace&gt;.&lt;model name&gt;.&lt;inputs|outputs&gt;.&lt;tensor name&gt;
     * </pre>
     *
     * <code>repeated string sources = 1;</code>
     * @param values The sources to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllSources")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, SourcesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllSources(values)
    }
    /**
     * <pre>
     * https://docs.google.com/document/d/1tX-uaOvngx1RpEyWEZ4EbEcU8D0OgYuRWVb2UAi85n4/edit
     * Pipeline Resource example, e.g. transform.outputs.traffic
     *    seldon.&lt;namespace&gt;.&lt;model name&gt;.&lt;inputs|outputs&gt;.&lt;tensor name&gt;
     * </pre>
     *
     * <code>repeated string sources = 1;</code>
     * @param values The sources to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllSources")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, SourcesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <pre>
     * https://docs.google.com/document/d/1tX-uaOvngx1RpEyWEZ4EbEcU8D0OgYuRWVb2UAi85n4/edit
     * Pipeline Resource example, e.g. transform.outputs.traffic
     *    seldon.&lt;namespace&gt;.&lt;model name&gt;.&lt;inputs|outputs&gt;.&lt;tensor name&gt;
     * </pre>
     *
     * <code>repeated string sources = 1;</code>
     * @param index The index to set the value at.
     * @param value The sources to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setSources")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, SourcesProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setSources(index, value)
    }/**
     * <pre>
     * https://docs.google.com/document/d/1tX-uaOvngx1RpEyWEZ4EbEcU8D0OgYuRWVb2UAi85n4/edit
     * Pipeline Resource example, e.g. transform.outputs.traffic
     *    seldon.&lt;namespace&gt;.&lt;model name&gt;.&lt;inputs|outputs&gt;.&lt;tensor name&gt;
     * </pre>
     *
     * <code>repeated string sources = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearSources")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, SourcesProxy>.clear() {
      _builder.clearSources()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class TriggersProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated string triggers = 2;</code>
     * @return A list containing the triggers.
     */
    public val triggers: com.google.protobuf.kotlin.DslList<kotlin.String, TriggersProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getTriggersList()
      )
    /**
     * <code>repeated string triggers = 2;</code>
     * @param value The triggers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addTriggers")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, TriggersProxy>.add(value: kotlin.String) {
      _builder.addTriggers(value)
    }
    /**
     * <code>repeated string triggers = 2;</code>
     * @param value The triggers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignTriggers")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, TriggersProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <code>repeated string triggers = 2;</code>
     * @param values The triggers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllTriggers")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, TriggersProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllTriggers(values)
    }
    /**
     * <code>repeated string triggers = 2;</code>
     * @param values The triggers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllTriggers")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, TriggersProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <code>repeated string triggers = 2;</code>
     * @param index The index to set the value at.
     * @param value The triggers to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setTriggers")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, TriggersProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setTriggers(index, value)
    }/**
     * <code>repeated string triggers = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearTriggers")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, TriggersProxy>.clear() {
      _builder.clearTriggers()
    }
    /**
     * <code>string sink = 3;</code>
     */
    public var sink: kotlin.String
      @JvmName("getSink")
      get() = _builder.getSink()
      @JvmName("setSink")
      set(value) {
        _builder.setSink(value)
      }
    /**
     * <code>string sink = 3;</code>
     */
    public fun clearSink() {
      _builder.clearSink()
    }

    /**
     * <code>.seldon.mlops.chainer.PipelineStepUpdate.PipelineJoinType inputJoinTy = 4;</code>
     */
    public var inputJoinTy: io.seldon.mlops.chainer.ChainerOuterClass.PipelineStepUpdate.PipelineJoinType
      @JvmName("getInputJoinTy")
      get() = _builder.getInputJoinTy()
      @JvmName("setInputJoinTy")
      set(value) {
        _builder.setInputJoinTy(value)
      }
    /**
     * <code>.seldon.mlops.chainer.PipelineStepUpdate.PipelineJoinType inputJoinTy = 4;</code>
     */
    public fun clearInputJoinTy() {
      _builder.clearInputJoinTy()
    }

    /**
     * <code>.seldon.mlops.chainer.PipelineStepUpdate.PipelineJoinType triggersJoinTy = 5;</code>
     */
    public var triggersJoinTy: io.seldon.mlops.chainer.ChainerOuterClass.PipelineStepUpdate.PipelineJoinType
      @JvmName("getTriggersJoinTy")
      get() = _builder.getTriggersJoinTy()
      @JvmName("setTriggersJoinTy")
      set(value) {
        _builder.setTriggersJoinTy(value)
      }
    /**
     * <code>.seldon.mlops.chainer.PipelineStepUpdate.PipelineJoinType triggersJoinTy = 5;</code>
     */
    public fun clearTriggersJoinTy() {
      _builder.clearTriggersJoinTy()
    }

    /**
     * <pre>
     * Forward empty response to following steps, default false
     * </pre>
     *
     * <code>bool passEmptyResponses = 6;</code>
     */
    public var passEmptyResponses: kotlin.Boolean
      @JvmName("getPassEmptyResponses")
      get() = _builder.getPassEmptyResponses()
      @JvmName("setPassEmptyResponses")
      set(value) {
        _builder.setPassEmptyResponses(value)
      }
    /**
     * <pre>
     * Forward empty response to following steps, default false
     * </pre>
     *
     * <code>bool passEmptyResponses = 6;</code>
     */
    public fun clearPassEmptyResponses() {
      _builder.clearPassEmptyResponses()
    }

    /**
     * <pre>
     * Join window millisecs, some nozero default (TBD)
     * </pre>
     *
     * <code>optional uint32 joinWindowMs = 7;</code>
     */
    public var joinWindowMs: kotlin.Int
      @JvmName("getJoinWindowMs")
      get() = _builder.getJoinWindowMs()
      @JvmName("setJoinWindowMs")
      set(value) {
        _builder.setJoinWindowMs(value)
      }
    /**
     * <pre>
     * Join window millisecs, some nozero default (TBD)
     * </pre>
     *
     * <code>optional uint32 joinWindowMs = 7;</code>
     */
    public fun clearJoinWindowMs() {
      _builder.clearJoinWindowMs()
    }
    /**
     * <pre>
     * Join window millisecs, some nozero default (TBD)
     * </pre>
     *
     * <code>optional uint32 joinWindowMs = 7;</code>
     * @return Whether the joinWindowMs field is set.
     */
    public fun hasJoinWindowMs(): kotlin.Boolean {
      return _builder.hasJoinWindowMs()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class TensorMapProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * optional map of tensor name mappings
     * </pre>
     *
     * <code>map&lt;string, string&gt; tensorMap = 8;</code>
     */
     public val tensorMap: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, TensorMapProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getTensorMapMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getTensorMapMap()
      )
    /**
     * <pre>
     * optional map of tensor name mappings
     * </pre>
     *
     * <code>map&lt;string, string&gt; tensorMap = 8;</code>
     */
    @JvmName("putTensorMap")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, TensorMapProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putTensorMap(key, value)
       }
    /**
     * <pre>
     * optional map of tensor name mappings
     * </pre>
     *
     * <code>map&lt;string, string&gt; tensorMap = 8;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setTensorMap")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, TensorMapProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * <pre>
     * optional map of tensor name mappings
     * </pre>
     *
     * <code>map&lt;string, string&gt; tensorMap = 8;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeTensorMap")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, TensorMapProxy>
      .remove(key: kotlin.String) {
         _builder.removeTensorMap(key)
       }
    /**
     * <pre>
     * optional map of tensor name mappings
     * </pre>
     *
     * <code>map&lt;string, string&gt; tensorMap = 8;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllTensorMap")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, TensorMapProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllTensorMap(map)
       }
    /**
     * <pre>
     * optional map of tensor name mappings
     * </pre>
     *
     * <code>map&lt;string, string&gt; tensorMap = 8;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearTensorMap")
    fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, TensorMapProxy>
      .clear() {
         _builder.clearTensorMap()
       }

    /**
     * <pre>
     * Batch settings
     * </pre>
     *
     * <code>.seldon.mlops.chainer.Batch batch = 9;</code>
     */
    public var batch: io.seldon.mlops.chainer.ChainerOuterClass.Batch
      @JvmName("getBatch")
      get() = _builder.getBatch()
      @JvmName("setBatch")
      set(value) {
        _builder.setBatch(value)
      }
    /**
     * <pre>
     * Batch settings
     * </pre>
     *
     * <code>.seldon.mlops.chainer.Batch batch = 9;</code>
     */
    public fun clearBatch() {
      _builder.clearBatch()
    }
    /**
     * <pre>
     * Batch settings
     * </pre>
     *
     * <code>.seldon.mlops.chainer.Batch batch = 9;</code>
     * @return Whether the batch field is set.
     */
    public fun hasBatch(): kotlin.Boolean {
      return _builder.hasBatch()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun io.seldon.mlops.chainer.ChainerOuterClass.PipelineStepUpdate.copy(block: io.seldon.mlops.chainer.PipelineStepUpdateKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.chainer.ChainerOuterClass.PipelineStepUpdate =
  io.seldon.mlops.chainer.PipelineStepUpdateKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.seldon.mlops.chainer.ChainerOuterClass.PipelineStepUpdateOrBuilder.batchOrNull: io.seldon.mlops.chainer.ChainerOuterClass.Batch?
  get() = if (hasBatch()) getBatch() else null

