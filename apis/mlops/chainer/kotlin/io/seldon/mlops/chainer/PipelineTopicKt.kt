//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: chainer.proto

package io.seldon.mlops.chainer;

@kotlin.jvm.JvmName("-initializepipelineTopic")
public inline fun pipelineTopic(block: io.seldon.mlops.chainer.PipelineTopicKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.chainer.ChainerOuterClass.PipelineTopic =
  io.seldon.mlops.chainer.PipelineTopicKt.Dsl._create(io.seldon.mlops.chainer.ChainerOuterClass.PipelineTopic.newBuilder()).apply { block() }._build()
public object PipelineTopicKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.seldon.mlops.chainer.ChainerOuterClass.PipelineTopic.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.seldon.mlops.chainer.ChainerOuterClass.PipelineTopic.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.seldon.mlops.chainer.ChainerOuterClass.PipelineTopic = _builder.build()

    /**
     * <code>string pipelineName = 1;</code>
     */
    public var pipelineName: kotlin.String
      @JvmName("getPipelineName")
      get() = _builder.getPipelineName()
      @JvmName("setPipelineName")
      set(value) {
        _builder.setPipelineName(value)
      }
    /**
     * <code>string pipelineName = 1;</code>
     */
    public fun clearPipelineName() {
      _builder.clearPipelineName()
    }

    /**
     * <code>string topicName = 2;</code>
     */
    public var topicName: kotlin.String
      @JvmName("getTopicName")
      get() = _builder.getTopicName()
      @JvmName("setTopicName")
      set(value) {
        _builder.setTopicName(value)
      }
    /**
     * <code>string topicName = 2;</code>
     */
    public fun clearTopicName() {
      _builder.clearTopicName()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun io.seldon.mlops.chainer.ChainerOuterClass.PipelineTopic.copy(block: io.seldon.mlops.chainer.PipelineTopicKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.chainer.ChainerOuterClass.PipelineTopic =
  io.seldon.mlops.chainer.PipelineTopicKt.Dsl._create(this.toBuilder()).apply { block() }._build()

