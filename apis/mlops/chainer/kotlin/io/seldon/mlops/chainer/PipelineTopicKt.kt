/*
Copyright (c) 2024 Seldon Technologies Ltd.

Use of this software is governed BY
(1) the license included in the LICENSE file or
(2) if the license included in the LICENSE file is the Business Source License 1.1,
the Change License after the Change Date as each is defined in accordance with the LICENSE file.
*/

// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: chainer.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.seldon.mlops.chainer;

@kotlin.jvm.JvmName("-initializepipelineTopic")
public inline fun pipelineTopic(block: io.seldon.mlops.chainer.PipelineTopicKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.chainer.ChainerOuterClass.PipelineTopic =
  io.seldon.mlops.chainer.PipelineTopicKt.Dsl._create(io.seldon.mlops.chainer.ChainerOuterClass.PipelineTopic.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `seldon.mlops.chainer.PipelineTopic`
 */
public object PipelineTopicKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.seldon.mlops.chainer.ChainerOuterClass.PipelineTopic.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.seldon.mlops.chainer.ChainerOuterClass.PipelineTopic.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.seldon.mlops.chainer.ChainerOuterClass.PipelineTopic = _builder.build()

    /**
     * `string pipelineName = 1;`
     */
    public var pipelineName: kotlin.String
      @JvmName("getPipelineName")
      get() = _builder.getPipelineName()
      @JvmName("setPipelineName")
      set(value) {
        _builder.setPipelineName(value)
      }
    /**
     * `string pipelineName = 1;`
     */
    public fun clearPipelineName() {
      _builder.clearPipelineName()
    }

    /**
     * `string topicName = 2;`
     */
    public var topicName: kotlin.String
      @JvmName("getTopicName")
      get() = _builder.getTopicName()
      @JvmName("setTopicName")
      set(value) {
        _builder.setTopicName(value)
      }
    /**
     * `string topicName = 2;`
     */
    public fun clearTopicName() {
      _builder.clearTopicName()
    }

    /**
     * `optional string tensor = 3;`
     */
    public var tensor: kotlin.String
      @JvmName("getTensor")
      get() = _builder.getTensor()
      @JvmName("setTensor")
      set(value) {
        _builder.setTensor(value)
      }
    /**
     * `optional string tensor = 3;`
     */
    public fun clearTensor() {
      _builder.clearTensor()
    }
    /**
     * `optional string tensor = 3;`
     * @return Whether the tensor field is set.
     */
    public fun hasTensor(): kotlin.Boolean {
      return _builder.hasTensor()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun io.seldon.mlops.chainer.ChainerOuterClass.PipelineTopic.copy(block: `io.seldon.mlops.chainer`.PipelineTopicKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.chainer.ChainerOuterClass.PipelineTopic =
  `io.seldon.mlops.chainer`.PipelineTopicKt.Dsl._create(this.toBuilder()).apply { block() }._build()

