//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: chainer.proto

package io.seldon.mlops.chainer;

@kotlin.jvm.JvmName("-initializepipelineTensorMapping")
public inline fun pipelineTensorMapping(block: io.seldon.mlops.chainer.PipelineTensorMappingKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.chainer.ChainerOuterClass.PipelineTensorMapping =
  io.seldon.mlops.chainer.PipelineTensorMappingKt.Dsl._create(io.seldon.mlops.chainer.ChainerOuterClass.PipelineTensorMapping.newBuilder()).apply { block() }._build()
public object PipelineTensorMappingKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.seldon.mlops.chainer.ChainerOuterClass.PipelineTensorMapping.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.seldon.mlops.chainer.ChainerOuterClass.PipelineTensorMapping.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.seldon.mlops.chainer.ChainerOuterClass.PipelineTensorMapping = _builder.build()

    /**
     * <code>string pipelineName = 1;</code>
     */
    public var pipelineName: kotlin.String
      @JvmName("getPipelineName")
      get() = _builder.getPipelineName()
      @JvmName("setPipelineName")
      set(value) {
        _builder.setPipelineName(value)
      }
    /**
     * <code>string pipelineName = 1;</code>
     */
    public fun clearPipelineName() {
      _builder.clearPipelineName()
    }

    /**
     * <code>string topicAndTensor = 2;</code>
     */
    public var topicAndTensor: kotlin.String
      @JvmName("getTopicAndTensor")
      get() = _builder.getTopicAndTensor()
      @JvmName("setTopicAndTensor")
      set(value) {
        _builder.setTopicAndTensor(value)
      }
    /**
     * <code>string topicAndTensor = 2;</code>
     */
    public fun clearTopicAndTensor() {
      _builder.clearTopicAndTensor()
    }

    /**
     * <code>string tensorName = 3;</code>
     */
    public var tensorName: kotlin.String
      @JvmName("getTensorName")
      get() = _builder.getTensorName()
      @JvmName("setTensorName")
      set(value) {
        _builder.setTensorName(value)
      }
    /**
     * <code>string tensorName = 3;</code>
     */
    public fun clearTensorName() {
      _builder.clearTensorName()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun io.seldon.mlops.chainer.ChainerOuterClass.PipelineTensorMapping.copy(block: io.seldon.mlops.chainer.PipelineTensorMappingKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.chainer.ChainerOuterClass.PipelineTensorMapping =
  io.seldon.mlops.chainer.PipelineTensorMappingKt.Dsl._create(this.toBuilder()).apply { block() }._build()

