/*
Copyright (c) 2024 Seldon Technologies Ltd.

Use of this software is governed BY
(1) the license included in the LICENSE file or
(2) if the license included in the LICENSE file is the Business Source License 1.1,
the Change License after the Change Date as each is defined in accordance with the LICENSE file.
*/

// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: chainer.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.seldon.mlops.chainer;

@kotlin.jvm.JvmName("-initializepipelineTensorMapping")
public inline fun pipelineTensorMapping(block: io.seldon.mlops.chainer.PipelineTensorMappingKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.chainer.ChainerOuterClass.PipelineTensorMapping =
  io.seldon.mlops.chainer.PipelineTensorMappingKt.Dsl._create(io.seldon.mlops.chainer.ChainerOuterClass.PipelineTensorMapping.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `seldon.mlops.chainer.PipelineTensorMapping`
 */
public object PipelineTensorMappingKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.seldon.mlops.chainer.ChainerOuterClass.PipelineTensorMapping.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.seldon.mlops.chainer.ChainerOuterClass.PipelineTensorMapping.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.seldon.mlops.chainer.ChainerOuterClass.PipelineTensorMapping = _builder.build()

    /**
     * `string pipelineName = 1;`
     */
    public var pipelineName: kotlin.String
      @JvmName("getPipelineName")
      get() = _builder.getPipelineName()
      @JvmName("setPipelineName")
      set(value) {
        _builder.setPipelineName(value)
      }
    /**
     * `string pipelineName = 1;`
     */
    public fun clearPipelineName() {
      _builder.clearPipelineName()
    }

    /**
     * `string topicAndTensor = 2;`
     */
    public var topicAndTensor: kotlin.String
      @JvmName("getTopicAndTensor")
      get() = _builder.getTopicAndTensor()
      @JvmName("setTopicAndTensor")
      set(value) {
        _builder.setTopicAndTensor(value)
      }
    /**
     * `string topicAndTensor = 2;`
     */
    public fun clearTopicAndTensor() {
      _builder.clearTopicAndTensor()
    }

    /**
     * `string tensorName = 3;`
     */
    public var tensorName: kotlin.String
      @JvmName("getTensorName")
      get() = _builder.getTensorName()
      @JvmName("setTensorName")
      set(value) {
        _builder.setTensorName(value)
      }
    /**
     * `string tensorName = 3;`
     */
    public fun clearTensorName() {
      _builder.clearTensorName()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun io.seldon.mlops.chainer.ChainerOuterClass.PipelineTensorMapping.copy(block: `io.seldon.mlops.chainer`.PipelineTensorMappingKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.chainer.ChainerOuterClass.PipelineTensorMapping =
  `io.seldon.mlops.chainer`.PipelineTensorMappingKt.Dsl._create(this.toBuilder()).apply { block() }._build()

