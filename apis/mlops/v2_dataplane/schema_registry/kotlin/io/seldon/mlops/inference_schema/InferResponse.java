// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: infer_response.proto

// Protobuf Java Version: 3.25.0
package io.seldon.mlops.inference_schema;

public final class InferResponse {
  private InferResponse() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ModelInferResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:inferenceSchema.ModelInferResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The name of the model used for inference.
     * </pre>
     *
     * <code>string model_name = 1;</code>
     * @return The modelName.
     */
    java.lang.String getModelName();
    /**
     * <pre>
     * The name of the model used for inference.
     * </pre>
     *
     * <code>string model_name = 1;</code>
     * @return The bytes for modelName.
     */
    com.google.protobuf.ByteString
        getModelNameBytes();

    /**
     * <pre>
     * The version of the model used for inference.
     * </pre>
     *
     * <code>string model_version = 2;</code>
     * @return The modelVersion.
     */
    java.lang.String getModelVersion();
    /**
     * <pre>
     * The version of the model used for inference.
     * </pre>
     *
     * <code>string model_version = 2;</code>
     * @return The bytes for modelVersion.
     */
    com.google.protobuf.ByteString
        getModelVersionBytes();

    /**
     * <pre>
     * The id of the inference request if one was specified.
     * </pre>
     *
     * <code>string id = 3;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * The id of the inference request if one was specified.
     * </pre>
     *
     * <code>string id = 3;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * Optional inference response parameters.
     * </pre>
     *
     * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
     */
    int getParametersCount();
    /**
     * <pre>
     * Optional inference response parameters.
     * </pre>
     *
     * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
     */
    boolean containsParameters(
        java.lang.String key);
    /**
     * Use {@link #getParametersMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter>
    getParameters();
    /**
     * <pre>
     * Optional inference response parameters.
     * </pre>
     *
     * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
     */
    java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter>
    getParametersMap();
    /**
     * <pre>
     * Optional inference response parameters.
     * </pre>
     *
     * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
     */
    /* nullable */
io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter getParametersOrDefault(
        java.lang.String key,
        /* nullable */
io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter defaultValue);
    /**
     * <pre>
     * Optional inference response parameters.
     * </pre>
     *
     * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
     */
    io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter getParametersOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * The output tensors holding inference results.
     * </pre>
     *
     * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
     */
    java.util.List<io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor> 
        getOutputsList();
    /**
     * <pre>
     * The output tensors holding inference results.
     * </pre>
     *
     * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
     */
    io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor getOutputs(int index);
    /**
     * <pre>
     * The output tensors holding inference results.
     * </pre>
     *
     * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
     */
    int getOutputsCount();
    /**
     * <pre>
     * The output tensors holding inference results.
     * </pre>
     *
     * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
     */
    java.util.List<? extends io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensorOrBuilder> 
        getOutputsOrBuilderList();
    /**
     * <pre>
     * The output tensors holding inference results.
     * </pre>
     *
     * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
     */
    io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensorOrBuilder getOutputsOrBuilder(
        int index);

    /**
     * <pre>
     * The data contained in an output tensor can be represented in
     * "raw" bytes form or in the repeated type that matches the
     * tensor's data type. To use the raw representation 'raw_output_contents'
     * must be initialized with data for each tensor in the same order as
     * 'outputs'. For each tensor, the size of this content must match
     * what is expected by the tensor's shape and data type. The raw
     * data must be the flattened, one-dimensional, row-major order of
     * the tensor elements without any stride or padding between the
     * elements. Note that the FP16 data type must be represented as raw
     * content as there is no specific data type for a 16-bit float
     * type.
     *
     * If this field is specified then InferOutputTensor::contents must
     * not be specified for any output tensor.
     * </pre>
     *
     * <code>repeated bytes raw_output_contents = 6;</code>
     * @return A list containing the rawOutputContents.
     */
    java.util.List<com.google.protobuf.ByteString> getRawOutputContentsList();
    /**
     * <pre>
     * The data contained in an output tensor can be represented in
     * "raw" bytes form or in the repeated type that matches the
     * tensor's data type. To use the raw representation 'raw_output_contents'
     * must be initialized with data for each tensor in the same order as
     * 'outputs'. For each tensor, the size of this content must match
     * what is expected by the tensor's shape and data type. The raw
     * data must be the flattened, one-dimensional, row-major order of
     * the tensor elements without any stride or padding between the
     * elements. Note that the FP16 data type must be represented as raw
     * content as there is no specific data type for a 16-bit float
     * type.
     *
     * If this field is specified then InferOutputTensor::contents must
     * not be specified for any output tensor.
     * </pre>
     *
     * <code>repeated bytes raw_output_contents = 6;</code>
     * @return The count of rawOutputContents.
     */
    int getRawOutputContentsCount();
    /**
     * <pre>
     * The data contained in an output tensor can be represented in
     * "raw" bytes form or in the repeated type that matches the
     * tensor's data type. To use the raw representation 'raw_output_contents'
     * must be initialized with data for each tensor in the same order as
     * 'outputs'. For each tensor, the size of this content must match
     * what is expected by the tensor's shape and data type. The raw
     * data must be the flattened, one-dimensional, row-major order of
     * the tensor elements without any stride or padding between the
     * elements. Note that the FP16 data type must be represented as raw
     * content as there is no specific data type for a 16-bit float
     * type.
     *
     * If this field is specified then InferOutputTensor::contents must
     * not be specified for any output tensor.
     * </pre>
     *
     * <code>repeated bytes raw_output_contents = 6;</code>
     * @param index The index of the element to return.
     * @return The rawOutputContents at the given index.
     */
    com.google.protobuf.ByteString getRawOutputContents(int index);
  }
  /**
   * Protobuf type {@code inferenceSchema.ModelInferResponse}
   */
  public static final class ModelInferResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:inferenceSchema.ModelInferResponse)
      ModelInferResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ModelInferResponse.newBuilder() to construct.
    private ModelInferResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ModelInferResponse() {
      modelName_ = "";
      modelVersion_ = "";
      id_ = "";
      outputs_ = java.util.Collections.emptyList();
      rawOutputContents_ = emptyList(com.google.protobuf.ByteString.class);
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ModelInferResponse();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.seldon.mlops.inference_schema.InferResponse.internal_static_inferenceSchema_ModelInferResponse_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 4:
          return internalGetParameters();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.seldon.mlops.inference_schema.InferResponse.internal_static_inferenceSchema_ModelInferResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.class, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.Builder.class);
    }

    public interface InferTensorContentsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:inferenceSchema.ModelInferResponse.InferTensorContents)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Representation for BOOL data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated bool bool_contents = 1;</code>
       * @return A list containing the boolContents.
       */
      java.util.List<java.lang.Boolean> getBoolContentsList();
      /**
       * <pre>
       * Representation for BOOL data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated bool bool_contents = 1;</code>
       * @return The count of boolContents.
       */
      int getBoolContentsCount();
      /**
       * <pre>
       * Representation for BOOL data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated bool bool_contents = 1;</code>
       * @param index The index of the element to return.
       * @return The boolContents at the given index.
       */
      boolean getBoolContents(int index);

      /**
       * <pre>
       * Representation for INT8, INT16, and INT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * </pre>
       *
       * <code>repeated int32 int_contents = 2;</code>
       * @return A list containing the intContents.
       */
      java.util.List<java.lang.Integer> getIntContentsList();
      /**
       * <pre>
       * Representation for INT8, INT16, and INT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * </pre>
       *
       * <code>repeated int32 int_contents = 2;</code>
       * @return The count of intContents.
       */
      int getIntContentsCount();
      /**
       * <pre>
       * Representation for INT8, INT16, and INT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * </pre>
       *
       * <code>repeated int32 int_contents = 2;</code>
       * @param index The index of the element to return.
       * @return The intContents at the given index.
       */
      int getIntContents(int index);

      /**
       * <pre>
       * Representation for INT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated int64 int64_contents = 3;</code>
       * @return A list containing the int64Contents.
       */
      java.util.List<java.lang.Long> getInt64ContentsList();
      /**
       * <pre>
       * Representation for INT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated int64 int64_contents = 3;</code>
       * @return The count of int64Contents.
       */
      int getInt64ContentsCount();
      /**
       * <pre>
       * Representation for INT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated int64 int64_contents = 3;</code>
       * @param index The index of the element to return.
       * @return The int64Contents at the given index.
       */
      long getInt64Contents(int index);

      /**
       * <pre>
       * Representation for UINT8, UINT16, and UINT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * </pre>
       *
       * <code>repeated uint32 uint_contents = 4;</code>
       * @return A list containing the uintContents.
       */
      java.util.List<java.lang.Integer> getUintContentsList();
      /**
       * <pre>
       * Representation for UINT8, UINT16, and UINT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * </pre>
       *
       * <code>repeated uint32 uint_contents = 4;</code>
       * @return The count of uintContents.
       */
      int getUintContentsCount();
      /**
       * <pre>
       * Representation for UINT8, UINT16, and UINT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * </pre>
       *
       * <code>repeated uint32 uint_contents = 4;</code>
       * @param index The index of the element to return.
       * @return The uintContents at the given index.
       */
      int getUintContents(int index);

      /**
       * <pre>
       * Representation for UINT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated uint64 uint64_contents = 5;</code>
       * @return A list containing the uint64Contents.
       */
      java.util.List<java.lang.Long> getUint64ContentsList();
      /**
       * <pre>
       * Representation for UINT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated uint64 uint64_contents = 5;</code>
       * @return The count of uint64Contents.
       */
      int getUint64ContentsCount();
      /**
       * <pre>
       * Representation for UINT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated uint64 uint64_contents = 5;</code>
       * @param index The index of the element to return.
       * @return The uint64Contents at the given index.
       */
      long getUint64Contents(int index);

      /**
       * <pre>
       * Representation for FP32 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated float fp32_contents = 6;</code>
       * @return A list containing the fp32Contents.
       */
      java.util.List<java.lang.Float> getFp32ContentsList();
      /**
       * <pre>
       * Representation for FP32 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated float fp32_contents = 6;</code>
       * @return The count of fp32Contents.
       */
      int getFp32ContentsCount();
      /**
       * <pre>
       * Representation for FP32 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated float fp32_contents = 6;</code>
       * @param index The index of the element to return.
       * @return The fp32Contents at the given index.
       */
      float getFp32Contents(int index);

      /**
       * <pre>
       * Representation for FP64 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated double fp64_contents = 7;</code>
       * @return A list containing the fp64Contents.
       */
      java.util.List<java.lang.Double> getFp64ContentsList();
      /**
       * <pre>
       * Representation for FP64 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated double fp64_contents = 7;</code>
       * @return The count of fp64Contents.
       */
      int getFp64ContentsCount();
      /**
       * <pre>
       * Representation for FP64 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated double fp64_contents = 7;</code>
       * @param index The index of the element to return.
       * @return The fp64Contents at the given index.
       */
      double getFp64Contents(int index);

      /**
       * <pre>
       * Representation for BYTES data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated bytes bytes_contents = 8;</code>
       * @return A list containing the bytesContents.
       */
      java.util.List<com.google.protobuf.ByteString> getBytesContentsList();
      /**
       * <pre>
       * Representation for BYTES data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated bytes bytes_contents = 8;</code>
       * @return The count of bytesContents.
       */
      int getBytesContentsCount();
      /**
       * <pre>
       * Representation for BYTES data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated bytes bytes_contents = 8;</code>
       * @param index The index of the element to return.
       * @return The bytesContents at the given index.
       */
      com.google.protobuf.ByteString getBytesContents(int index);
    }
    /**
     * <pre>
     * The data contained in a tensor represented by the repeated type
     * that matches the tensor's data type. Protobuf oneof is not used
     * because oneofs cannot contain repeated fields.
     * </pre>
     *
     * Protobuf type {@code inferenceSchema.ModelInferResponse.InferTensorContents}
     */
    public static final class InferTensorContents extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:inferenceSchema.ModelInferResponse.InferTensorContents)
        InferTensorContentsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use InferTensorContents.newBuilder() to construct.
      private InferTensorContents(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private InferTensorContents() {
        boolContents_ = emptyBooleanList();
        intContents_ = emptyIntList();
        int64Contents_ = emptyLongList();
        uintContents_ = emptyIntList();
        uint64Contents_ = emptyLongList();
        fp32Contents_ = emptyFloatList();
        fp64Contents_ = emptyDoubleList();
        bytesContents_ = emptyList(com.google.protobuf.ByteString.class);
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new InferTensorContents();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.seldon.mlops.inference_schema.InferResponse.internal_static_inferenceSchema_ModelInferResponse_InferTensorContents_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.seldon.mlops.inference_schema.InferResponse.internal_static_inferenceSchema_ModelInferResponse_InferTensorContents_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents.class, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents.Builder.class);
      }

      public static final int BOOL_CONTENTS_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.BooleanList boolContents_ =
          emptyBooleanList();
      /**
       * <pre>
       * Representation for BOOL data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated bool bool_contents = 1;</code>
       * @return A list containing the boolContents.
       */
      @java.lang.Override
      public java.util.List<java.lang.Boolean>
          getBoolContentsList() {
        return boolContents_;
      }
      /**
       * <pre>
       * Representation for BOOL data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated bool bool_contents = 1;</code>
       * @return The count of boolContents.
       */
      public int getBoolContentsCount() {
        return boolContents_.size();
      }
      /**
       * <pre>
       * Representation for BOOL data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated bool bool_contents = 1;</code>
       * @param index The index of the element to return.
       * @return The boolContents at the given index.
       */
      public boolean getBoolContents(int index) {
        return boolContents_.getBoolean(index);
      }
      private int boolContentsMemoizedSerializedSize = -1;

      public static final int INT_CONTENTS_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.IntList intContents_ =
          emptyIntList();
      /**
       * <pre>
       * Representation for INT8, INT16, and INT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * </pre>
       *
       * <code>repeated int32 int_contents = 2;</code>
       * @return A list containing the intContents.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getIntContentsList() {
        return intContents_;
      }
      /**
       * <pre>
       * Representation for INT8, INT16, and INT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * </pre>
       *
       * <code>repeated int32 int_contents = 2;</code>
       * @return The count of intContents.
       */
      public int getIntContentsCount() {
        return intContents_.size();
      }
      /**
       * <pre>
       * Representation for INT8, INT16, and INT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * </pre>
       *
       * <code>repeated int32 int_contents = 2;</code>
       * @param index The index of the element to return.
       * @return The intContents at the given index.
       */
      public int getIntContents(int index) {
        return intContents_.getInt(index);
      }
      private int intContentsMemoizedSerializedSize = -1;

      public static final int INT64_CONTENTS_FIELD_NUMBER = 3;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.LongList int64Contents_ =
          emptyLongList();
      /**
       * <pre>
       * Representation for INT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated int64 int64_contents = 3;</code>
       * @return A list containing the int64Contents.
       */
      @java.lang.Override
      public java.util.List<java.lang.Long>
          getInt64ContentsList() {
        return int64Contents_;
      }
      /**
       * <pre>
       * Representation for INT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated int64 int64_contents = 3;</code>
       * @return The count of int64Contents.
       */
      public int getInt64ContentsCount() {
        return int64Contents_.size();
      }
      /**
       * <pre>
       * Representation for INT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated int64 int64_contents = 3;</code>
       * @param index The index of the element to return.
       * @return The int64Contents at the given index.
       */
      public long getInt64Contents(int index) {
        return int64Contents_.getLong(index);
      }
      private int int64ContentsMemoizedSerializedSize = -1;

      public static final int UINT_CONTENTS_FIELD_NUMBER = 4;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.IntList uintContents_ =
          emptyIntList();
      /**
       * <pre>
       * Representation for UINT8, UINT16, and UINT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * </pre>
       *
       * <code>repeated uint32 uint_contents = 4;</code>
       * @return A list containing the uintContents.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getUintContentsList() {
        return uintContents_;
      }
      /**
       * <pre>
       * Representation for UINT8, UINT16, and UINT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * </pre>
       *
       * <code>repeated uint32 uint_contents = 4;</code>
       * @return The count of uintContents.
       */
      public int getUintContentsCount() {
        return uintContents_.size();
      }
      /**
       * <pre>
       * Representation for UINT8, UINT16, and UINT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * </pre>
       *
       * <code>repeated uint32 uint_contents = 4;</code>
       * @param index The index of the element to return.
       * @return The uintContents at the given index.
       */
      public int getUintContents(int index) {
        return uintContents_.getInt(index);
      }
      private int uintContentsMemoizedSerializedSize = -1;

      public static final int UINT64_CONTENTS_FIELD_NUMBER = 5;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.LongList uint64Contents_ =
          emptyLongList();
      /**
       * <pre>
       * Representation for UINT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated uint64 uint64_contents = 5;</code>
       * @return A list containing the uint64Contents.
       */
      @java.lang.Override
      public java.util.List<java.lang.Long>
          getUint64ContentsList() {
        return uint64Contents_;
      }
      /**
       * <pre>
       * Representation for UINT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated uint64 uint64_contents = 5;</code>
       * @return The count of uint64Contents.
       */
      public int getUint64ContentsCount() {
        return uint64Contents_.size();
      }
      /**
       * <pre>
       * Representation for UINT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated uint64 uint64_contents = 5;</code>
       * @param index The index of the element to return.
       * @return The uint64Contents at the given index.
       */
      public long getUint64Contents(int index) {
        return uint64Contents_.getLong(index);
      }
      private int uint64ContentsMemoizedSerializedSize = -1;

      public static final int FP32_CONTENTS_FIELD_NUMBER = 6;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.FloatList fp32Contents_ =
          emptyFloatList();
      /**
       * <pre>
       * Representation for FP32 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated float fp32_contents = 6;</code>
       * @return A list containing the fp32Contents.
       */
      @java.lang.Override
      public java.util.List<java.lang.Float>
          getFp32ContentsList() {
        return fp32Contents_;
      }
      /**
       * <pre>
       * Representation for FP32 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated float fp32_contents = 6;</code>
       * @return The count of fp32Contents.
       */
      public int getFp32ContentsCount() {
        return fp32Contents_.size();
      }
      /**
       * <pre>
       * Representation for FP32 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated float fp32_contents = 6;</code>
       * @param index The index of the element to return.
       * @return The fp32Contents at the given index.
       */
      public float getFp32Contents(int index) {
        return fp32Contents_.getFloat(index);
      }
      private int fp32ContentsMemoizedSerializedSize = -1;

      public static final int FP64_CONTENTS_FIELD_NUMBER = 7;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.DoubleList fp64Contents_ =
          emptyDoubleList();
      /**
       * <pre>
       * Representation for FP64 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated double fp64_contents = 7;</code>
       * @return A list containing the fp64Contents.
       */
      @java.lang.Override
      public java.util.List<java.lang.Double>
          getFp64ContentsList() {
        return fp64Contents_;
      }
      /**
       * <pre>
       * Representation for FP64 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated double fp64_contents = 7;</code>
       * @return The count of fp64Contents.
       */
      public int getFp64ContentsCount() {
        return fp64Contents_.size();
      }
      /**
       * <pre>
       * Representation for FP64 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated double fp64_contents = 7;</code>
       * @param index The index of the element to return.
       * @return The fp64Contents at the given index.
       */
      public double getFp64Contents(int index) {
        return fp64Contents_.getDouble(index);
      }
      private int fp64ContentsMemoizedSerializedSize = -1;

      public static final int BYTES_CONTENTS_FIELD_NUMBER = 8;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> bytesContents_ =
          emptyList(com.google.protobuf.ByteString.class);
      /**
       * <pre>
       * Representation for BYTES data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated bytes bytes_contents = 8;</code>
       * @return A list containing the bytesContents.
       */
      @java.lang.Override
      public java.util.List<com.google.protobuf.ByteString>
          getBytesContentsList() {
        return bytesContents_;
      }
      /**
       * <pre>
       * Representation for BYTES data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated bytes bytes_contents = 8;</code>
       * @return The count of bytesContents.
       */
      public int getBytesContentsCount() {
        return bytesContents_.size();
      }
      /**
       * <pre>
       * Representation for BYTES data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * </pre>
       *
       * <code>repeated bytes bytes_contents = 8;</code>
       * @param index The index of the element to return.
       * @return The bytesContents at the given index.
       */
      public com.google.protobuf.ByteString getBytesContents(int index) {
        return bytesContents_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (getBoolContentsList().size() > 0) {
          output.writeUInt32NoTag(10);
          output.writeUInt32NoTag(boolContentsMemoizedSerializedSize);
        }
        for (int i = 0; i < boolContents_.size(); i++) {
          output.writeBoolNoTag(boolContents_.getBoolean(i));
        }
        if (getIntContentsList().size() > 0) {
          output.writeUInt32NoTag(18);
          output.writeUInt32NoTag(intContentsMemoizedSerializedSize);
        }
        for (int i = 0; i < intContents_.size(); i++) {
          output.writeInt32NoTag(intContents_.getInt(i));
        }
        if (getInt64ContentsList().size() > 0) {
          output.writeUInt32NoTag(26);
          output.writeUInt32NoTag(int64ContentsMemoizedSerializedSize);
        }
        for (int i = 0; i < int64Contents_.size(); i++) {
          output.writeInt64NoTag(int64Contents_.getLong(i));
        }
        if (getUintContentsList().size() > 0) {
          output.writeUInt32NoTag(34);
          output.writeUInt32NoTag(uintContentsMemoizedSerializedSize);
        }
        for (int i = 0; i < uintContents_.size(); i++) {
          output.writeUInt32NoTag(uintContents_.getInt(i));
        }
        if (getUint64ContentsList().size() > 0) {
          output.writeUInt32NoTag(42);
          output.writeUInt32NoTag(uint64ContentsMemoizedSerializedSize);
        }
        for (int i = 0; i < uint64Contents_.size(); i++) {
          output.writeUInt64NoTag(uint64Contents_.getLong(i));
        }
        if (getFp32ContentsList().size() > 0) {
          output.writeUInt32NoTag(50);
          output.writeUInt32NoTag(fp32ContentsMemoizedSerializedSize);
        }
        for (int i = 0; i < fp32Contents_.size(); i++) {
          output.writeFloatNoTag(fp32Contents_.getFloat(i));
        }
        if (getFp64ContentsList().size() > 0) {
          output.writeUInt32NoTag(58);
          output.writeUInt32NoTag(fp64ContentsMemoizedSerializedSize);
        }
        for (int i = 0; i < fp64Contents_.size(); i++) {
          output.writeDoubleNoTag(fp64Contents_.getDouble(i));
        }
        for (int i = 0; i < bytesContents_.size(); i++) {
          output.writeBytes(8, bytesContents_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          dataSize = 1 * getBoolContentsList().size();
          size += dataSize;
          if (!getBoolContentsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          boolContentsMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < intContents_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(intContents_.getInt(i));
          }
          size += dataSize;
          if (!getIntContentsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          intContentsMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < int64Contents_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt64SizeNoTag(int64Contents_.getLong(i));
          }
          size += dataSize;
          if (!getInt64ContentsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          int64ContentsMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < uintContents_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(uintContents_.getInt(i));
          }
          size += dataSize;
          if (!getUintContentsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          uintContentsMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < uint64Contents_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt64SizeNoTag(uint64Contents_.getLong(i));
          }
          size += dataSize;
          if (!getUint64ContentsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          uint64ContentsMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 4 * getFp32ContentsList().size();
          size += dataSize;
          if (!getFp32ContentsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          fp32ContentsMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getFp64ContentsList().size();
          size += dataSize;
          if (!getFp64ContentsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          fp64ContentsMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < bytesContents_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(bytesContents_.get(i));
          }
          size += dataSize;
          size += 1 * getBytesContentsList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents)) {
          return super.equals(obj);
        }
        io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents other = (io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents) obj;

        if (!getBoolContentsList()
            .equals(other.getBoolContentsList())) return false;
        if (!getIntContentsList()
            .equals(other.getIntContentsList())) return false;
        if (!getInt64ContentsList()
            .equals(other.getInt64ContentsList())) return false;
        if (!getUintContentsList()
            .equals(other.getUintContentsList())) return false;
        if (!getUint64ContentsList()
            .equals(other.getUint64ContentsList())) return false;
        if (!getFp32ContentsList()
            .equals(other.getFp32ContentsList())) return false;
        if (!getFp64ContentsList()
            .equals(other.getFp64ContentsList())) return false;
        if (!getBytesContentsList()
            .equals(other.getBytesContentsList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getBoolContentsCount() > 0) {
          hash = (37 * hash) + BOOL_CONTENTS_FIELD_NUMBER;
          hash = (53 * hash) + getBoolContentsList().hashCode();
        }
        if (getIntContentsCount() > 0) {
          hash = (37 * hash) + INT_CONTENTS_FIELD_NUMBER;
          hash = (53 * hash) + getIntContentsList().hashCode();
        }
        if (getInt64ContentsCount() > 0) {
          hash = (37 * hash) + INT64_CONTENTS_FIELD_NUMBER;
          hash = (53 * hash) + getInt64ContentsList().hashCode();
        }
        if (getUintContentsCount() > 0) {
          hash = (37 * hash) + UINT_CONTENTS_FIELD_NUMBER;
          hash = (53 * hash) + getUintContentsList().hashCode();
        }
        if (getUint64ContentsCount() > 0) {
          hash = (37 * hash) + UINT64_CONTENTS_FIELD_NUMBER;
          hash = (53 * hash) + getUint64ContentsList().hashCode();
        }
        if (getFp32ContentsCount() > 0) {
          hash = (37 * hash) + FP32_CONTENTS_FIELD_NUMBER;
          hash = (53 * hash) + getFp32ContentsList().hashCode();
        }
        if (getFp64ContentsCount() > 0) {
          hash = (37 * hash) + FP64_CONTENTS_FIELD_NUMBER;
          hash = (53 * hash) + getFp64ContentsList().hashCode();
        }
        if (getBytesContentsCount() > 0) {
          hash = (37 * hash) + BYTES_CONTENTS_FIELD_NUMBER;
          hash = (53 * hash) + getBytesContentsList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * The data contained in a tensor represented by the repeated type
       * that matches the tensor's data type. Protobuf oneof is not used
       * because oneofs cannot contain repeated fields.
       * </pre>
       *
       * Protobuf type {@code inferenceSchema.ModelInferResponse.InferTensorContents}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:inferenceSchema.ModelInferResponse.InferTensorContents)
          io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContentsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.seldon.mlops.inference_schema.InferResponse.internal_static_inferenceSchema_ModelInferResponse_InferTensorContents_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.seldon.mlops.inference_schema.InferResponse.internal_static_inferenceSchema_ModelInferResponse_InferTensorContents_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents.class, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents.Builder.class);
        }

        // Construct using io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          boolContents_ = emptyBooleanList();
          intContents_ = emptyIntList();
          int64Contents_ = emptyLongList();
          uintContents_ = emptyIntList();
          uint64Contents_ = emptyLongList();
          fp32Contents_ = emptyFloatList();
          fp64Contents_ = emptyDoubleList();
          bytesContents_ = emptyList(com.google.protobuf.ByteString.class);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.seldon.mlops.inference_schema.InferResponse.internal_static_inferenceSchema_ModelInferResponse_InferTensorContents_descriptor;
        }

        @java.lang.Override
        public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents getDefaultInstanceForType() {
          return io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents.getDefaultInstance();
        }

        @java.lang.Override
        public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents build() {
          io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents buildPartial() {
          io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents result = new io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            boolContents_.makeImmutable();
            result.boolContents_ = boolContents_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            intContents_.makeImmutable();
            result.intContents_ = intContents_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            int64Contents_.makeImmutable();
            result.int64Contents_ = int64Contents_;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            uintContents_.makeImmutable();
            result.uintContents_ = uintContents_;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            uint64Contents_.makeImmutable();
            result.uint64Contents_ = uint64Contents_;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            fp32Contents_.makeImmutable();
            result.fp32Contents_ = fp32Contents_;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            fp64Contents_.makeImmutable();
            result.fp64Contents_ = fp64Contents_;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            bytesContents_.makeImmutable();
            result.bytesContents_ = bytesContents_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents) {
            return mergeFrom((io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents other) {
          if (other == io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents.getDefaultInstance()) return this;
          if (!other.boolContents_.isEmpty()) {
            if (boolContents_.isEmpty()) {
              boolContents_ = other.boolContents_;
              boolContents_.makeImmutable();
              bitField0_ |= 0x00000001;
            } else {
              ensureBoolContentsIsMutable();
              boolContents_.addAll(other.boolContents_);
            }
            onChanged();
          }
          if (!other.intContents_.isEmpty()) {
            if (intContents_.isEmpty()) {
              intContents_ = other.intContents_;
              intContents_.makeImmutable();
              bitField0_ |= 0x00000002;
            } else {
              ensureIntContentsIsMutable();
              intContents_.addAll(other.intContents_);
            }
            onChanged();
          }
          if (!other.int64Contents_.isEmpty()) {
            if (int64Contents_.isEmpty()) {
              int64Contents_ = other.int64Contents_;
              int64Contents_.makeImmutable();
              bitField0_ |= 0x00000004;
            } else {
              ensureInt64ContentsIsMutable();
              int64Contents_.addAll(other.int64Contents_);
            }
            onChanged();
          }
          if (!other.uintContents_.isEmpty()) {
            if (uintContents_.isEmpty()) {
              uintContents_ = other.uintContents_;
              uintContents_.makeImmutable();
              bitField0_ |= 0x00000008;
            } else {
              ensureUintContentsIsMutable();
              uintContents_.addAll(other.uintContents_);
            }
            onChanged();
          }
          if (!other.uint64Contents_.isEmpty()) {
            if (uint64Contents_.isEmpty()) {
              uint64Contents_ = other.uint64Contents_;
              uint64Contents_.makeImmutable();
              bitField0_ |= 0x00000010;
            } else {
              ensureUint64ContentsIsMutable();
              uint64Contents_.addAll(other.uint64Contents_);
            }
            onChanged();
          }
          if (!other.fp32Contents_.isEmpty()) {
            if (fp32Contents_.isEmpty()) {
              fp32Contents_ = other.fp32Contents_;
              fp32Contents_.makeImmutable();
              bitField0_ |= 0x00000020;
            } else {
              ensureFp32ContentsIsMutable();
              fp32Contents_.addAll(other.fp32Contents_);
            }
            onChanged();
          }
          if (!other.fp64Contents_.isEmpty()) {
            if (fp64Contents_.isEmpty()) {
              fp64Contents_ = other.fp64Contents_;
              fp64Contents_.makeImmutable();
              bitField0_ |= 0x00000040;
            } else {
              ensureFp64ContentsIsMutable();
              fp64Contents_.addAll(other.fp64Contents_);
            }
            onChanged();
          }
          if (!other.bytesContents_.isEmpty()) {
            if (bytesContents_.isEmpty()) {
              bytesContents_ = other.bytesContents_;
              bytesContents_.makeImmutable();
              bitField0_ |= 0x00000080;
            } else {
              ensureBytesContentsIsMutable();
              bytesContents_.addAll(other.bytesContents_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  boolean v = input.readBool();
                  ensureBoolContentsIsMutable();
                  boolContents_.addBoolean(v);
                  break;
                } // case 8
                case 10: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  int alloc = length > 4096 ? 4096 : length;
                  ensureBoolContentsIsMutable(alloc / 1);
                  while (input.getBytesUntilLimit() > 0) {
                    boolContents_.addBoolean(input.readBool());
                  }
                  input.popLimit(limit);
                  break;
                } // case 10
                case 16: {
                  int v = input.readInt32();
                  ensureIntContentsIsMutable();
                  intContents_.addInt(v);
                  break;
                } // case 16
                case 18: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensureIntContentsIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    intContents_.addInt(input.readInt32());
                  }
                  input.popLimit(limit);
                  break;
                } // case 18
                case 24: {
                  long v = input.readInt64();
                  ensureInt64ContentsIsMutable();
                  int64Contents_.addLong(v);
                  break;
                } // case 24
                case 26: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensureInt64ContentsIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    int64Contents_.addLong(input.readInt64());
                  }
                  input.popLimit(limit);
                  break;
                } // case 26
                case 32: {
                  int v = input.readUInt32();
                  ensureUintContentsIsMutable();
                  uintContents_.addInt(v);
                  break;
                } // case 32
                case 34: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensureUintContentsIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    uintContents_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                } // case 34
                case 40: {
                  long v = input.readUInt64();
                  ensureUint64ContentsIsMutable();
                  uint64Contents_.addLong(v);
                  break;
                } // case 40
                case 42: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensureUint64ContentsIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    uint64Contents_.addLong(input.readUInt64());
                  }
                  input.popLimit(limit);
                  break;
                } // case 42
                case 53: {
                  float v = input.readFloat();
                  ensureFp32ContentsIsMutable();
                  fp32Contents_.addFloat(v);
                  break;
                } // case 53
                case 50: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  int alloc = length > 4096 ? 4096 : length;
                  ensureFp32ContentsIsMutable(alloc / 4);
                  while (input.getBytesUntilLimit() > 0) {
                    fp32Contents_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                } // case 50
                case 57: {
                  double v = input.readDouble();
                  ensureFp64ContentsIsMutable();
                  fp64Contents_.addDouble(v);
                  break;
                } // case 57
                case 58: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  int alloc = length > 4096 ? 4096 : length;
                  ensureFp64ContentsIsMutable(alloc / 8);
                  while (input.getBytesUntilLimit() > 0) {
                    fp64Contents_.addDouble(input.readDouble());
                  }
                  input.popLimit(limit);
                  break;
                } // case 58
                case 66: {
                  com.google.protobuf.ByteString v = input.readBytes();
                  ensureBytesContentsIsMutable();
                  bytesContents_.add(v);
                  break;
                } // case 66
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Internal.BooleanList boolContents_ = emptyBooleanList();
        private void ensureBoolContentsIsMutable() {
          if (!boolContents_.isModifiable()) {
            boolContents_ = makeMutableCopy(boolContents_);
          }
          bitField0_ |= 0x00000001;
        }
        private void ensureBoolContentsIsMutable(int capacity) {
          if (!boolContents_.isModifiable()) {
            boolContents_ = makeMutableCopy(boolContents_, capacity);
          }
          bitField0_ |= 0x00000001;
        }
        /**
         * <pre>
         * Representation for BOOL data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated bool bool_contents = 1;</code>
         * @return A list containing the boolContents.
         */
        public java.util.List<java.lang.Boolean>
            getBoolContentsList() {
          boolContents_.makeImmutable();
          return boolContents_;
        }
        /**
         * <pre>
         * Representation for BOOL data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated bool bool_contents = 1;</code>
         * @return The count of boolContents.
         */
        public int getBoolContentsCount() {
          return boolContents_.size();
        }
        /**
         * <pre>
         * Representation for BOOL data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated bool bool_contents = 1;</code>
         * @param index The index of the element to return.
         * @return The boolContents at the given index.
         */
        public boolean getBoolContents(int index) {
          return boolContents_.getBoolean(index);
        }
        /**
         * <pre>
         * Representation for BOOL data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated bool bool_contents = 1;</code>
         * @param index The index to set the value at.
         * @param value The boolContents to set.
         * @return This builder for chaining.
         */
        public Builder setBoolContents(
            int index, boolean value) {

          ensureBoolContentsIsMutable();
          boolContents_.setBoolean(index, value);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for BOOL data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated bool bool_contents = 1;</code>
         * @param value The boolContents to add.
         * @return This builder for chaining.
         */
        public Builder addBoolContents(boolean value) {

          ensureBoolContentsIsMutable();
          boolContents_.addBoolean(value);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for BOOL data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated bool bool_contents = 1;</code>
         * @param values The boolContents to add.
         * @return This builder for chaining.
         */
        public Builder addAllBoolContents(
            java.lang.Iterable<? extends java.lang.Boolean> values) {
          ensureBoolContentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, boolContents_);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for BOOL data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated bool bool_contents = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearBoolContents() {
          boolContents_ = emptyBooleanList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList intContents_ = emptyIntList();
        private void ensureIntContentsIsMutable() {
          if (!intContents_.isModifiable()) {
            intContents_ = makeMutableCopy(intContents_);
          }
          bitField0_ |= 0x00000002;
        }
        /**
         * <pre>
         * Representation for INT8, INT16, and INT32 data types. The size
         * must match what is expected by the tensor's shape. The contents
         * must be the flattened, one-dimensional, row-major order of the
         * tensor elements.
         * </pre>
         *
         * <code>repeated int32 int_contents = 2;</code>
         * @return A list containing the intContents.
         */
        public java.util.List<java.lang.Integer>
            getIntContentsList() {
          intContents_.makeImmutable();
          return intContents_;
        }
        /**
         * <pre>
         * Representation for INT8, INT16, and INT32 data types. The size
         * must match what is expected by the tensor's shape. The contents
         * must be the flattened, one-dimensional, row-major order of the
         * tensor elements.
         * </pre>
         *
         * <code>repeated int32 int_contents = 2;</code>
         * @return The count of intContents.
         */
        public int getIntContentsCount() {
          return intContents_.size();
        }
        /**
         * <pre>
         * Representation for INT8, INT16, and INT32 data types. The size
         * must match what is expected by the tensor's shape. The contents
         * must be the flattened, one-dimensional, row-major order of the
         * tensor elements.
         * </pre>
         *
         * <code>repeated int32 int_contents = 2;</code>
         * @param index The index of the element to return.
         * @return The intContents at the given index.
         */
        public int getIntContents(int index) {
          return intContents_.getInt(index);
        }
        /**
         * <pre>
         * Representation for INT8, INT16, and INT32 data types. The size
         * must match what is expected by the tensor's shape. The contents
         * must be the flattened, one-dimensional, row-major order of the
         * tensor elements.
         * </pre>
         *
         * <code>repeated int32 int_contents = 2;</code>
         * @param index The index to set the value at.
         * @param value The intContents to set.
         * @return This builder for chaining.
         */
        public Builder setIntContents(
            int index, int value) {

          ensureIntContentsIsMutable();
          intContents_.setInt(index, value);
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for INT8, INT16, and INT32 data types. The size
         * must match what is expected by the tensor's shape. The contents
         * must be the flattened, one-dimensional, row-major order of the
         * tensor elements.
         * </pre>
         *
         * <code>repeated int32 int_contents = 2;</code>
         * @param value The intContents to add.
         * @return This builder for chaining.
         */
        public Builder addIntContents(int value) {

          ensureIntContentsIsMutable();
          intContents_.addInt(value);
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for INT8, INT16, and INT32 data types. The size
         * must match what is expected by the tensor's shape. The contents
         * must be the flattened, one-dimensional, row-major order of the
         * tensor elements.
         * </pre>
         *
         * <code>repeated int32 int_contents = 2;</code>
         * @param values The intContents to add.
         * @return This builder for chaining.
         */
        public Builder addAllIntContents(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureIntContentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, intContents_);
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for INT8, INT16, and INT32 data types. The size
         * must match what is expected by the tensor's shape. The contents
         * must be the flattened, one-dimensional, row-major order of the
         * tensor elements.
         * </pre>
         *
         * <code>repeated int32 int_contents = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearIntContents() {
          intContents_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.LongList int64Contents_ = emptyLongList();
        private void ensureInt64ContentsIsMutable() {
          if (!int64Contents_.isModifiable()) {
            int64Contents_ = makeMutableCopy(int64Contents_);
          }
          bitField0_ |= 0x00000004;
        }
        /**
         * <pre>
         * Representation for INT64 data types. The size must match what
         * is expected by the tensor's shape. The contents must be the
         * flattened, one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated int64 int64_contents = 3;</code>
         * @return A list containing the int64Contents.
         */
        public java.util.List<java.lang.Long>
            getInt64ContentsList() {
          int64Contents_.makeImmutable();
          return int64Contents_;
        }
        /**
         * <pre>
         * Representation for INT64 data types. The size must match what
         * is expected by the tensor's shape. The contents must be the
         * flattened, one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated int64 int64_contents = 3;</code>
         * @return The count of int64Contents.
         */
        public int getInt64ContentsCount() {
          return int64Contents_.size();
        }
        /**
         * <pre>
         * Representation for INT64 data types. The size must match what
         * is expected by the tensor's shape. The contents must be the
         * flattened, one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated int64 int64_contents = 3;</code>
         * @param index The index of the element to return.
         * @return The int64Contents at the given index.
         */
        public long getInt64Contents(int index) {
          return int64Contents_.getLong(index);
        }
        /**
         * <pre>
         * Representation for INT64 data types. The size must match what
         * is expected by the tensor's shape. The contents must be the
         * flattened, one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated int64 int64_contents = 3;</code>
         * @param index The index to set the value at.
         * @param value The int64Contents to set.
         * @return This builder for chaining.
         */
        public Builder setInt64Contents(
            int index, long value) {

          ensureInt64ContentsIsMutable();
          int64Contents_.setLong(index, value);
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for INT64 data types. The size must match what
         * is expected by the tensor's shape. The contents must be the
         * flattened, one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated int64 int64_contents = 3;</code>
         * @param value The int64Contents to add.
         * @return This builder for chaining.
         */
        public Builder addInt64Contents(long value) {

          ensureInt64ContentsIsMutable();
          int64Contents_.addLong(value);
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for INT64 data types. The size must match what
         * is expected by the tensor's shape. The contents must be the
         * flattened, one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated int64 int64_contents = 3;</code>
         * @param values The int64Contents to add.
         * @return This builder for chaining.
         */
        public Builder addAllInt64Contents(
            java.lang.Iterable<? extends java.lang.Long> values) {
          ensureInt64ContentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, int64Contents_);
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for INT64 data types. The size must match what
         * is expected by the tensor's shape. The contents must be the
         * flattened, one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated int64 int64_contents = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearInt64Contents() {
          int64Contents_ = emptyLongList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList uintContents_ = emptyIntList();
        private void ensureUintContentsIsMutable() {
          if (!uintContents_.isModifiable()) {
            uintContents_ = makeMutableCopy(uintContents_);
          }
          bitField0_ |= 0x00000008;
        }
        /**
         * <pre>
         * Representation for UINT8, UINT16, and UINT32 data types. The size
         * must match what is expected by the tensor's shape. The contents
         * must be the flattened, one-dimensional, row-major order of the
         * tensor elements.
         * </pre>
         *
         * <code>repeated uint32 uint_contents = 4;</code>
         * @return A list containing the uintContents.
         */
        public java.util.List<java.lang.Integer>
            getUintContentsList() {
          uintContents_.makeImmutable();
          return uintContents_;
        }
        /**
         * <pre>
         * Representation for UINT8, UINT16, and UINT32 data types. The size
         * must match what is expected by the tensor's shape. The contents
         * must be the flattened, one-dimensional, row-major order of the
         * tensor elements.
         * </pre>
         *
         * <code>repeated uint32 uint_contents = 4;</code>
         * @return The count of uintContents.
         */
        public int getUintContentsCount() {
          return uintContents_.size();
        }
        /**
         * <pre>
         * Representation for UINT8, UINT16, and UINT32 data types. The size
         * must match what is expected by the tensor's shape. The contents
         * must be the flattened, one-dimensional, row-major order of the
         * tensor elements.
         * </pre>
         *
         * <code>repeated uint32 uint_contents = 4;</code>
         * @param index The index of the element to return.
         * @return The uintContents at the given index.
         */
        public int getUintContents(int index) {
          return uintContents_.getInt(index);
        }
        /**
         * <pre>
         * Representation for UINT8, UINT16, and UINT32 data types. The size
         * must match what is expected by the tensor's shape. The contents
         * must be the flattened, one-dimensional, row-major order of the
         * tensor elements.
         * </pre>
         *
         * <code>repeated uint32 uint_contents = 4;</code>
         * @param index The index to set the value at.
         * @param value The uintContents to set.
         * @return This builder for chaining.
         */
        public Builder setUintContents(
            int index, int value) {

          ensureUintContentsIsMutable();
          uintContents_.setInt(index, value);
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for UINT8, UINT16, and UINT32 data types. The size
         * must match what is expected by the tensor's shape. The contents
         * must be the flattened, one-dimensional, row-major order of the
         * tensor elements.
         * </pre>
         *
         * <code>repeated uint32 uint_contents = 4;</code>
         * @param value The uintContents to add.
         * @return This builder for chaining.
         */
        public Builder addUintContents(int value) {

          ensureUintContentsIsMutable();
          uintContents_.addInt(value);
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for UINT8, UINT16, and UINT32 data types. The size
         * must match what is expected by the tensor's shape. The contents
         * must be the flattened, one-dimensional, row-major order of the
         * tensor elements.
         * </pre>
         *
         * <code>repeated uint32 uint_contents = 4;</code>
         * @param values The uintContents to add.
         * @return This builder for chaining.
         */
        public Builder addAllUintContents(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureUintContentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, uintContents_);
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for UINT8, UINT16, and UINT32 data types. The size
         * must match what is expected by the tensor's shape. The contents
         * must be the flattened, one-dimensional, row-major order of the
         * tensor elements.
         * </pre>
         *
         * <code>repeated uint32 uint_contents = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearUintContents() {
          uintContents_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.LongList uint64Contents_ = emptyLongList();
        private void ensureUint64ContentsIsMutable() {
          if (!uint64Contents_.isModifiable()) {
            uint64Contents_ = makeMutableCopy(uint64Contents_);
          }
          bitField0_ |= 0x00000010;
        }
        /**
         * <pre>
         * Representation for UINT64 data types. The size must match what
         * is expected by the tensor's shape. The contents must be the
         * flattened, one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated uint64 uint64_contents = 5;</code>
         * @return A list containing the uint64Contents.
         */
        public java.util.List<java.lang.Long>
            getUint64ContentsList() {
          uint64Contents_.makeImmutable();
          return uint64Contents_;
        }
        /**
         * <pre>
         * Representation for UINT64 data types. The size must match what
         * is expected by the tensor's shape. The contents must be the
         * flattened, one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated uint64 uint64_contents = 5;</code>
         * @return The count of uint64Contents.
         */
        public int getUint64ContentsCount() {
          return uint64Contents_.size();
        }
        /**
         * <pre>
         * Representation for UINT64 data types. The size must match what
         * is expected by the tensor's shape. The contents must be the
         * flattened, one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated uint64 uint64_contents = 5;</code>
         * @param index The index of the element to return.
         * @return The uint64Contents at the given index.
         */
        public long getUint64Contents(int index) {
          return uint64Contents_.getLong(index);
        }
        /**
         * <pre>
         * Representation for UINT64 data types. The size must match what
         * is expected by the tensor's shape. The contents must be the
         * flattened, one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated uint64 uint64_contents = 5;</code>
         * @param index The index to set the value at.
         * @param value The uint64Contents to set.
         * @return This builder for chaining.
         */
        public Builder setUint64Contents(
            int index, long value) {

          ensureUint64ContentsIsMutable();
          uint64Contents_.setLong(index, value);
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for UINT64 data types. The size must match what
         * is expected by the tensor's shape. The contents must be the
         * flattened, one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated uint64 uint64_contents = 5;</code>
         * @param value The uint64Contents to add.
         * @return This builder for chaining.
         */
        public Builder addUint64Contents(long value) {

          ensureUint64ContentsIsMutable();
          uint64Contents_.addLong(value);
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for UINT64 data types. The size must match what
         * is expected by the tensor's shape. The contents must be the
         * flattened, one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated uint64 uint64_contents = 5;</code>
         * @param values The uint64Contents to add.
         * @return This builder for chaining.
         */
        public Builder addAllUint64Contents(
            java.lang.Iterable<? extends java.lang.Long> values) {
          ensureUint64ContentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, uint64Contents_);
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for UINT64 data types. The size must match what
         * is expected by the tensor's shape. The contents must be the
         * flattened, one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated uint64 uint64_contents = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearUint64Contents() {
          uint64Contents_ = emptyLongList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.FloatList fp32Contents_ = emptyFloatList();
        private void ensureFp32ContentsIsMutable() {
          if (!fp32Contents_.isModifiable()) {
            fp32Contents_ = makeMutableCopy(fp32Contents_);
          }
          bitField0_ |= 0x00000020;
        }
        private void ensureFp32ContentsIsMutable(int capacity) {
          if (!fp32Contents_.isModifiable()) {
            fp32Contents_ = makeMutableCopy(fp32Contents_, capacity);
          }
          bitField0_ |= 0x00000020;
        }
        /**
         * <pre>
         * Representation for FP32 data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated float fp32_contents = 6;</code>
         * @return A list containing the fp32Contents.
         */
        public java.util.List<java.lang.Float>
            getFp32ContentsList() {
          fp32Contents_.makeImmutable();
          return fp32Contents_;
        }
        /**
         * <pre>
         * Representation for FP32 data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated float fp32_contents = 6;</code>
         * @return The count of fp32Contents.
         */
        public int getFp32ContentsCount() {
          return fp32Contents_.size();
        }
        /**
         * <pre>
         * Representation for FP32 data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated float fp32_contents = 6;</code>
         * @param index The index of the element to return.
         * @return The fp32Contents at the given index.
         */
        public float getFp32Contents(int index) {
          return fp32Contents_.getFloat(index);
        }
        /**
         * <pre>
         * Representation for FP32 data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated float fp32_contents = 6;</code>
         * @param index The index to set the value at.
         * @param value The fp32Contents to set.
         * @return This builder for chaining.
         */
        public Builder setFp32Contents(
            int index, float value) {

          ensureFp32ContentsIsMutable();
          fp32Contents_.setFloat(index, value);
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for FP32 data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated float fp32_contents = 6;</code>
         * @param value The fp32Contents to add.
         * @return This builder for chaining.
         */
        public Builder addFp32Contents(float value) {

          ensureFp32ContentsIsMutable();
          fp32Contents_.addFloat(value);
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for FP32 data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated float fp32_contents = 6;</code>
         * @param values The fp32Contents to add.
         * @return This builder for chaining.
         */
        public Builder addAllFp32Contents(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensureFp32ContentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fp32Contents_);
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for FP32 data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated float fp32_contents = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearFp32Contents() {
          fp32Contents_ = emptyFloatList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.DoubleList fp64Contents_ = emptyDoubleList();
        private void ensureFp64ContentsIsMutable() {
          if (!fp64Contents_.isModifiable()) {
            fp64Contents_ = makeMutableCopy(fp64Contents_);
          }
          bitField0_ |= 0x00000040;
        }
        private void ensureFp64ContentsIsMutable(int capacity) {
          if (!fp64Contents_.isModifiable()) {
            fp64Contents_ = makeMutableCopy(fp64Contents_, capacity);
          }
          bitField0_ |= 0x00000040;
        }
        /**
         * <pre>
         * Representation for FP64 data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated double fp64_contents = 7;</code>
         * @return A list containing the fp64Contents.
         */
        public java.util.List<java.lang.Double>
            getFp64ContentsList() {
          fp64Contents_.makeImmutable();
          return fp64Contents_;
        }
        /**
         * <pre>
         * Representation for FP64 data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated double fp64_contents = 7;</code>
         * @return The count of fp64Contents.
         */
        public int getFp64ContentsCount() {
          return fp64Contents_.size();
        }
        /**
         * <pre>
         * Representation for FP64 data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated double fp64_contents = 7;</code>
         * @param index The index of the element to return.
         * @return The fp64Contents at the given index.
         */
        public double getFp64Contents(int index) {
          return fp64Contents_.getDouble(index);
        }
        /**
         * <pre>
         * Representation for FP64 data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated double fp64_contents = 7;</code>
         * @param index The index to set the value at.
         * @param value The fp64Contents to set.
         * @return This builder for chaining.
         */
        public Builder setFp64Contents(
            int index, double value) {

          ensureFp64ContentsIsMutable();
          fp64Contents_.setDouble(index, value);
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for FP64 data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated double fp64_contents = 7;</code>
         * @param value The fp64Contents to add.
         * @return This builder for chaining.
         */
        public Builder addFp64Contents(double value) {

          ensureFp64ContentsIsMutable();
          fp64Contents_.addDouble(value);
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for FP64 data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated double fp64_contents = 7;</code>
         * @param values The fp64Contents to add.
         * @return This builder for chaining.
         */
        public Builder addAllFp64Contents(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureFp64ContentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fp64Contents_);
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for FP64 data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated double fp64_contents = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearFp64Contents() {
          fp64Contents_ = emptyDoubleList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> bytesContents_ = emptyList(com.google.protobuf.ByteString.class);
        private void ensureBytesContentsIsMutable() {
          if (!bytesContents_.isModifiable()) {
            bytesContents_ = makeMutableCopy(bytesContents_);
          }
          bitField0_ |= 0x00000080;
        }
        /**
         * <pre>
         * Representation for BYTES data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated bytes bytes_contents = 8;</code>
         * @return A list containing the bytesContents.
         */
        public java.util.List<com.google.protobuf.ByteString>
            getBytesContentsList() {
          bytesContents_.makeImmutable();
          return bytesContents_;
        }
        /**
         * <pre>
         * Representation for BYTES data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated bytes bytes_contents = 8;</code>
         * @return The count of bytesContents.
         */
        public int getBytesContentsCount() {
          return bytesContents_.size();
        }
        /**
         * <pre>
         * Representation for BYTES data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated bytes bytes_contents = 8;</code>
         * @param index The index of the element to return.
         * @return The bytesContents at the given index.
         */
        public com.google.protobuf.ByteString getBytesContents(int index) {
          return bytesContents_.get(index);
        }
        /**
         * <pre>
         * Representation for BYTES data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated bytes bytes_contents = 8;</code>
         * @param index The index to set the value at.
         * @param value The bytesContents to set.
         * @return This builder for chaining.
         */
        public Builder setBytesContents(
            int index, com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          ensureBytesContentsIsMutable();
          bytesContents_.set(index, value);
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for BYTES data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated bytes bytes_contents = 8;</code>
         * @param value The bytesContents to add.
         * @return This builder for chaining.
         */
        public Builder addBytesContents(com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          ensureBytesContentsIsMutable();
          bytesContents_.add(value);
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for BYTES data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated bytes bytes_contents = 8;</code>
         * @param values The bytesContents to add.
         * @return This builder for chaining.
         */
        public Builder addAllBytesContents(
            java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
          ensureBytesContentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, bytesContents_);
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Representation for BYTES data type. The size must match what is
         * expected by the tensor's shape. The contents must be the flattened,
         * one-dimensional, row-major order of the tensor elements.
         * </pre>
         *
         * <code>repeated bytes bytes_contents = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearBytesContents() {
          bytesContents_ = emptyList(com.google.protobuf.ByteString.class);
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:inferenceSchema.ModelInferResponse.InferTensorContents)
      }

      // @@protoc_insertion_point(class_scope:inferenceSchema.ModelInferResponse.InferTensorContents)
      private static final io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents();
      }

      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<InferTensorContents>
          PARSER = new com.google.protobuf.AbstractParser<InferTensorContents>() {
        @java.lang.Override
        public InferTensorContents parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<InferTensorContents> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<InferTensorContents> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface InferParameterOrBuilder extends
        // @@protoc_insertion_point(interface_extends:inferenceSchema.ModelInferResponse.InferParameter)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * A boolean parameter value.
       * </pre>
       *
       * <code>bool bool_param = 1;</code>
       * @return Whether the boolParam field is set.
       */
      boolean hasBoolParam();
      /**
       * <pre>
       * A boolean parameter value.
       * </pre>
       *
       * <code>bool bool_param = 1;</code>
       * @return The boolParam.
       */
      boolean getBoolParam();

      /**
       * <pre>
       * An int64 parameter value.
       * </pre>
       *
       * <code>int64 int64_param = 2;</code>
       * @return Whether the int64Param field is set.
       */
      boolean hasInt64Param();
      /**
       * <pre>
       * An int64 parameter value.
       * </pre>
       *
       * <code>int64 int64_param = 2;</code>
       * @return The int64Param.
       */
      long getInt64Param();

      /**
       * <pre>
       * A string parameter value.
       * </pre>
       *
       * <code>string string_param = 3;</code>
       * @return Whether the stringParam field is set.
       */
      boolean hasStringParam();
      /**
       * <pre>
       * A string parameter value.
       * </pre>
       *
       * <code>string string_param = 3;</code>
       * @return The stringParam.
       */
      java.lang.String getStringParam();
      /**
       * <pre>
       * A string parameter value.
       * </pre>
       *
       * <code>string string_param = 3;</code>
       * @return The bytes for stringParam.
       */
      com.google.protobuf.ByteString
          getStringParamBytes();

      io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.ParameterChoiceCase getParameterChoiceCase();
    }
    /**
     * <pre>
     * An inference parameter value. The Parameters message describes a
     * “name”/”value” pair, where the “name” is the name of the parameter
     * and the “value” is a boolean, integer, or string corresponding to
     * the parameter.
     * </pre>
     *
     * Protobuf type {@code inferenceSchema.ModelInferResponse.InferParameter}
     */
    public static final class InferParameter extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:inferenceSchema.ModelInferResponse.InferParameter)
        InferParameterOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use InferParameter.newBuilder() to construct.
      private InferParameter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private InferParameter() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new InferParameter();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.seldon.mlops.inference_schema.InferResponse.internal_static_inferenceSchema_ModelInferResponse_InferParameter_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.seldon.mlops.inference_schema.InferResponse.internal_static_inferenceSchema_ModelInferResponse_InferParameter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.class, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.Builder.class);
      }

      private int parameterChoiceCase_ = 0;
      @SuppressWarnings("serial")
      private java.lang.Object parameterChoice_;
      public enum ParameterChoiceCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        BOOL_PARAM(1),
        INT64_PARAM(2),
        STRING_PARAM(3),
        PARAMETERCHOICE_NOT_SET(0);
        private final int value;
        private ParameterChoiceCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static ParameterChoiceCase valueOf(int value) {
          return forNumber(value);
        }

        public static ParameterChoiceCase forNumber(int value) {
          switch (value) {
            case 1: return BOOL_PARAM;
            case 2: return INT64_PARAM;
            case 3: return STRING_PARAM;
            case 0: return PARAMETERCHOICE_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public ParameterChoiceCase
      getParameterChoiceCase() {
        return ParameterChoiceCase.forNumber(
            parameterChoiceCase_);
      }

      public static final int BOOL_PARAM_FIELD_NUMBER = 1;
      /**
       * <pre>
       * A boolean parameter value.
       * </pre>
       *
       * <code>bool bool_param = 1;</code>
       * @return Whether the boolParam field is set.
       */
      @java.lang.Override
      public boolean hasBoolParam() {
        return parameterChoiceCase_ == 1;
      }
      /**
       * <pre>
       * A boolean parameter value.
       * </pre>
       *
       * <code>bool bool_param = 1;</code>
       * @return The boolParam.
       */
      @java.lang.Override
      public boolean getBoolParam() {
        if (parameterChoiceCase_ == 1) {
          return (java.lang.Boolean) parameterChoice_;
        }
        return false;
      }

      public static final int INT64_PARAM_FIELD_NUMBER = 2;
      /**
       * <pre>
       * An int64 parameter value.
       * </pre>
       *
       * <code>int64 int64_param = 2;</code>
       * @return Whether the int64Param field is set.
       */
      @java.lang.Override
      public boolean hasInt64Param() {
        return parameterChoiceCase_ == 2;
      }
      /**
       * <pre>
       * An int64 parameter value.
       * </pre>
       *
       * <code>int64 int64_param = 2;</code>
       * @return The int64Param.
       */
      @java.lang.Override
      public long getInt64Param() {
        if (parameterChoiceCase_ == 2) {
          return (java.lang.Long) parameterChoice_;
        }
        return 0L;
      }

      public static final int STRING_PARAM_FIELD_NUMBER = 3;
      /**
       * <pre>
       * A string parameter value.
       * </pre>
       *
       * <code>string string_param = 3;</code>
       * @return Whether the stringParam field is set.
       */
      public boolean hasStringParam() {
        return parameterChoiceCase_ == 3;
      }
      /**
       * <pre>
       * A string parameter value.
       * </pre>
       *
       * <code>string string_param = 3;</code>
       * @return The stringParam.
       */
      public java.lang.String getStringParam() {
        java.lang.Object ref = "";
        if (parameterChoiceCase_ == 3) {
          ref = parameterChoice_;
        }
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (parameterChoiceCase_ == 3) {
            parameterChoice_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * A string parameter value.
       * </pre>
       *
       * <code>string string_param = 3;</code>
       * @return The bytes for stringParam.
       */
      public com.google.protobuf.ByteString
          getStringParamBytes() {
        java.lang.Object ref = "";
        if (parameterChoiceCase_ == 3) {
          ref = parameterChoice_;
        }
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (parameterChoiceCase_ == 3) {
            parameterChoice_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (parameterChoiceCase_ == 1) {
          output.writeBool(
              1, (boolean)((java.lang.Boolean) parameterChoice_));
        }
        if (parameterChoiceCase_ == 2) {
          output.writeInt64(
              2, (long)((java.lang.Long) parameterChoice_));
        }
        if (parameterChoiceCase_ == 3) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, parameterChoice_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (parameterChoiceCase_ == 1) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(
                1, (boolean)((java.lang.Boolean) parameterChoice_));
        }
        if (parameterChoiceCase_ == 2) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(
                2, (long)((java.lang.Long) parameterChoice_));
        }
        if (parameterChoiceCase_ == 3) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, parameterChoice_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter)) {
          return super.equals(obj);
        }
        io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter other = (io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter) obj;

        if (!getParameterChoiceCase().equals(other.getParameterChoiceCase())) return false;
        switch (parameterChoiceCase_) {
          case 1:
            if (getBoolParam()
                != other.getBoolParam()) return false;
            break;
          case 2:
            if (getInt64Param()
                != other.getInt64Param()) return false;
            break;
          case 3:
            if (!getStringParam()
                .equals(other.getStringParam())) return false;
            break;
          case 0:
          default:
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        switch (parameterChoiceCase_) {
          case 1:
            hash = (37 * hash) + BOOL_PARAM_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getBoolParam());
            break;
          case 2:
            hash = (37 * hash) + INT64_PARAM_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getInt64Param());
            break;
          case 3:
            hash = (37 * hash) + STRING_PARAM_FIELD_NUMBER;
            hash = (53 * hash) + getStringParam().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * An inference parameter value. The Parameters message describes a
       * “name”/”value” pair, where the “name” is the name of the parameter
       * and the “value” is a boolean, integer, or string corresponding to
       * the parameter.
       * </pre>
       *
       * Protobuf type {@code inferenceSchema.ModelInferResponse.InferParameter}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:inferenceSchema.ModelInferResponse.InferParameter)
          io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameterOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.seldon.mlops.inference_schema.InferResponse.internal_static_inferenceSchema_ModelInferResponse_InferParameter_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.seldon.mlops.inference_schema.InferResponse.internal_static_inferenceSchema_ModelInferResponse_InferParameter_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.class, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.Builder.class);
        }

        // Construct using io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          parameterChoiceCase_ = 0;
          parameterChoice_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.seldon.mlops.inference_schema.InferResponse.internal_static_inferenceSchema_ModelInferResponse_InferParameter_descriptor;
        }

        @java.lang.Override
        public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter getDefaultInstanceForType() {
          return io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.getDefaultInstance();
        }

        @java.lang.Override
        public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter build() {
          io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter buildPartial() {
          io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter result = new io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          buildPartialOneofs(result);
          onBuilt();
          return result;
        }

        private void buildPartial0(io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter result) {
          int from_bitField0_ = bitField0_;
        }

        private void buildPartialOneofs(io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter result) {
          result.parameterChoiceCase_ = parameterChoiceCase_;
          result.parameterChoice_ = this.parameterChoice_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter) {
            return mergeFrom((io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter other) {
          if (other == io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.getDefaultInstance()) return this;
          switch (other.getParameterChoiceCase()) {
            case BOOL_PARAM: {
              setBoolParam(other.getBoolParam());
              break;
            }
            case INT64_PARAM: {
              setInt64Param(other.getInt64Param());
              break;
            }
            case STRING_PARAM: {
              parameterChoiceCase_ = 3;
              parameterChoice_ = other.parameterChoice_;
              onChanged();
              break;
            }
            case PARAMETERCHOICE_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  parameterChoice_ = input.readBool();
                  parameterChoiceCase_ = 1;
                  break;
                } // case 8
                case 16: {
                  parameterChoice_ = input.readInt64();
                  parameterChoiceCase_ = 2;
                  break;
                } // case 16
                case 26: {
                  java.lang.String s = input.readStringRequireUtf8();
                  parameterChoiceCase_ = 3;
                  parameterChoice_ = s;
                  break;
                } // case 26
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int parameterChoiceCase_ = 0;
        private java.lang.Object parameterChoice_;
        public ParameterChoiceCase
            getParameterChoiceCase() {
          return ParameterChoiceCase.forNumber(
              parameterChoiceCase_);
        }

        public Builder clearParameterChoice() {
          parameterChoiceCase_ = 0;
          parameterChoice_ = null;
          onChanged();
          return this;
        }

        private int bitField0_;

        /**
         * <pre>
         * A boolean parameter value.
         * </pre>
         *
         * <code>bool bool_param = 1;</code>
         * @return Whether the boolParam field is set.
         */
        public boolean hasBoolParam() {
          return parameterChoiceCase_ == 1;
        }
        /**
         * <pre>
         * A boolean parameter value.
         * </pre>
         *
         * <code>bool bool_param = 1;</code>
         * @return The boolParam.
         */
        public boolean getBoolParam() {
          if (parameterChoiceCase_ == 1) {
            return (java.lang.Boolean) parameterChoice_;
          }
          return false;
        }
        /**
         * <pre>
         * A boolean parameter value.
         * </pre>
         *
         * <code>bool bool_param = 1;</code>
         * @param value The boolParam to set.
         * @return This builder for chaining.
         */
        public Builder setBoolParam(boolean value) {

          parameterChoiceCase_ = 1;
          parameterChoice_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * A boolean parameter value.
         * </pre>
         *
         * <code>bool bool_param = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearBoolParam() {
          if (parameterChoiceCase_ == 1) {
            parameterChoiceCase_ = 0;
            parameterChoice_ = null;
            onChanged();
          }
          return this;
        }

        /**
         * <pre>
         * An int64 parameter value.
         * </pre>
         *
         * <code>int64 int64_param = 2;</code>
         * @return Whether the int64Param field is set.
         */
        public boolean hasInt64Param() {
          return parameterChoiceCase_ == 2;
        }
        /**
         * <pre>
         * An int64 parameter value.
         * </pre>
         *
         * <code>int64 int64_param = 2;</code>
         * @return The int64Param.
         */
        public long getInt64Param() {
          if (parameterChoiceCase_ == 2) {
            return (java.lang.Long) parameterChoice_;
          }
          return 0L;
        }
        /**
         * <pre>
         * An int64 parameter value.
         * </pre>
         *
         * <code>int64 int64_param = 2;</code>
         * @param value The int64Param to set.
         * @return This builder for chaining.
         */
        public Builder setInt64Param(long value) {

          parameterChoiceCase_ = 2;
          parameterChoice_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * An int64 parameter value.
         * </pre>
         *
         * <code>int64 int64_param = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearInt64Param() {
          if (parameterChoiceCase_ == 2) {
            parameterChoiceCase_ = 0;
            parameterChoice_ = null;
            onChanged();
          }
          return this;
        }

        /**
         * <pre>
         * A string parameter value.
         * </pre>
         *
         * <code>string string_param = 3;</code>
         * @return Whether the stringParam field is set.
         */
        @java.lang.Override
        public boolean hasStringParam() {
          return parameterChoiceCase_ == 3;
        }
        /**
         * <pre>
         * A string parameter value.
         * </pre>
         *
         * <code>string string_param = 3;</code>
         * @return The stringParam.
         */
        @java.lang.Override
        public java.lang.String getStringParam() {
          java.lang.Object ref = "";
          if (parameterChoiceCase_ == 3) {
            ref = parameterChoice_;
          }
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (parameterChoiceCase_ == 3) {
              parameterChoice_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * A string parameter value.
         * </pre>
         *
         * <code>string string_param = 3;</code>
         * @return The bytes for stringParam.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getStringParamBytes() {
          java.lang.Object ref = "";
          if (parameterChoiceCase_ == 3) {
            ref = parameterChoice_;
          }
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            if (parameterChoiceCase_ == 3) {
              parameterChoice_ = b;
            }
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * A string parameter value.
         * </pre>
         *
         * <code>string string_param = 3;</code>
         * @param value The stringParam to set.
         * @return This builder for chaining.
         */
        public Builder setStringParam(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          parameterChoiceCase_ = 3;
          parameterChoice_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * A string parameter value.
         * </pre>
         *
         * <code>string string_param = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearStringParam() {
          if (parameterChoiceCase_ == 3) {
            parameterChoiceCase_ = 0;
            parameterChoice_ = null;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * A string parameter value.
         * </pre>
         *
         * <code>string string_param = 3;</code>
         * @param value The bytes for stringParam to set.
         * @return This builder for chaining.
         */
        public Builder setStringParamBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          parameterChoiceCase_ = 3;
          parameterChoice_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:inferenceSchema.ModelInferResponse.InferParameter)
      }

      // @@protoc_insertion_point(class_scope:inferenceSchema.ModelInferResponse.InferParameter)
      private static final io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter();
      }

      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<InferParameter>
          PARSER = new com.google.protobuf.AbstractParser<InferParameter>() {
        @java.lang.Override
        public InferParameter parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<InferParameter> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<InferParameter> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface InferOutputTensorOrBuilder extends
        // @@protoc_insertion_point(interface_extends:inferenceSchema.ModelInferResponse.InferOutputTensor)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The tensor name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       * The tensor name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <pre>
       * The tensor data type.
       * </pre>
       *
       * <code>string datatype = 2;</code>
       * @return The datatype.
       */
      java.lang.String getDatatype();
      /**
       * <pre>
       * The tensor data type.
       * </pre>
       *
       * <code>string datatype = 2;</code>
       * @return The bytes for datatype.
       */
      com.google.protobuf.ByteString
          getDatatypeBytes();

      /**
       * <pre>
       * The tensor shape.
       * </pre>
       *
       * <code>repeated int64 shape = 3;</code>
       * @return A list containing the shape.
       */
      java.util.List<java.lang.Long> getShapeList();
      /**
       * <pre>
       * The tensor shape.
       * </pre>
       *
       * <code>repeated int64 shape = 3;</code>
       * @return The count of shape.
       */
      int getShapeCount();
      /**
       * <pre>
       * The tensor shape.
       * </pre>
       *
       * <code>repeated int64 shape = 3;</code>
       * @param index The index of the element to return.
       * @return The shape at the given index.
       */
      long getShape(int index);

      /**
       * <pre>
       * Optional output tensor parameters.
       * </pre>
       *
       * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
       */
      int getParametersCount();
      /**
       * <pre>
       * Optional output tensor parameters.
       * </pre>
       *
       * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
       */
      boolean containsParameters(
          java.lang.String key);
      /**
       * Use {@link #getParametersMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter>
      getParameters();
      /**
       * <pre>
       * Optional output tensor parameters.
       * </pre>
       *
       * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
       */
      java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter>
      getParametersMap();
      /**
       * <pre>
       * Optional output tensor parameters.
       * </pre>
       *
       * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
       */
      /* nullable */
io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter getParametersOrDefault(
          java.lang.String key,
          /* nullable */
io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter defaultValue);
      /**
       * <pre>
       * Optional output tensor parameters.
       * </pre>
       *
       * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
       */
      io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter getParametersOrThrow(
          java.lang.String key);

      /**
       * <pre>
       * The tensor contents using a data-type format. This field must
       * not be specified if "raw" tensor contents are being used for
       * the inference response.
       * </pre>
       *
       * <code>.inferenceSchema.ModelInferResponse.InferTensorContents contents = 5;</code>
       * @return Whether the contents field is set.
       */
      boolean hasContents();
      /**
       * <pre>
       * The tensor contents using a data-type format. This field must
       * not be specified if "raw" tensor contents are being used for
       * the inference response.
       * </pre>
       *
       * <code>.inferenceSchema.ModelInferResponse.InferTensorContents contents = 5;</code>
       * @return The contents.
       */
      io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents getContents();
      /**
       * <pre>
       * The tensor contents using a data-type format. This field must
       * not be specified if "raw" tensor contents are being used for
       * the inference response.
       * </pre>
       *
       * <code>.inferenceSchema.ModelInferResponse.InferTensorContents contents = 5;</code>
       */
      io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContentsOrBuilder getContentsOrBuilder();
    }
    /**
     * <pre>
     * An output tensor returned for an inference request.
     * </pre>
     *
     * Protobuf type {@code inferenceSchema.ModelInferResponse.InferOutputTensor}
     */
    public static final class InferOutputTensor extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:inferenceSchema.ModelInferResponse.InferOutputTensor)
        InferOutputTensorOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use InferOutputTensor.newBuilder() to construct.
      private InferOutputTensor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private InferOutputTensor() {
        name_ = "";
        datatype_ = "";
        shape_ = emptyLongList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new InferOutputTensor();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.seldon.mlops.inference_schema.InferResponse.internal_static_inferenceSchema_ModelInferResponse_InferOutputTensor_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      @java.lang.Override
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
          int number) {
        switch (number) {
          case 4:
            return internalGetParameters();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.seldon.mlops.inference_schema.InferResponse.internal_static_inferenceSchema_ModelInferResponse_InferOutputTensor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor.class, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor.Builder.class);
      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object name_ = "";
      /**
       * <pre>
       * The tensor name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The tensor name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DATATYPE_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private volatile java.lang.Object datatype_ = "";
      /**
       * <pre>
       * The tensor data type.
       * </pre>
       *
       * <code>string datatype = 2;</code>
       * @return The datatype.
       */
      @java.lang.Override
      public java.lang.String getDatatype() {
        java.lang.Object ref = datatype_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          datatype_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The tensor data type.
       * </pre>
       *
       * <code>string datatype = 2;</code>
       * @return The bytes for datatype.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDatatypeBytes() {
        java.lang.Object ref = datatype_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          datatype_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SHAPE_FIELD_NUMBER = 3;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.LongList shape_ =
          emptyLongList();
      /**
       * <pre>
       * The tensor shape.
       * </pre>
       *
       * <code>repeated int64 shape = 3;</code>
       * @return A list containing the shape.
       */
      @java.lang.Override
      public java.util.List<java.lang.Long>
          getShapeList() {
        return shape_;
      }
      /**
       * <pre>
       * The tensor shape.
       * </pre>
       *
       * <code>repeated int64 shape = 3;</code>
       * @return The count of shape.
       */
      public int getShapeCount() {
        return shape_.size();
      }
      /**
       * <pre>
       * The tensor shape.
       * </pre>
       *
       * <code>repeated int64 shape = 3;</code>
       * @param index The index of the element to return.
       * @return The shape at the given index.
       */
      public long getShape(int index) {
        return shape_.getLong(index);
      }
      private int shapeMemoizedSerializedSize = -1;

      public static final int PARAMETERS_FIELD_NUMBER = 4;
      private static final class ParametersDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter>newDefaultInstance(
                    io.seldon.mlops.inference_schema.InferResponse.internal_static_inferenceSchema_ModelInferResponse_InferOutputTensor_ParametersEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.MESSAGE,
                    io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.getDefaultInstance());
      }
      @SuppressWarnings("serial")
      private com.google.protobuf.MapField<
          java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> parameters_;
      private com.google.protobuf.MapField<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter>
      internalGetParameters() {
        if (parameters_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ParametersDefaultEntryHolder.defaultEntry);
        }
        return parameters_;
      }
      public int getParametersCount() {
        return internalGetParameters().getMap().size();
      }
      /**
       * <pre>
       * Optional output tensor parameters.
       * </pre>
       *
       * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
       */
      @java.lang.Override
      public boolean containsParameters(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetParameters().getMap().containsKey(key);
      }
      /**
       * Use {@link #getParametersMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> getParameters() {
        return getParametersMap();
      }
      /**
       * <pre>
       * Optional output tensor parameters.
       * </pre>
       *
       * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> getParametersMap() {
        return internalGetParameters().getMap();
      }
      /**
       * <pre>
       * Optional output tensor parameters.
       * </pre>
       *
       * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
       */
      @java.lang.Override
      public /* nullable */
io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter getParametersOrDefault(
          java.lang.String key,
          /* nullable */
io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> map =
            internalGetParameters().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Optional output tensor parameters.
       * </pre>
       *
       * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
       */
      @java.lang.Override
      public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter getParametersOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> map =
            internalGetParameters().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public static final int CONTENTS_FIELD_NUMBER = 5;
      private io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents contents_;
      /**
       * <pre>
       * The tensor contents using a data-type format. This field must
       * not be specified if "raw" tensor contents are being used for
       * the inference response.
       * </pre>
       *
       * <code>.inferenceSchema.ModelInferResponse.InferTensorContents contents = 5;</code>
       * @return Whether the contents field is set.
       */
      @java.lang.Override
      public boolean hasContents() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The tensor contents using a data-type format. This field must
       * not be specified if "raw" tensor contents are being used for
       * the inference response.
       * </pre>
       *
       * <code>.inferenceSchema.ModelInferResponse.InferTensorContents contents = 5;</code>
       * @return The contents.
       */
      @java.lang.Override
      public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents getContents() {
        return contents_ == null ? io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents.getDefaultInstance() : contents_;
      }
      /**
       * <pre>
       * The tensor contents using a data-type format. This field must
       * not be specified if "raw" tensor contents are being used for
       * the inference response.
       * </pre>
       *
       * <code>.inferenceSchema.ModelInferResponse.InferTensorContents contents = 5;</code>
       */
      @java.lang.Override
      public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContentsOrBuilder getContentsOrBuilder() {
        return contents_ == null ? io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents.getDefaultInstance() : contents_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(datatype_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, datatype_);
        }
        if (getShapeList().size() > 0) {
          output.writeUInt32NoTag(26);
          output.writeUInt32NoTag(shapeMemoizedSerializedSize);
        }
        for (int i = 0; i < shape_.size(); i++) {
          output.writeInt64NoTag(shape_.getLong(i));
        }
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetParameters(),
            ParametersDefaultEntryHolder.defaultEntry,
            4);
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeMessage(5, getContents());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(datatype_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, datatype_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < shape_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt64SizeNoTag(shape_.getLong(i));
          }
          size += dataSize;
          if (!getShapeList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          shapeMemoizedSerializedSize = dataSize;
        }
        for (java.util.Map.Entry<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> entry
             : internalGetParameters().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter>
          parameters__ = ParametersDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, parameters__);
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getContents());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor)) {
          return super.equals(obj);
        }
        io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor other = (io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor) obj;

        if (!getName()
            .equals(other.getName())) return false;
        if (!getDatatype()
            .equals(other.getDatatype())) return false;
        if (!getShapeList()
            .equals(other.getShapeList())) return false;
        if (!internalGetParameters().equals(
            other.internalGetParameters())) return false;
        if (hasContents() != other.hasContents()) return false;
        if (hasContents()) {
          if (!getContents()
              .equals(other.getContents())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
        hash = (37 * hash) + DATATYPE_FIELD_NUMBER;
        hash = (53 * hash) + getDatatype().hashCode();
        if (getShapeCount() > 0) {
          hash = (37 * hash) + SHAPE_FIELD_NUMBER;
          hash = (53 * hash) + getShapeList().hashCode();
        }
        if (!internalGetParameters().getMap().isEmpty()) {
          hash = (37 * hash) + PARAMETERS_FIELD_NUMBER;
          hash = (53 * hash) + internalGetParameters().hashCode();
        }
        if (hasContents()) {
          hash = (37 * hash) + CONTENTS_FIELD_NUMBER;
          hash = (53 * hash) + getContents().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * An output tensor returned for an inference request.
       * </pre>
       *
       * Protobuf type {@code inferenceSchema.ModelInferResponse.InferOutputTensor}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:inferenceSchema.ModelInferResponse.InferOutputTensor)
          io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensorOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.seldon.mlops.inference_schema.InferResponse.internal_static_inferenceSchema_ModelInferResponse_InferOutputTensor_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
            int number) {
          switch (number) {
            case 4:
              return internalGetParameters();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
            int number) {
          switch (number) {
            case 4:
              return internalGetMutableParameters();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.seldon.mlops.inference_schema.InferResponse.internal_static_inferenceSchema_ModelInferResponse_InferOutputTensor_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor.class, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor.Builder.class);
        }

        // Construct using io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getContentsFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          name_ = "";
          datatype_ = "";
          shape_ = emptyLongList();
          internalGetMutableParameters().clear();
          contents_ = null;
          if (contentsBuilder_ != null) {
            contentsBuilder_.dispose();
            contentsBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.seldon.mlops.inference_schema.InferResponse.internal_static_inferenceSchema_ModelInferResponse_InferOutputTensor_descriptor;
        }

        @java.lang.Override
        public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor getDefaultInstanceForType() {
          return io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor.getDefaultInstance();
        }

        @java.lang.Override
        public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor build() {
          io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor buildPartial() {
          io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor result = new io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.name_ = name_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.datatype_ = datatype_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            shape_.makeImmutable();
            result.shape_ = shape_;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.parameters_ = internalGetParameters().build(ParametersDefaultEntryHolder.defaultEntry);
          }
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.contents_ = contentsBuilder_ == null
                ? contents_
                : contentsBuilder_.build();
            to_bitField0_ |= 0x00000001;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor) {
            return mergeFrom((io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor other) {
          if (other == io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor.getDefaultInstance()) return this;
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          if (!other.getDatatype().isEmpty()) {
            datatype_ = other.datatype_;
            bitField0_ |= 0x00000002;
            onChanged();
          }
          if (!other.shape_.isEmpty()) {
            if (shape_.isEmpty()) {
              shape_ = other.shape_;
              shape_.makeImmutable();
              bitField0_ |= 0x00000004;
            } else {
              ensureShapeIsMutable();
              shape_.addAll(other.shape_);
            }
            onChanged();
          }
          internalGetMutableParameters().mergeFrom(
              other.internalGetParameters());
          bitField0_ |= 0x00000008;
          if (other.hasContents()) {
            mergeContents(other.getContents());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  name_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  datatype_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                case 24: {
                  long v = input.readInt64();
                  ensureShapeIsMutable();
                  shape_.addLong(v);
                  break;
                } // case 24
                case 26: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensureShapeIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    shape_.addLong(input.readInt64());
                  }
                  input.popLimit(limit);
                  break;
                } // case 26
                case 34: {
                  com.google.protobuf.MapEntry<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter>
                  parameters__ = input.readMessage(
                      ParametersDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                  internalGetMutableParameters().ensureBuilderMap().put(
                      parameters__.getKey(), parameters__.getValue());
                  bitField0_ |= 0x00000008;
                  break;
                } // case 34
                case 42: {
                  input.readMessage(
                      getContentsFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000010;
                  break;
                } // case 42
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <pre>
         * The tensor name.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The tensor name.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The tensor name.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The tensor name.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          name_ = getDefaultInstance().getName();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The tensor name.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          name_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private java.lang.Object datatype_ = "";
        /**
         * <pre>
         * The tensor data type.
         * </pre>
         *
         * <code>string datatype = 2;</code>
         * @return The datatype.
         */
        public java.lang.String getDatatype() {
          java.lang.Object ref = datatype_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            datatype_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The tensor data type.
         * </pre>
         *
         * <code>string datatype = 2;</code>
         * @return The bytes for datatype.
         */
        public com.google.protobuf.ByteString
            getDatatypeBytes() {
          java.lang.Object ref = datatype_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            datatype_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The tensor data type.
         * </pre>
         *
         * <code>string datatype = 2;</code>
         * @param value The datatype to set.
         * @return This builder for chaining.
         */
        public Builder setDatatype(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          datatype_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The tensor data type.
         * </pre>
         *
         * <code>string datatype = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearDatatype() {
          datatype_ = getDefaultInstance().getDatatype();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The tensor data type.
         * </pre>
         *
         * <code>string datatype = 2;</code>
         * @param value The bytes for datatype to set.
         * @return This builder for chaining.
         */
        public Builder setDatatypeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          datatype_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.LongList shape_ = emptyLongList();
        private void ensureShapeIsMutable() {
          if (!shape_.isModifiable()) {
            shape_ = makeMutableCopy(shape_);
          }
          bitField0_ |= 0x00000004;
        }
        /**
         * <pre>
         * The tensor shape.
         * </pre>
         *
         * <code>repeated int64 shape = 3;</code>
         * @return A list containing the shape.
         */
        public java.util.List<java.lang.Long>
            getShapeList() {
          shape_.makeImmutable();
          return shape_;
        }
        /**
         * <pre>
         * The tensor shape.
         * </pre>
         *
         * <code>repeated int64 shape = 3;</code>
         * @return The count of shape.
         */
        public int getShapeCount() {
          return shape_.size();
        }
        /**
         * <pre>
         * The tensor shape.
         * </pre>
         *
         * <code>repeated int64 shape = 3;</code>
         * @param index The index of the element to return.
         * @return The shape at the given index.
         */
        public long getShape(int index) {
          return shape_.getLong(index);
        }
        /**
         * <pre>
         * The tensor shape.
         * </pre>
         *
         * <code>repeated int64 shape = 3;</code>
         * @param index The index to set the value at.
         * @param value The shape to set.
         * @return This builder for chaining.
         */
        public Builder setShape(
            int index, long value) {

          ensureShapeIsMutable();
          shape_.setLong(index, value);
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The tensor shape.
         * </pre>
         *
         * <code>repeated int64 shape = 3;</code>
         * @param value The shape to add.
         * @return This builder for chaining.
         */
        public Builder addShape(long value) {

          ensureShapeIsMutable();
          shape_.addLong(value);
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The tensor shape.
         * </pre>
         *
         * <code>repeated int64 shape = 3;</code>
         * @param values The shape to add.
         * @return This builder for chaining.
         */
        public Builder addAllShape(
            java.lang.Iterable<? extends java.lang.Long> values) {
          ensureShapeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, shape_);
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The tensor shape.
         * </pre>
         *
         * <code>repeated int64 shape = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearShape() {
          shape_ = emptyLongList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }

        private static final class ParametersConverter implements com.google.protobuf.MapFieldBuilder.Converter<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameterOrBuilder, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> {
          @java.lang.Override
          public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter build(io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameterOrBuilder val) {
            if (val instanceof io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter) { return (io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter) val; }
            return ((io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.Builder) val).build();
          }

          @java.lang.Override
          public com.google.protobuf.MapEntry<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> defaultEntry() {
            return ParametersDefaultEntryHolder.defaultEntry;
          }
        };
        private static final ParametersConverter parametersConverter = new ParametersConverter();

        private com.google.protobuf.MapFieldBuilder<
            java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameterOrBuilder, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.Builder> parameters_;
        private com.google.protobuf.MapFieldBuilder<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameterOrBuilder, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.Builder>
            internalGetParameters() {
          if (parameters_ == null) {
            return new com.google.protobuf.MapFieldBuilder<>(parametersConverter);
          }
          return parameters_;
        }
        private com.google.protobuf.MapFieldBuilder<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameterOrBuilder, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.Builder>
            internalGetMutableParameters() {
          if (parameters_ == null) {
            parameters_ = new com.google.protobuf.MapFieldBuilder<>(parametersConverter);
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return parameters_;
        }
        public int getParametersCount() {
          return internalGetParameters().ensureBuilderMap().size();
        }
        /**
         * <pre>
         * Optional output tensor parameters.
         * </pre>
         *
         * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
         */
        @java.lang.Override
        public boolean containsParameters(
            java.lang.String key) {
          if (key == null) { throw new NullPointerException("map key"); }
          return internalGetParameters().ensureBuilderMap().containsKey(key);
        }
        /**
         * Use {@link #getParametersMap()} instead.
         */
        @java.lang.Override
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> getParameters() {
          return getParametersMap();
        }
        /**
         * <pre>
         * Optional output tensor parameters.
         * </pre>
         *
         * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
         */
        @java.lang.Override
        public java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> getParametersMap() {
          return internalGetParameters().getImmutableMap();
        }
        /**
         * <pre>
         * Optional output tensor parameters.
         * </pre>
         *
         * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
         */
        @java.lang.Override
        public /* nullable */
io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter getParametersOrDefault(
            java.lang.String key,
            /* nullable */
io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter defaultValue) {
          if (key == null) { throw new NullPointerException("map key"); }
          java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameterOrBuilder> map = internalGetMutableParameters().ensureBuilderMap();
          return map.containsKey(key) ? parametersConverter.build(map.get(key)) : defaultValue;
        }
        /**
         * <pre>
         * Optional output tensor parameters.
         * </pre>
         *
         * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
         */
        @java.lang.Override
        public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter getParametersOrThrow(
            java.lang.String key) {
          if (key == null) { throw new NullPointerException("map key"); }
          java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameterOrBuilder> map = internalGetMutableParameters().ensureBuilderMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return parametersConverter.build(map.get(key));
        }
        public Builder clearParameters() {
          bitField0_ = (bitField0_ & ~0x00000008);
          internalGetMutableParameters().clear();
          return this;
        }
        /**
         * <pre>
         * Optional output tensor parameters.
         * </pre>
         *
         * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
         */
        public Builder removeParameters(
            java.lang.String key) {
          if (key == null) { throw new NullPointerException("map key"); }
          internalGetMutableParameters().ensureBuilderMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter>
            getMutableParameters() {
          bitField0_ |= 0x00000008;
          return internalGetMutableParameters().ensureMessageMap();
        }
        /**
         * <pre>
         * Optional output tensor parameters.
         * </pre>
         *
         * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
         */
        public Builder putParameters(
            java.lang.String key,
            io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter value) {
          if (key == null) { throw new NullPointerException("map key"); }
          if (value == null) { throw new NullPointerException("map value"); }
          internalGetMutableParameters().ensureBuilderMap()
              .put(key, value);
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <pre>
         * Optional output tensor parameters.
         * </pre>
         *
         * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
         */
        public Builder putAllParameters(
            java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> values) {
          for (java.util.Map.Entry<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> e : values.entrySet()) {
            if (e.getKey() == null || e.getValue() == null) {
              throw new NullPointerException();
            }
          }
          internalGetMutableParameters().ensureBuilderMap()
              .putAll(values);
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <pre>
         * Optional output tensor parameters.
         * </pre>
         *
         * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
         */
        public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.Builder putParametersBuilderIfAbsent(
            java.lang.String key) {
          java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameterOrBuilder> builderMap = internalGetMutableParameters().ensureBuilderMap();
          io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameterOrBuilder entry = builderMap.get(key);
          if (entry == null) {
            entry = io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.newBuilder();
            builderMap.put(key, entry);
          }
          if (entry instanceof io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter) {
            entry = ((io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter) entry).toBuilder();
            builderMap.put(key, entry);
          }
          return (io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.Builder) entry;
        }

        private io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents contents_;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents.Builder, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContentsOrBuilder> contentsBuilder_;
        /**
         * <pre>
         * The tensor contents using a data-type format. This field must
         * not be specified if "raw" tensor contents are being used for
         * the inference response.
         * </pre>
         *
         * <code>.inferenceSchema.ModelInferResponse.InferTensorContents contents = 5;</code>
         * @return Whether the contents field is set.
         */
        public boolean hasContents() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * The tensor contents using a data-type format. This field must
         * not be specified if "raw" tensor contents are being used for
         * the inference response.
         * </pre>
         *
         * <code>.inferenceSchema.ModelInferResponse.InferTensorContents contents = 5;</code>
         * @return The contents.
         */
        public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents getContents() {
          if (contentsBuilder_ == null) {
            return contents_ == null ? io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents.getDefaultInstance() : contents_;
          } else {
            return contentsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The tensor contents using a data-type format. This field must
         * not be specified if "raw" tensor contents are being used for
         * the inference response.
         * </pre>
         *
         * <code>.inferenceSchema.ModelInferResponse.InferTensorContents contents = 5;</code>
         */
        public Builder setContents(io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents value) {
          if (contentsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            contents_ = value;
          } else {
            contentsBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The tensor contents using a data-type format. This field must
         * not be specified if "raw" tensor contents are being used for
         * the inference response.
         * </pre>
         *
         * <code>.inferenceSchema.ModelInferResponse.InferTensorContents contents = 5;</code>
         */
        public Builder setContents(
            io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents.Builder builderForValue) {
          if (contentsBuilder_ == null) {
            contents_ = builderForValue.build();
          } else {
            contentsBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The tensor contents using a data-type format. This field must
         * not be specified if "raw" tensor contents are being used for
         * the inference response.
         * </pre>
         *
         * <code>.inferenceSchema.ModelInferResponse.InferTensorContents contents = 5;</code>
         */
        public Builder mergeContents(io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents value) {
          if (contentsBuilder_ == null) {
            if (((bitField0_ & 0x00000010) != 0) &&
              contents_ != null &&
              contents_ != io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents.getDefaultInstance()) {
              getContentsBuilder().mergeFrom(value);
            } else {
              contents_ = value;
            }
          } else {
            contentsBuilder_.mergeFrom(value);
          }
          if (contents_ != null) {
            bitField0_ |= 0x00000010;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * The tensor contents using a data-type format. This field must
         * not be specified if "raw" tensor contents are being used for
         * the inference response.
         * </pre>
         *
         * <code>.inferenceSchema.ModelInferResponse.InferTensorContents contents = 5;</code>
         */
        public Builder clearContents() {
          bitField0_ = (bitField0_ & ~0x00000010);
          contents_ = null;
          if (contentsBuilder_ != null) {
            contentsBuilder_.dispose();
            contentsBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The tensor contents using a data-type format. This field must
         * not be specified if "raw" tensor contents are being used for
         * the inference response.
         * </pre>
         *
         * <code>.inferenceSchema.ModelInferResponse.InferTensorContents contents = 5;</code>
         */
        public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents.Builder getContentsBuilder() {
          bitField0_ |= 0x00000010;
          onChanged();
          return getContentsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The tensor contents using a data-type format. This field must
         * not be specified if "raw" tensor contents are being used for
         * the inference response.
         * </pre>
         *
         * <code>.inferenceSchema.ModelInferResponse.InferTensorContents contents = 5;</code>
         */
        public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContentsOrBuilder getContentsOrBuilder() {
          if (contentsBuilder_ != null) {
            return contentsBuilder_.getMessageOrBuilder();
          } else {
            return contents_ == null ?
                io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents.getDefaultInstance() : contents_;
          }
        }
        /**
         * <pre>
         * The tensor contents using a data-type format. This field must
         * not be specified if "raw" tensor contents are being used for
         * the inference response.
         * </pre>
         *
         * <code>.inferenceSchema.ModelInferResponse.InferTensorContents contents = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents.Builder, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContentsOrBuilder> 
            getContentsFieldBuilder() {
          if (contentsBuilder_ == null) {
            contentsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContents.Builder, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferTensorContentsOrBuilder>(
                    getContents(),
                    getParentForChildren(),
                    isClean());
            contents_ = null;
          }
          return contentsBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:inferenceSchema.ModelInferResponse.InferOutputTensor)
      }

      // @@protoc_insertion_point(class_scope:inferenceSchema.ModelInferResponse.InferOutputTensor)
      private static final io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor();
      }

      public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<InferOutputTensor>
          PARSER = new com.google.protobuf.AbstractParser<InferOutputTensor>() {
        @java.lang.Override
        public InferOutputTensor parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<InferOutputTensor> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<InferOutputTensor> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int MODEL_NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object modelName_ = "";
    /**
     * <pre>
     * The name of the model used for inference.
     * </pre>
     *
     * <code>string model_name = 1;</code>
     * @return The modelName.
     */
    @java.lang.Override
    public java.lang.String getModelName() {
      java.lang.Object ref = modelName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        modelName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the model used for inference.
     * </pre>
     *
     * <code>string model_name = 1;</code>
     * @return The bytes for modelName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getModelNameBytes() {
      java.lang.Object ref = modelName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        modelName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MODEL_VERSION_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object modelVersion_ = "";
    /**
     * <pre>
     * The version of the model used for inference.
     * </pre>
     *
     * <code>string model_version = 2;</code>
     * @return The modelVersion.
     */
    @java.lang.Override
    public java.lang.String getModelVersion() {
      java.lang.Object ref = modelVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        modelVersion_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The version of the model used for inference.
     * </pre>
     *
     * <code>string model_version = 2;</code>
     * @return The bytes for modelVersion.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getModelVersionBytes() {
      java.lang.Object ref = modelVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        modelVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object id_ = "";
    /**
     * <pre>
     * The id of the inference request if one was specified.
     * </pre>
     *
     * <code>string id = 3;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The id of the inference request if one was specified.
     * </pre>
     *
     * <code>string id = 3;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARAMETERS_FIELD_NUMBER = 4;
    private static final class ParametersDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter>newDefaultInstance(
                  io.seldon.mlops.inference_schema.InferResponse.internal_static_inferenceSchema_ModelInferResponse_ParametersEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> parameters_;
    private com.google.protobuf.MapField<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter>
    internalGetParameters() {
      if (parameters_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ParametersDefaultEntryHolder.defaultEntry);
      }
      return parameters_;
    }
    public int getParametersCount() {
      return internalGetParameters().getMap().size();
    }
    /**
     * <pre>
     * Optional inference response parameters.
     * </pre>
     *
     * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
     */
    @java.lang.Override
    public boolean containsParameters(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetParameters().getMap().containsKey(key);
    }
    /**
     * Use {@link #getParametersMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> getParameters() {
      return getParametersMap();
    }
    /**
     * <pre>
     * Optional inference response parameters.
     * </pre>
     *
     * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> getParametersMap() {
      return internalGetParameters().getMap();
    }
    /**
     * <pre>
     * Optional inference response parameters.
     * </pre>
     *
     * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
     */
    @java.lang.Override
    public /* nullable */
io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter getParametersOrDefault(
        java.lang.String key,
        /* nullable */
io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> map =
          internalGetParameters().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Optional inference response parameters.
     * </pre>
     *
     * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
     */
    @java.lang.Override
    public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter getParametersOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> map =
          internalGetParameters().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int OUTPUTS_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private java.util.List<io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor> outputs_;
    /**
     * <pre>
     * The output tensors holding inference results.
     * </pre>
     *
     * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
     */
    @java.lang.Override
    public java.util.List<io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor> getOutputsList() {
      return outputs_;
    }
    /**
     * <pre>
     * The output tensors holding inference results.
     * </pre>
     *
     * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensorOrBuilder> 
        getOutputsOrBuilderList() {
      return outputs_;
    }
    /**
     * <pre>
     * The output tensors holding inference results.
     * </pre>
     *
     * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
     */
    @java.lang.Override
    public int getOutputsCount() {
      return outputs_.size();
    }
    /**
     * <pre>
     * The output tensors holding inference results.
     * </pre>
     *
     * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
     */
    @java.lang.Override
    public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor getOutputs(int index) {
      return outputs_.get(index);
    }
    /**
     * <pre>
     * The output tensors holding inference results.
     * </pre>
     *
     * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
     */
    @java.lang.Override
    public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensorOrBuilder getOutputsOrBuilder(
        int index) {
      return outputs_.get(index);
    }

    public static final int RAW_OUTPUT_CONTENTS_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> rawOutputContents_ =
        emptyList(com.google.protobuf.ByteString.class);
    /**
     * <pre>
     * The data contained in an output tensor can be represented in
     * "raw" bytes form or in the repeated type that matches the
     * tensor's data type. To use the raw representation 'raw_output_contents'
     * must be initialized with data for each tensor in the same order as
     * 'outputs'. For each tensor, the size of this content must match
     * what is expected by the tensor's shape and data type. The raw
     * data must be the flattened, one-dimensional, row-major order of
     * the tensor elements without any stride or padding between the
     * elements. Note that the FP16 data type must be represented as raw
     * content as there is no specific data type for a 16-bit float
     * type.
     *
     * If this field is specified then InferOutputTensor::contents must
     * not be specified for any output tensor.
     * </pre>
     *
     * <code>repeated bytes raw_output_contents = 6;</code>
     * @return A list containing the rawOutputContents.
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
        getRawOutputContentsList() {
      return rawOutputContents_;
    }
    /**
     * <pre>
     * The data contained in an output tensor can be represented in
     * "raw" bytes form or in the repeated type that matches the
     * tensor's data type. To use the raw representation 'raw_output_contents'
     * must be initialized with data for each tensor in the same order as
     * 'outputs'. For each tensor, the size of this content must match
     * what is expected by the tensor's shape and data type. The raw
     * data must be the flattened, one-dimensional, row-major order of
     * the tensor elements without any stride or padding between the
     * elements. Note that the FP16 data type must be represented as raw
     * content as there is no specific data type for a 16-bit float
     * type.
     *
     * If this field is specified then InferOutputTensor::contents must
     * not be specified for any output tensor.
     * </pre>
     *
     * <code>repeated bytes raw_output_contents = 6;</code>
     * @return The count of rawOutputContents.
     */
    public int getRawOutputContentsCount() {
      return rawOutputContents_.size();
    }
    /**
     * <pre>
     * The data contained in an output tensor can be represented in
     * "raw" bytes form or in the repeated type that matches the
     * tensor's data type. To use the raw representation 'raw_output_contents'
     * must be initialized with data for each tensor in the same order as
     * 'outputs'. For each tensor, the size of this content must match
     * what is expected by the tensor's shape and data type. The raw
     * data must be the flattened, one-dimensional, row-major order of
     * the tensor elements without any stride or padding between the
     * elements. Note that the FP16 data type must be represented as raw
     * content as there is no specific data type for a 16-bit float
     * type.
     *
     * If this field is specified then InferOutputTensor::contents must
     * not be specified for any output tensor.
     * </pre>
     *
     * <code>repeated bytes raw_output_contents = 6;</code>
     * @param index The index of the element to return.
     * @return The rawOutputContents at the given index.
     */
    public com.google.protobuf.ByteString getRawOutputContents(int index) {
      return rawOutputContents_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(modelName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, modelName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(modelVersion_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, modelVersion_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, id_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetParameters(),
          ParametersDefaultEntryHolder.defaultEntry,
          4);
      for (int i = 0; i < outputs_.size(); i++) {
        output.writeMessage(5, outputs_.get(i));
      }
      for (int i = 0; i < rawOutputContents_.size(); i++) {
        output.writeBytes(6, rawOutputContents_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(modelName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, modelName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(modelVersion_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, modelVersion_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, id_);
      }
      for (java.util.Map.Entry<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> entry
           : internalGetParameters().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter>
        parameters__ = ParametersDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, parameters__);
      }
      for (int i = 0; i < outputs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, outputs_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rawOutputContents_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(rawOutputContents_.get(i));
        }
        size += dataSize;
        size += 1 * getRawOutputContentsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse)) {
        return super.equals(obj);
      }
      io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse other = (io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse) obj;

      if (!getModelName()
          .equals(other.getModelName())) return false;
      if (!getModelVersion()
          .equals(other.getModelVersion())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!internalGetParameters().equals(
          other.internalGetParameters())) return false;
      if (!getOutputsList()
          .equals(other.getOutputsList())) return false;
      if (!getRawOutputContentsList()
          .equals(other.getRawOutputContentsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MODEL_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getModelName().hashCode();
      hash = (37 * hash) + MODEL_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getModelVersion().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (!internalGetParameters().getMap().isEmpty()) {
        hash = (37 * hash) + PARAMETERS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetParameters().hashCode();
      }
      if (getOutputsCount() > 0) {
        hash = (37 * hash) + OUTPUTS_FIELD_NUMBER;
        hash = (53 * hash) + getOutputsList().hashCode();
      }
      if (getRawOutputContentsCount() > 0) {
        hash = (37 * hash) + RAW_OUTPUT_CONTENTS_FIELD_NUMBER;
        hash = (53 * hash) + getRawOutputContentsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code inferenceSchema.ModelInferResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:inferenceSchema.ModelInferResponse)
        io.seldon.mlops.inference_schema.InferResponse.ModelInferResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.seldon.mlops.inference_schema.InferResponse.internal_static_inferenceSchema_ModelInferResponse_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
          int number) {
        switch (number) {
          case 4:
            return internalGetParameters();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
          int number) {
        switch (number) {
          case 4:
            return internalGetMutableParameters();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.seldon.mlops.inference_schema.InferResponse.internal_static_inferenceSchema_ModelInferResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.class, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.Builder.class);
      }

      // Construct using io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        modelName_ = "";
        modelVersion_ = "";
        id_ = "";
        internalGetMutableParameters().clear();
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
        } else {
          outputs_ = null;
          outputsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        rawOutputContents_ = emptyList(com.google.protobuf.ByteString.class);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.seldon.mlops.inference_schema.InferResponse.internal_static_inferenceSchema_ModelInferResponse_descriptor;
      }

      @java.lang.Override
      public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse getDefaultInstanceForType() {
        return io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.getDefaultInstance();
      }

      @java.lang.Override
      public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse build() {
        io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse buildPartial() {
        io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse result = new io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse result) {
        if (outputsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            outputs_ = java.util.Collections.unmodifiableList(outputs_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.outputs_ = outputs_;
        } else {
          result.outputs_ = outputsBuilder_.build();
        }
      }

      private void buildPartial0(io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.modelName_ = modelName_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.modelVersion_ = modelVersion_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.id_ = id_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.parameters_ = internalGetParameters().build(ParametersDefaultEntryHolder.defaultEntry);
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          rawOutputContents_.makeImmutable();
          result.rawOutputContents_ = rawOutputContents_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse) {
          return mergeFrom((io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse other) {
        if (other == io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.getDefaultInstance()) return this;
        if (!other.getModelName().isEmpty()) {
          modelName_ = other.modelName_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getModelVersion().isEmpty()) {
          modelVersion_ = other.modelVersion_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        internalGetMutableParameters().mergeFrom(
            other.internalGetParameters());
        bitField0_ |= 0x00000008;
        if (outputsBuilder_ == null) {
          if (!other.outputs_.isEmpty()) {
            if (outputs_.isEmpty()) {
              outputs_ = other.outputs_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureOutputsIsMutable();
              outputs_.addAll(other.outputs_);
            }
            onChanged();
          }
        } else {
          if (!other.outputs_.isEmpty()) {
            if (outputsBuilder_.isEmpty()) {
              outputsBuilder_.dispose();
              outputsBuilder_ = null;
              outputs_ = other.outputs_;
              bitField0_ = (bitField0_ & ~0x00000010);
              outputsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOutputsFieldBuilder() : null;
            } else {
              outputsBuilder_.addAllMessages(other.outputs_);
            }
          }
        }
        if (!other.rawOutputContents_.isEmpty()) {
          if (rawOutputContents_.isEmpty()) {
            rawOutputContents_ = other.rawOutputContents_;
            rawOutputContents_.makeImmutable();
            bitField0_ |= 0x00000020;
          } else {
            ensureRawOutputContentsIsMutable();
            rawOutputContents_.addAll(other.rawOutputContents_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                modelName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                modelVersion_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                id_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                com.google.protobuf.MapEntry<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter>
                parameters__ = input.readMessage(
                    ParametersDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableParameters().ensureBuilderMap().put(
                    parameters__.getKey(), parameters__.getValue());
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor m =
                    input.readMessage(
                        io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor.parser(),
                        extensionRegistry);
                if (outputsBuilder_ == null) {
                  ensureOutputsIsMutable();
                  outputs_.add(m);
                } else {
                  outputsBuilder_.addMessage(m);
                }
                break;
              } // case 42
              case 50: {
                com.google.protobuf.ByteString v = input.readBytes();
                ensureRawOutputContentsIsMutable();
                rawOutputContents_.add(v);
                break;
              } // case 50
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object modelName_ = "";
      /**
       * <pre>
       * The name of the model used for inference.
       * </pre>
       *
       * <code>string model_name = 1;</code>
       * @return The modelName.
       */
      public java.lang.String getModelName() {
        java.lang.Object ref = modelName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          modelName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the model used for inference.
       * </pre>
       *
       * <code>string model_name = 1;</code>
       * @return The bytes for modelName.
       */
      public com.google.protobuf.ByteString
          getModelNameBytes() {
        java.lang.Object ref = modelName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          modelName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the model used for inference.
       * </pre>
       *
       * <code>string model_name = 1;</code>
       * @param value The modelName to set.
       * @return This builder for chaining.
       */
      public Builder setModelName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        modelName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the model used for inference.
       * </pre>
       *
       * <code>string model_name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearModelName() {
        modelName_ = getDefaultInstance().getModelName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the model used for inference.
       * </pre>
       *
       * <code>string model_name = 1;</code>
       * @param value The bytes for modelName to set.
       * @return This builder for chaining.
       */
      public Builder setModelNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        modelName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object modelVersion_ = "";
      /**
       * <pre>
       * The version of the model used for inference.
       * </pre>
       *
       * <code>string model_version = 2;</code>
       * @return The modelVersion.
       */
      public java.lang.String getModelVersion() {
        java.lang.Object ref = modelVersion_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          modelVersion_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The version of the model used for inference.
       * </pre>
       *
       * <code>string model_version = 2;</code>
       * @return The bytes for modelVersion.
       */
      public com.google.protobuf.ByteString
          getModelVersionBytes() {
        java.lang.Object ref = modelVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          modelVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The version of the model used for inference.
       * </pre>
       *
       * <code>string model_version = 2;</code>
       * @param value The modelVersion to set.
       * @return This builder for chaining.
       */
      public Builder setModelVersion(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        modelVersion_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The version of the model used for inference.
       * </pre>
       *
       * <code>string model_version = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearModelVersion() {
        modelVersion_ = getDefaultInstance().getModelVersion();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The version of the model used for inference.
       * </pre>
       *
       * <code>string model_version = 2;</code>
       * @param value The bytes for modelVersion to set.
       * @return This builder for chaining.
       */
      public Builder setModelVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        modelVersion_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The id of the inference request if one was specified.
       * </pre>
       *
       * <code>string id = 3;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The id of the inference request if one was specified.
       * </pre>
       *
       * <code>string id = 3;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The id of the inference request if one was specified.
       * </pre>
       *
       * <code>string id = 3;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        id_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The id of the inference request if one was specified.
       * </pre>
       *
       * <code>string id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        id_ = getDefaultInstance().getId();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The id of the inference request if one was specified.
       * </pre>
       *
       * <code>string id = 3;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        id_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private static final class ParametersConverter implements com.google.protobuf.MapFieldBuilder.Converter<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameterOrBuilder, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> {
        @java.lang.Override
        public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter build(io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameterOrBuilder val) {
          if (val instanceof io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter) { return (io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter) val; }
          return ((io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.Builder) val).build();
        }

        @java.lang.Override
        public com.google.protobuf.MapEntry<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> defaultEntry() {
          return ParametersDefaultEntryHolder.defaultEntry;
        }
      };
      private static final ParametersConverter parametersConverter = new ParametersConverter();

      private com.google.protobuf.MapFieldBuilder<
          java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameterOrBuilder, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.Builder> parameters_;
      private com.google.protobuf.MapFieldBuilder<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameterOrBuilder, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.Builder>
          internalGetParameters() {
        if (parameters_ == null) {
          return new com.google.protobuf.MapFieldBuilder<>(parametersConverter);
        }
        return parameters_;
      }
      private com.google.protobuf.MapFieldBuilder<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameterOrBuilder, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.Builder>
          internalGetMutableParameters() {
        if (parameters_ == null) {
          parameters_ = new com.google.protobuf.MapFieldBuilder<>(parametersConverter);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return parameters_;
      }
      public int getParametersCount() {
        return internalGetParameters().ensureBuilderMap().size();
      }
      /**
       * <pre>
       * Optional inference response parameters.
       * </pre>
       *
       * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
       */
      @java.lang.Override
      public boolean containsParameters(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetParameters().ensureBuilderMap().containsKey(key);
      }
      /**
       * Use {@link #getParametersMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> getParameters() {
        return getParametersMap();
      }
      /**
       * <pre>
       * Optional inference response parameters.
       * </pre>
       *
       * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> getParametersMap() {
        return internalGetParameters().getImmutableMap();
      }
      /**
       * <pre>
       * Optional inference response parameters.
       * </pre>
       *
       * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
       */
      @java.lang.Override
      public /* nullable */
io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter getParametersOrDefault(
          java.lang.String key,
          /* nullable */
io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameterOrBuilder> map = internalGetMutableParameters().ensureBuilderMap();
        return map.containsKey(key) ? parametersConverter.build(map.get(key)) : defaultValue;
      }
      /**
       * <pre>
       * Optional inference response parameters.
       * </pre>
       *
       * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
       */
      @java.lang.Override
      public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter getParametersOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameterOrBuilder> map = internalGetMutableParameters().ensureBuilderMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return parametersConverter.build(map.get(key));
      }
      public Builder clearParameters() {
        bitField0_ = (bitField0_ & ~0x00000008);
        internalGetMutableParameters().clear();
        return this;
      }
      /**
       * <pre>
       * Optional inference response parameters.
       * </pre>
       *
       * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
       */
      public Builder removeParameters(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableParameters().ensureBuilderMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter>
          getMutableParameters() {
        bitField0_ |= 0x00000008;
        return internalGetMutableParameters().ensureMessageMap();
      }
      /**
       * <pre>
       * Optional inference response parameters.
       * </pre>
       *
       * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
       */
      public Builder putParameters(
          java.lang.String key,
          io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableParameters().ensureBuilderMap()
            .put(key, value);
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Optional inference response parameters.
       * </pre>
       *
       * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
       */
      public Builder putAllParameters(
          java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> values) {
        for (java.util.Map.Entry<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter> e : values.entrySet()) {
          if (e.getKey() == null || e.getValue() == null) {
            throw new NullPointerException();
          }
        }
        internalGetMutableParameters().ensureBuilderMap()
            .putAll(values);
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * Optional inference response parameters.
       * </pre>
       *
       * <code>map&lt;string, .inferenceSchema.ModelInferResponse.InferParameter&gt; parameters = 4;</code>
       */
      public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.Builder putParametersBuilderIfAbsent(
          java.lang.String key) {
        java.util.Map<java.lang.String, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameterOrBuilder> builderMap = internalGetMutableParameters().ensureBuilderMap();
        io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameterOrBuilder entry = builderMap.get(key);
        if (entry == null) {
          entry = io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.newBuilder();
          builderMap.put(key, entry);
        }
        if (entry instanceof io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter) {
          entry = ((io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter) entry).toBuilder();
          builderMap.put(key, entry);
        }
        return (io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferParameter.Builder) entry;
      }

      private java.util.List<io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor> outputs_ =
        java.util.Collections.emptyList();
      private void ensureOutputsIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          outputs_ = new java.util.ArrayList<io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor>(outputs_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor.Builder, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensorOrBuilder> outputsBuilder_;

      /**
       * <pre>
       * The output tensors holding inference results.
       * </pre>
       *
       * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
       */
      public java.util.List<io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor> getOutputsList() {
        if (outputsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(outputs_);
        } else {
          return outputsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The output tensors holding inference results.
       * </pre>
       *
       * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
       */
      public int getOutputsCount() {
        if (outputsBuilder_ == null) {
          return outputs_.size();
        } else {
          return outputsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The output tensors holding inference results.
       * </pre>
       *
       * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
       */
      public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor getOutputs(int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);
        } else {
          return outputsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The output tensors holding inference results.
       * </pre>
       *
       * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
       */
      public Builder setOutputs(
          int index, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.set(index, value);
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The output tensors holding inference results.
       * </pre>
       *
       * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
       */
      public Builder setOutputs(
          int index, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.set(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The output tensors holding inference results.
       * </pre>
       *
       * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
       */
      public Builder addOutputs(io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The output tensors holding inference results.
       * </pre>
       *
       * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
       */
      public Builder addOutputs(
          int index, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(index, value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The output tensors holding inference results.
       * </pre>
       *
       * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
       */
      public Builder addOutputs(
          io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The output tensors holding inference results.
       * </pre>
       *
       * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
       */
      public Builder addOutputs(
          int index, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The output tensors holding inference results.
       * </pre>
       *
       * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
       */
      public Builder addAllOutputs(
          java.lang.Iterable<? extends io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor> values) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, outputs_);
          onChanged();
        } else {
          outputsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The output tensors holding inference results.
       * </pre>
       *
       * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
       */
      public Builder clearOutputs() {
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          outputsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The output tensors holding inference results.
       * </pre>
       *
       * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
       */
      public Builder removeOutputs(int index) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.remove(index);
          onChanged();
        } else {
          outputsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The output tensors holding inference results.
       * </pre>
       *
       * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
       */
      public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor.Builder getOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The output tensors holding inference results.
       * </pre>
       *
       * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
       */
      public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensorOrBuilder getOutputsOrBuilder(
          int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);  } else {
          return outputsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The output tensors holding inference results.
       * </pre>
       *
       * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
       */
      public java.util.List<? extends io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensorOrBuilder> 
           getOutputsOrBuilderList() {
        if (outputsBuilder_ != null) {
          return outputsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(outputs_);
        }
      }
      /**
       * <pre>
       * The output tensors holding inference results.
       * </pre>
       *
       * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
       */
      public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor.Builder addOutputsBuilder() {
        return getOutputsFieldBuilder().addBuilder(
            io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor.getDefaultInstance());
      }
      /**
       * <pre>
       * The output tensors holding inference results.
       * </pre>
       *
       * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
       */
      public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor.Builder addOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().addBuilder(
            index, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor.getDefaultInstance());
      }
      /**
       * <pre>
       * The output tensors holding inference results.
       * </pre>
       *
       * <code>repeated .inferenceSchema.ModelInferResponse.InferOutputTensor outputs = 5;</code>
       */
      public java.util.List<io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor.Builder> 
           getOutputsBuilderList() {
        return getOutputsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor.Builder, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensorOrBuilder> 
          getOutputsFieldBuilder() {
        if (outputsBuilder_ == null) {
          outputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensor.Builder, io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse.InferOutputTensorOrBuilder>(
                  outputs_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          outputs_ = null;
        }
        return outputsBuilder_;
      }

      private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> rawOutputContents_ = emptyList(com.google.protobuf.ByteString.class);
      private void ensureRawOutputContentsIsMutable() {
        if (!rawOutputContents_.isModifiable()) {
          rawOutputContents_ = makeMutableCopy(rawOutputContents_);
        }
        bitField0_ |= 0x00000020;
      }
      /**
       * <pre>
       * The data contained in an output tensor can be represented in
       * "raw" bytes form or in the repeated type that matches the
       * tensor's data type. To use the raw representation 'raw_output_contents'
       * must be initialized with data for each tensor in the same order as
       * 'outputs'. For each tensor, the size of this content must match
       * what is expected by the tensor's shape and data type. The raw
       * data must be the flattened, one-dimensional, row-major order of
       * the tensor elements without any stride or padding between the
       * elements. Note that the FP16 data type must be represented as raw
       * content as there is no specific data type for a 16-bit float
       * type.
       *
       * If this field is specified then InferOutputTensor::contents must
       * not be specified for any output tensor.
       * </pre>
       *
       * <code>repeated bytes raw_output_contents = 6;</code>
       * @return A list containing the rawOutputContents.
       */
      public java.util.List<com.google.protobuf.ByteString>
          getRawOutputContentsList() {
        rawOutputContents_.makeImmutable();
        return rawOutputContents_;
      }
      /**
       * <pre>
       * The data contained in an output tensor can be represented in
       * "raw" bytes form or in the repeated type that matches the
       * tensor's data type. To use the raw representation 'raw_output_contents'
       * must be initialized with data for each tensor in the same order as
       * 'outputs'. For each tensor, the size of this content must match
       * what is expected by the tensor's shape and data type. The raw
       * data must be the flattened, one-dimensional, row-major order of
       * the tensor elements without any stride or padding between the
       * elements. Note that the FP16 data type must be represented as raw
       * content as there is no specific data type for a 16-bit float
       * type.
       *
       * If this field is specified then InferOutputTensor::contents must
       * not be specified for any output tensor.
       * </pre>
       *
       * <code>repeated bytes raw_output_contents = 6;</code>
       * @return The count of rawOutputContents.
       */
      public int getRawOutputContentsCount() {
        return rawOutputContents_.size();
      }
      /**
       * <pre>
       * The data contained in an output tensor can be represented in
       * "raw" bytes form or in the repeated type that matches the
       * tensor's data type. To use the raw representation 'raw_output_contents'
       * must be initialized with data for each tensor in the same order as
       * 'outputs'. For each tensor, the size of this content must match
       * what is expected by the tensor's shape and data type. The raw
       * data must be the flattened, one-dimensional, row-major order of
       * the tensor elements without any stride or padding between the
       * elements. Note that the FP16 data type must be represented as raw
       * content as there is no specific data type for a 16-bit float
       * type.
       *
       * If this field is specified then InferOutputTensor::contents must
       * not be specified for any output tensor.
       * </pre>
       *
       * <code>repeated bytes raw_output_contents = 6;</code>
       * @param index The index of the element to return.
       * @return The rawOutputContents at the given index.
       */
      public com.google.protobuf.ByteString getRawOutputContents(int index) {
        return rawOutputContents_.get(index);
      }
      /**
       * <pre>
       * The data contained in an output tensor can be represented in
       * "raw" bytes form or in the repeated type that matches the
       * tensor's data type. To use the raw representation 'raw_output_contents'
       * must be initialized with data for each tensor in the same order as
       * 'outputs'. For each tensor, the size of this content must match
       * what is expected by the tensor's shape and data type. The raw
       * data must be the flattened, one-dimensional, row-major order of
       * the tensor elements without any stride or padding between the
       * elements. Note that the FP16 data type must be represented as raw
       * content as there is no specific data type for a 16-bit float
       * type.
       *
       * If this field is specified then InferOutputTensor::contents must
       * not be specified for any output tensor.
       * </pre>
       *
       * <code>repeated bytes raw_output_contents = 6;</code>
       * @param index The index to set the value at.
       * @param value The rawOutputContents to set.
       * @return This builder for chaining.
       */
      public Builder setRawOutputContents(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureRawOutputContentsIsMutable();
        rawOutputContents_.set(index, value);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The data contained in an output tensor can be represented in
       * "raw" bytes form or in the repeated type that matches the
       * tensor's data type. To use the raw representation 'raw_output_contents'
       * must be initialized with data for each tensor in the same order as
       * 'outputs'. For each tensor, the size of this content must match
       * what is expected by the tensor's shape and data type. The raw
       * data must be the flattened, one-dimensional, row-major order of
       * the tensor elements without any stride or padding between the
       * elements. Note that the FP16 data type must be represented as raw
       * content as there is no specific data type for a 16-bit float
       * type.
       *
       * If this field is specified then InferOutputTensor::contents must
       * not be specified for any output tensor.
       * </pre>
       *
       * <code>repeated bytes raw_output_contents = 6;</code>
       * @param value The rawOutputContents to add.
       * @return This builder for chaining.
       */
      public Builder addRawOutputContents(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureRawOutputContentsIsMutable();
        rawOutputContents_.add(value);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The data contained in an output tensor can be represented in
       * "raw" bytes form or in the repeated type that matches the
       * tensor's data type. To use the raw representation 'raw_output_contents'
       * must be initialized with data for each tensor in the same order as
       * 'outputs'. For each tensor, the size of this content must match
       * what is expected by the tensor's shape and data type. The raw
       * data must be the flattened, one-dimensional, row-major order of
       * the tensor elements without any stride or padding between the
       * elements. Note that the FP16 data type must be represented as raw
       * content as there is no specific data type for a 16-bit float
       * type.
       *
       * If this field is specified then InferOutputTensor::contents must
       * not be specified for any output tensor.
       * </pre>
       *
       * <code>repeated bytes raw_output_contents = 6;</code>
       * @param values The rawOutputContents to add.
       * @return This builder for chaining.
       */
      public Builder addAllRawOutputContents(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureRawOutputContentsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rawOutputContents_);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The data contained in an output tensor can be represented in
       * "raw" bytes form or in the repeated type that matches the
       * tensor's data type. To use the raw representation 'raw_output_contents'
       * must be initialized with data for each tensor in the same order as
       * 'outputs'. For each tensor, the size of this content must match
       * what is expected by the tensor's shape and data type. The raw
       * data must be the flattened, one-dimensional, row-major order of
       * the tensor elements without any stride or padding between the
       * elements. Note that the FP16 data type must be represented as raw
       * content as there is no specific data type for a 16-bit float
       * type.
       *
       * If this field is specified then InferOutputTensor::contents must
       * not be specified for any output tensor.
       * </pre>
       *
       * <code>repeated bytes raw_output_contents = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRawOutputContents() {
        rawOutputContents_ = emptyList(com.google.protobuf.ByteString.class);
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:inferenceSchema.ModelInferResponse)
    }

    // @@protoc_insertion_point(class_scope:inferenceSchema.ModelInferResponse)
    private static final io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse();
    }

    public static io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ModelInferResponse>
        PARSER = new com.google.protobuf.AbstractParser<ModelInferResponse>() {
      @java.lang.Override
      public ModelInferResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ModelInferResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ModelInferResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.seldon.mlops.inference_schema.InferResponse.ModelInferResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_inferenceSchema_ModelInferResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_inferenceSchema_ModelInferResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_inferenceSchema_ModelInferResponse_InferTensorContents_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_inferenceSchema_ModelInferResponse_InferTensorContents_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_inferenceSchema_ModelInferResponse_InferParameter_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_inferenceSchema_ModelInferResponse_InferParameter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_inferenceSchema_ModelInferResponse_InferOutputTensor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_inferenceSchema_ModelInferResponse_InferOutputTensor_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_inferenceSchema_ModelInferResponse_InferOutputTensor_ParametersEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_inferenceSchema_ModelInferResponse_InferOutputTensor_ParametersEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_inferenceSchema_ModelInferResponse_ParametersEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_inferenceSchema_ModelInferResponse_ParametersEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024infer_response.proto\022\017inferenceSchema\"" +
      "\360\007\n\022ModelInferResponse\022\022\n\nmodel_name\030\001 \001" +
      "(\t\022\025\n\rmodel_version\030\002 \001(\t\022\n\n\002id\030\003 \001(\t\022G\n" +
      "\nparameters\030\004 \003(\01323.inferenceSchema.Mode" +
      "lInferResponse.ParametersEntry\022F\n\007output" +
      "s\030\005 \003(\01325.inferenceSchema.ModelInferResp" +
      "onse.InferOutputTensor\022\033\n\023raw_output_con" +
      "tents\030\006 \003(\014\032\320\001\n\023InferTensorContents\022\025\n\rb" +
      "ool_contents\030\001 \003(\010\022\024\n\014int_contents\030\002 \003(\005" +
      "\022\026\n\016int64_contents\030\003 \003(\003\022\025\n\ruint_content" +
      "s\030\004 \003(\r\022\027\n\017uint64_contents\030\005 \003(\004\022\025\n\rfp32" +
      "_contents\030\006 \003(\002\022\025\n\rfp64_contents\030\007 \003(\001\022\026" +
      "\n\016bytes_contents\030\010 \003(\014\032i\n\016InferParameter" +
      "\022\024\n\nbool_param\030\001 \001(\010H\000\022\025\n\013int64_param\030\002 " +
      "\001(\003H\000\022\026\n\014string_param\030\003 \001(\tH\000B\022\n\020paramet" +
      "er_choice\032\317\002\n\021InferOutputTensor\022\014\n\004name\030" +
      "\001 \001(\t\022\020\n\010datatype\030\002 \001(\t\022\r\n\005shape\030\003 \003(\003\022Y" +
      "\n\nparameters\030\004 \003(\0132E.inferenceSchema.Mod" +
      "elInferResponse.InferOutputTensor.Parame" +
      "tersEntry\022I\n\010contents\030\005 \001(\01327.inferenceS" +
      "chema.ModelInferResponse.InferTensorCont" +
      "ents\032e\n\017ParametersEntry\022\013\n\003key\030\001 \001(\t\022A\n\005" +
      "value\030\002 \001(\01322.inferenceSchema.ModelInfer" +
      "Response.InferParameter:\0028\001\032e\n\017Parameter" +
      "sEntry\022\013\n\003key\030\001 \001(\t\022A\n\005value\030\002 \001(\01322.inf" +
      "erenceSchema.ModelInferResponse.InferPar" +
      "ameter:\0028\001Be\n io.seldon.mlops.inference_" +
      "schemaZAgithub.com/seldonio/seldon-core/" +
      "apis/go/v2/mlops/inference_schemab\006proto" +
      "3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_inferenceSchema_ModelInferResponse_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_inferenceSchema_ModelInferResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_inferenceSchema_ModelInferResponse_descriptor,
        new java.lang.String[] { "ModelName", "ModelVersion", "Id", "Parameters", "Outputs", "RawOutputContents", });
    internal_static_inferenceSchema_ModelInferResponse_InferTensorContents_descriptor =
      internal_static_inferenceSchema_ModelInferResponse_descriptor.getNestedTypes().get(0);
    internal_static_inferenceSchema_ModelInferResponse_InferTensorContents_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_inferenceSchema_ModelInferResponse_InferTensorContents_descriptor,
        new java.lang.String[] { "BoolContents", "IntContents", "Int64Contents", "UintContents", "Uint64Contents", "Fp32Contents", "Fp64Contents", "BytesContents", });
    internal_static_inferenceSchema_ModelInferResponse_InferParameter_descriptor =
      internal_static_inferenceSchema_ModelInferResponse_descriptor.getNestedTypes().get(1);
    internal_static_inferenceSchema_ModelInferResponse_InferParameter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_inferenceSchema_ModelInferResponse_InferParameter_descriptor,
        new java.lang.String[] { "BoolParam", "Int64Param", "StringParam", "ParameterChoice", });
    internal_static_inferenceSchema_ModelInferResponse_InferOutputTensor_descriptor =
      internal_static_inferenceSchema_ModelInferResponse_descriptor.getNestedTypes().get(2);
    internal_static_inferenceSchema_ModelInferResponse_InferOutputTensor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_inferenceSchema_ModelInferResponse_InferOutputTensor_descriptor,
        new java.lang.String[] { "Name", "Datatype", "Shape", "Parameters", "Contents", });
    internal_static_inferenceSchema_ModelInferResponse_InferOutputTensor_ParametersEntry_descriptor =
      internal_static_inferenceSchema_ModelInferResponse_InferOutputTensor_descriptor.getNestedTypes().get(0);
    internal_static_inferenceSchema_ModelInferResponse_InferOutputTensor_ParametersEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_inferenceSchema_ModelInferResponse_InferOutputTensor_ParametersEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_inferenceSchema_ModelInferResponse_ParametersEntry_descriptor =
      internal_static_inferenceSchema_ModelInferResponse_descriptor.getNestedTypes().get(3);
    internal_static_inferenceSchema_ModelInferResponse_ParametersEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_inferenceSchema_ModelInferResponse_ParametersEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
