/*
Copyright (c) 2024 Seldon Technologies Ltd.

Use of this software is governed BY
(1) the license included in the LICENSE file or
(2) if the license included in the LICENSE file is the Business Source License 1.1,
the Change License after the Change Date as each is defined in accordance with the LICENSE file.
*/

// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: infer_response.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.seldon.mlops.inference.schema;

@kotlin.jvm.JvmName("-initializemodelInferResponse")
public inline fun modelInferResponse(block: io.seldon.mlops.inference.schema.ModelInferResponseKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse =
  io.seldon.mlops.inference.schema.ModelInferResponseKt.Dsl._create(io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `seldon.mlops.inference.schema.ModelInferResponse`
 */
public object ModelInferResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse = _builder.build()

    /**
     * ```
     * The name of the model used for inference.
     * ```
     *
     * `string model_name = 1;`
     */
    public var modelName: kotlin.String
      @JvmName("getModelName")
      get() = _builder.getModelName()
      @JvmName("setModelName")
      set(value) {
        _builder.setModelName(value)
      }
    /**
     * ```
     * The name of the model used for inference.
     * ```
     *
     * `string model_name = 1;`
     */
    public fun clearModelName() {
      _builder.clearModelName()
    }

    /**
     * ```
     * The version of the model used for inference.
     * ```
     *
     * `string model_version = 2;`
     */
    public var modelVersion: kotlin.String
      @JvmName("getModelVersion")
      get() = _builder.getModelVersion()
      @JvmName("setModelVersion")
      set(value) {
        _builder.setModelVersion(value)
      }
    /**
     * ```
     * The version of the model used for inference.
     * ```
     *
     * `string model_version = 2;`
     */
    public fun clearModelVersion() {
      _builder.clearModelVersion()
    }

    /**
     * ```
     * The id of the inference request if one was specified.
     * ```
     *
     * `string id = 3;`
     */
    public var id: kotlin.String
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * ```
     * The id of the inference request if one was specified.
     * ```
     *
     * `string id = 3;`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ParametersProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * Optional inference response parameters.
     * ```
     *
     * `map<string, .seldon.mlops.inference.schema.ModelInferResponse.InferParameter> parameters = 4;`
     */
     public val parameters: com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter, ParametersProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getParametersMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getParametersMap()
      )
    /**
     * ```
     * Optional inference response parameters.
     * ```
     *
     * `map<string, .seldon.mlops.inference.schema.ModelInferResponse.InferParameter> parameters = 4;`
     */
    @JvmName("putParameters")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter, ParametersProxy>
      .put(key: kotlin.String, value: io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter) {
         _builder.putParameters(key, value)
       }
    /**
     * ```
     * Optional inference response parameters.
     * ```
     *
     * `map<string, .seldon.mlops.inference.schema.ModelInferResponse.InferParameter> parameters = 4;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setParameters")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter, ParametersProxy>
      .set(key: kotlin.String, value: io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter) {
         put(key, value)
       }
    /**
     * ```
     * Optional inference response parameters.
     * ```
     *
     * `map<string, .seldon.mlops.inference.schema.ModelInferResponse.InferParameter> parameters = 4;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeParameters")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter, ParametersProxy>
      .remove(key: kotlin.String) {
         _builder.removeParameters(key)
       }
    /**
     * ```
     * Optional inference response parameters.
     * ```
     *
     * `map<string, .seldon.mlops.inference.schema.ModelInferResponse.InferParameter> parameters = 4;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllParameters")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter, ParametersProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter>) {
         _builder.putAllParameters(map)
       }
    /**
     * ```
     * Optional inference response parameters.
     * ```
     *
     * `map<string, .seldon.mlops.inference.schema.ModelInferResponse.InferParameter> parameters = 4;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearParameters")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter, ParametersProxy>
      .clear() {
         _builder.clearParameters()
       }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class OutputsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * The output tensors holding inference results.
     * ```
     *
     * `repeated .seldon.mlops.inference.schema.ModelInferResponse.InferOutputTensor outputs = 5;`
     */
     public val outputs: com.google.protobuf.kotlin.DslList<io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferOutputTensor, OutputsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getOutputsList()
      )
    /**
     * ```
     * The output tensors holding inference results.
     * ```
     *
     * `repeated .seldon.mlops.inference.schema.ModelInferResponse.InferOutputTensor outputs = 5;`
     * @param value The outputs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addOutputs")
    public fun com.google.protobuf.kotlin.DslList<io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferOutputTensor, OutputsProxy>.add(value: io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferOutputTensor) {
      _builder.addOutputs(value)
    }
    /**
     * ```
     * The output tensors holding inference results.
     * ```
     *
     * `repeated .seldon.mlops.inference.schema.ModelInferResponse.InferOutputTensor outputs = 5;`
     * @param value The outputs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignOutputs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferOutputTensor, OutputsProxy>.plusAssign(value: io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferOutputTensor) {
      add(value)
    }
    /**
     * ```
     * The output tensors holding inference results.
     * ```
     *
     * `repeated .seldon.mlops.inference.schema.ModelInferResponse.InferOutputTensor outputs = 5;`
     * @param values The outputs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllOutputs")
    public fun com.google.protobuf.kotlin.DslList<io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferOutputTensor, OutputsProxy>.addAll(values: kotlin.collections.Iterable<io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferOutputTensor>) {
      _builder.addAllOutputs(values)
    }
    /**
     * ```
     * The output tensors holding inference results.
     * ```
     *
     * `repeated .seldon.mlops.inference.schema.ModelInferResponse.InferOutputTensor outputs = 5;`
     * @param values The outputs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllOutputs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferOutputTensor, OutputsProxy>.plusAssign(values: kotlin.collections.Iterable<io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferOutputTensor>) {
      addAll(values)
    }
    /**
     * ```
     * The output tensors holding inference results.
     * ```
     *
     * `repeated .seldon.mlops.inference.schema.ModelInferResponse.InferOutputTensor outputs = 5;`
     * @param index The index to set the value at.
     * @param value The outputs to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setOutputs")
    public operator fun com.google.protobuf.kotlin.DslList<io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferOutputTensor, OutputsProxy>.set(index: kotlin.Int, value: io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferOutputTensor) {
      _builder.setOutputs(index, value)
    }
    /**
     * ```
     * The output tensors holding inference results.
     * ```
     *
     * `repeated .seldon.mlops.inference.schema.ModelInferResponse.InferOutputTensor outputs = 5;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearOutputs")
    public fun com.google.protobuf.kotlin.DslList<io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferOutputTensor, OutputsProxy>.clear() {
      _builder.clearOutputs()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class RawOutputContentsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * The data contained in an output tensor can be represented in
     * "raw" bytes form or in the repeated type that matches the
     * tensor's data type. To use the raw representation 'raw_output_contents'
     * must be initialized with data for each tensor in the same order as
     * 'outputs'. For each tensor, the size of this content must match
     * what is expected by the tensor's shape and data type. The raw
     * data must be the flattened, one-dimensional, row-major order of
     * the tensor elements without any stride or padding between the
     * elements. Note that the FP16 data type must be represented as raw
     * content as there is no specific data type for a 16-bit float
     * type.
     *
     * If this field is specified then InferOutputTensor::contents must
     * not be specified for any output tensor.
     * ```
     *
     * `repeated bytes raw_output_contents = 6;`
     */
     public val rawOutputContents: com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, RawOutputContentsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getRawOutputContentsList()
      )
    /**
     * ```
     * The data contained in an output tensor can be represented in
     * "raw" bytes form or in the repeated type that matches the
     * tensor's data type. To use the raw representation 'raw_output_contents'
     * must be initialized with data for each tensor in the same order as
     * 'outputs'. For each tensor, the size of this content must match
     * what is expected by the tensor's shape and data type. The raw
     * data must be the flattened, one-dimensional, row-major order of
     * the tensor elements without any stride or padding between the
     * elements. Note that the FP16 data type must be represented as raw
     * content as there is no specific data type for a 16-bit float
     * type.
     *
     * If this field is specified then InferOutputTensor::contents must
     * not be specified for any output tensor.
     * ```
     *
     * `repeated bytes raw_output_contents = 6;`
     * @param value The rawOutputContents to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addRawOutputContents")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, RawOutputContentsProxy>.add(value: com.google.protobuf.ByteString) {
      _builder.addRawOutputContents(value)
    }/**
     * ```
     * The data contained in an output tensor can be represented in
     * "raw" bytes form or in the repeated type that matches the
     * tensor's data type. To use the raw representation 'raw_output_contents'
     * must be initialized with data for each tensor in the same order as
     * 'outputs'. For each tensor, the size of this content must match
     * what is expected by the tensor's shape and data type. The raw
     * data must be the flattened, one-dimensional, row-major order of
     * the tensor elements without any stride or padding between the
     * elements. Note that the FP16 data type must be represented as raw
     * content as there is no specific data type for a 16-bit float
     * type.
     *
     * If this field is specified then InferOutputTensor::contents must
     * not be specified for any output tensor.
     * ```
     *
     * `repeated bytes raw_output_contents = 6;`
     * @param value The rawOutputContents to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignRawOutputContents")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, RawOutputContentsProxy>.plusAssign(value: com.google.protobuf.ByteString) {
      add(value)
    }/**
     * ```
     * The data contained in an output tensor can be represented in
     * "raw" bytes form or in the repeated type that matches the
     * tensor's data type. To use the raw representation 'raw_output_contents'
     * must be initialized with data for each tensor in the same order as
     * 'outputs'. For each tensor, the size of this content must match
     * what is expected by the tensor's shape and data type. The raw
     * data must be the flattened, one-dimensional, row-major order of
     * the tensor elements without any stride or padding between the
     * elements. Note that the FP16 data type must be represented as raw
     * content as there is no specific data type for a 16-bit float
     * type.
     *
     * If this field is specified then InferOutputTensor::contents must
     * not be specified for any output tensor.
     * ```
     *
     * `repeated bytes raw_output_contents = 6;`
     * @param values The rawOutputContents to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllRawOutputContents")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, RawOutputContentsProxy>.addAll(values: kotlin.collections.Iterable<com.google.protobuf.ByteString>) {
      _builder.addAllRawOutputContents(values)
    }/**
     * ```
     * The data contained in an output tensor can be represented in
     * "raw" bytes form or in the repeated type that matches the
     * tensor's data type. To use the raw representation 'raw_output_contents'
     * must be initialized with data for each tensor in the same order as
     * 'outputs'. For each tensor, the size of this content must match
     * what is expected by the tensor's shape and data type. The raw
     * data must be the flattened, one-dimensional, row-major order of
     * the tensor elements without any stride or padding between the
     * elements. Note that the FP16 data type must be represented as raw
     * content as there is no specific data type for a 16-bit float
     * type.
     *
     * If this field is specified then InferOutputTensor::contents must
     * not be specified for any output tensor.
     * ```
     *
     * `repeated bytes raw_output_contents = 6;`
     * @param values The rawOutputContents to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllRawOutputContents")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, RawOutputContentsProxy>.plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.ByteString>) {
      addAll(values)
    }/**
     * ```
     * The data contained in an output tensor can be represented in
     * "raw" bytes form or in the repeated type that matches the
     * tensor's data type. To use the raw representation 'raw_output_contents'
     * must be initialized with data for each tensor in the same order as
     * 'outputs'. For each tensor, the size of this content must match
     * what is expected by the tensor's shape and data type. The raw
     * data must be the flattened, one-dimensional, row-major order of
     * the tensor elements without any stride or padding between the
     * elements. Note that the FP16 data type must be represented as raw
     * content as there is no specific data type for a 16-bit float
     * type.
     *
     * If this field is specified then InferOutputTensor::contents must
     * not be specified for any output tensor.
     * ```
     *
     * `repeated bytes raw_output_contents = 6;`
     * @param index The index to set the value at.
     * @param value The rawOutputContents to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setRawOutputContents")
    public operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, RawOutputContentsProxy>.set(index: kotlin.Int, value: com.google.protobuf.ByteString) {
      _builder.setRawOutputContents(index, value)
    }/**
     * ```
     * The data contained in an output tensor can be represented in
     * "raw" bytes form or in the repeated type that matches the
     * tensor's data type. To use the raw representation 'raw_output_contents'
     * must be initialized with data for each tensor in the same order as
     * 'outputs'. For each tensor, the size of this content must match
     * what is expected by the tensor's shape and data type. The raw
     * data must be the flattened, one-dimensional, row-major order of
     * the tensor elements without any stride or padding between the
     * elements. Note that the FP16 data type must be represented as raw
     * content as there is no specific data type for a 16-bit float
     * type.
     *
     * If this field is specified then InferOutputTensor::contents must
     * not be specified for any output tensor.
     * ```
     *
     * `repeated bytes raw_output_contents = 6;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearRawOutputContents")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, RawOutputContentsProxy>.clear() {
      _builder.clearRawOutputContents()
    }}
  @kotlin.jvm.JvmName("-initializeinferTensorContents")
  public inline fun inferTensorContents(block: io.seldon.mlops.inference.schema.ModelInferResponseKt.InferTensorContentsKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferTensorContents =
    io.seldon.mlops.inference.schema.ModelInferResponseKt.InferTensorContentsKt.Dsl._create(io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferTensorContents.newBuilder()).apply { block() }._build()
  /**
   * ```
   * The data contained in a tensor represented by the repeated type
   * that matches the tensor's data type. Protobuf oneof is not used
   * because oneofs cannot contain repeated fields.
   * ```
   *
   * Protobuf type `seldon.mlops.inference.schema.ModelInferResponse.InferTensorContents`
   */
  public object InferTensorContentsKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferTensorContents.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferTensorContents.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferTensorContents = _builder.build()

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class BoolContentsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * ```
       * Representation for BOOL data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated bool bool_contents = 1;`
       */
       public val boolContents: com.google.protobuf.kotlin.DslList<kotlin.Boolean, BoolContentsProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getBoolContentsList()
        )
      /**
       * ```
       * Representation for BOOL data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated bool bool_contents = 1;`
       * @param value The boolContents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addBoolContents")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Boolean, BoolContentsProxy>.add(value: kotlin.Boolean) {
        _builder.addBoolContents(value)
      }/**
       * ```
       * Representation for BOOL data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated bool bool_contents = 1;`
       * @param value The boolContents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignBoolContents")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Boolean, BoolContentsProxy>.plusAssign(value: kotlin.Boolean) {
        add(value)
      }/**
       * ```
       * Representation for BOOL data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated bool bool_contents = 1;`
       * @param values The boolContents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllBoolContents")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Boolean, BoolContentsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Boolean>) {
        _builder.addAllBoolContents(values)
      }/**
       * ```
       * Representation for BOOL data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated bool bool_contents = 1;`
       * @param values The boolContents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllBoolContents")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Boolean, BoolContentsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Boolean>) {
        addAll(values)
      }/**
       * ```
       * Representation for BOOL data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated bool bool_contents = 1;`
       * @param index The index to set the value at.
       * @param value The boolContents to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setBoolContents")
      public operator fun com.google.protobuf.kotlin.DslList<kotlin.Boolean, BoolContentsProxy>.set(index: kotlin.Int, value: kotlin.Boolean) {
        _builder.setBoolContents(index, value)
      }/**
       * ```
       * Representation for BOOL data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated bool bool_contents = 1;`
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearBoolContents")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Boolean, BoolContentsProxy>.clear() {
        _builder.clearBoolContents()
      }
      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class IntContentsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * ```
       * Representation for INT8, INT16, and INT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * ```
       *
       * `repeated int32 int_contents = 2;`
       */
       public val intContents: com.google.protobuf.kotlin.DslList<kotlin.Int, IntContentsProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getIntContentsList()
        )
      /**
       * ```
       * Representation for INT8, INT16, and INT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * ```
       *
       * `repeated int32 int_contents = 2;`
       * @param value The intContents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addIntContents")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Int, IntContentsProxy>.add(value: kotlin.Int) {
        _builder.addIntContents(value)
      }/**
       * ```
       * Representation for INT8, INT16, and INT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * ```
       *
       * `repeated int32 int_contents = 2;`
       * @param value The intContents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignIntContents")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, IntContentsProxy>.plusAssign(value: kotlin.Int) {
        add(value)
      }/**
       * ```
       * Representation for INT8, INT16, and INT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * ```
       *
       * `repeated int32 int_contents = 2;`
       * @param values The intContents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllIntContents")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Int, IntContentsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Int>) {
        _builder.addAllIntContents(values)
      }/**
       * ```
       * Representation for INT8, INT16, and INT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * ```
       *
       * `repeated int32 int_contents = 2;`
       * @param values The intContents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllIntContents")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, IntContentsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Int>) {
        addAll(values)
      }/**
       * ```
       * Representation for INT8, INT16, and INT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * ```
       *
       * `repeated int32 int_contents = 2;`
       * @param index The index to set the value at.
       * @param value The intContents to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setIntContents")
      public operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, IntContentsProxy>.set(index: kotlin.Int, value: kotlin.Int) {
        _builder.setIntContents(index, value)
      }/**
       * ```
       * Representation for INT8, INT16, and INT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * ```
       *
       * `repeated int32 int_contents = 2;`
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearIntContents")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Int, IntContentsProxy>.clear() {
        _builder.clearIntContents()
      }
      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class Int64ContentsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * ```
       * Representation for INT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated int64 int64_contents = 3;`
       */
       public val int64Contents: com.google.protobuf.kotlin.DslList<kotlin.Long, Int64ContentsProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getInt64ContentsList()
        )
      /**
       * ```
       * Representation for INT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated int64 int64_contents = 3;`
       * @param value The int64Contents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addInt64Contents")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Long, Int64ContentsProxy>.add(value: kotlin.Long) {
        _builder.addInt64Contents(value)
      }/**
       * ```
       * Representation for INT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated int64 int64_contents = 3;`
       * @param value The int64Contents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignInt64Contents")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, Int64ContentsProxy>.plusAssign(value: kotlin.Long) {
        add(value)
      }/**
       * ```
       * Representation for INT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated int64 int64_contents = 3;`
       * @param values The int64Contents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllInt64Contents")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Long, Int64ContentsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Long>) {
        _builder.addAllInt64Contents(values)
      }/**
       * ```
       * Representation for INT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated int64 int64_contents = 3;`
       * @param values The int64Contents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllInt64Contents")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, Int64ContentsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Long>) {
        addAll(values)
      }/**
       * ```
       * Representation for INT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated int64 int64_contents = 3;`
       * @param index The index to set the value at.
       * @param value The int64Contents to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setInt64Contents")
      public operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, Int64ContentsProxy>.set(index: kotlin.Int, value: kotlin.Long) {
        _builder.setInt64Contents(index, value)
      }/**
       * ```
       * Representation for INT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated int64 int64_contents = 3;`
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearInt64Contents")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Long, Int64ContentsProxy>.clear() {
        _builder.clearInt64Contents()
      }
      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class UintContentsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * ```
       * Representation for UINT8, UINT16, and UINT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * ```
       *
       * `repeated uint32 uint_contents = 4;`
       */
       public val uintContents: com.google.protobuf.kotlin.DslList<kotlin.Int, UintContentsProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getUintContentsList()
        )
      /**
       * ```
       * Representation for UINT8, UINT16, and UINT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * ```
       *
       * `repeated uint32 uint_contents = 4;`
       * @param value The uintContents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addUintContents")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Int, UintContentsProxy>.add(value: kotlin.Int) {
        _builder.addUintContents(value)
      }/**
       * ```
       * Representation for UINT8, UINT16, and UINT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * ```
       *
       * `repeated uint32 uint_contents = 4;`
       * @param value The uintContents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignUintContents")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, UintContentsProxy>.plusAssign(value: kotlin.Int) {
        add(value)
      }/**
       * ```
       * Representation for UINT8, UINT16, and UINT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * ```
       *
       * `repeated uint32 uint_contents = 4;`
       * @param values The uintContents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllUintContents")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Int, UintContentsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Int>) {
        _builder.addAllUintContents(values)
      }/**
       * ```
       * Representation for UINT8, UINT16, and UINT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * ```
       *
       * `repeated uint32 uint_contents = 4;`
       * @param values The uintContents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllUintContents")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, UintContentsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Int>) {
        addAll(values)
      }/**
       * ```
       * Representation for UINT8, UINT16, and UINT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * ```
       *
       * `repeated uint32 uint_contents = 4;`
       * @param index The index to set the value at.
       * @param value The uintContents to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setUintContents")
      public operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, UintContentsProxy>.set(index: kotlin.Int, value: kotlin.Int) {
        _builder.setUintContents(index, value)
      }/**
       * ```
       * Representation for UINT8, UINT16, and UINT32 data types. The size
       * must match what is expected by the tensor's shape. The contents
       * must be the flattened, one-dimensional, row-major order of the
       * tensor elements.
       * ```
       *
       * `repeated uint32 uint_contents = 4;`
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearUintContents")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Int, UintContentsProxy>.clear() {
        _builder.clearUintContents()
      }
      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class Uint64ContentsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * ```
       * Representation for UINT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated uint64 uint64_contents = 5;`
       */
       public val uint64Contents: com.google.protobuf.kotlin.DslList<kotlin.Long, Uint64ContentsProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getUint64ContentsList()
        )
      /**
       * ```
       * Representation for UINT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated uint64 uint64_contents = 5;`
       * @param value The uint64Contents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addUint64Contents")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Long, Uint64ContentsProxy>.add(value: kotlin.Long) {
        _builder.addUint64Contents(value)
      }/**
       * ```
       * Representation for UINT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated uint64 uint64_contents = 5;`
       * @param value The uint64Contents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignUint64Contents")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, Uint64ContentsProxy>.plusAssign(value: kotlin.Long) {
        add(value)
      }/**
       * ```
       * Representation for UINT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated uint64 uint64_contents = 5;`
       * @param values The uint64Contents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllUint64Contents")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Long, Uint64ContentsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Long>) {
        _builder.addAllUint64Contents(values)
      }/**
       * ```
       * Representation for UINT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated uint64 uint64_contents = 5;`
       * @param values The uint64Contents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllUint64Contents")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, Uint64ContentsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Long>) {
        addAll(values)
      }/**
       * ```
       * Representation for UINT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated uint64 uint64_contents = 5;`
       * @param index The index to set the value at.
       * @param value The uint64Contents to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setUint64Contents")
      public operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, Uint64ContentsProxy>.set(index: kotlin.Int, value: kotlin.Long) {
        _builder.setUint64Contents(index, value)
      }/**
       * ```
       * Representation for UINT64 data types. The size must match what
       * is expected by the tensor's shape. The contents must be the
       * flattened, one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated uint64 uint64_contents = 5;`
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearUint64Contents")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Long, Uint64ContentsProxy>.clear() {
        _builder.clearUint64Contents()
      }
      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class Fp32ContentsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * ```
       * Representation for FP32 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated float fp32_contents = 6;`
       */
       public val fp32Contents: com.google.protobuf.kotlin.DslList<kotlin.Float, Fp32ContentsProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getFp32ContentsList()
        )
      /**
       * ```
       * Representation for FP32 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated float fp32_contents = 6;`
       * @param value The fp32Contents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addFp32Contents")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Float, Fp32ContentsProxy>.add(value: kotlin.Float) {
        _builder.addFp32Contents(value)
      }/**
       * ```
       * Representation for FP32 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated float fp32_contents = 6;`
       * @param value The fp32Contents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignFp32Contents")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, Fp32ContentsProxy>.plusAssign(value: kotlin.Float) {
        add(value)
      }/**
       * ```
       * Representation for FP32 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated float fp32_contents = 6;`
       * @param values The fp32Contents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllFp32Contents")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Float, Fp32ContentsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Float>) {
        _builder.addAllFp32Contents(values)
      }/**
       * ```
       * Representation for FP32 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated float fp32_contents = 6;`
       * @param values The fp32Contents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllFp32Contents")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, Fp32ContentsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Float>) {
        addAll(values)
      }/**
       * ```
       * Representation for FP32 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated float fp32_contents = 6;`
       * @param index The index to set the value at.
       * @param value The fp32Contents to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setFp32Contents")
      public operator fun com.google.protobuf.kotlin.DslList<kotlin.Float, Fp32ContentsProxy>.set(index: kotlin.Int, value: kotlin.Float) {
        _builder.setFp32Contents(index, value)
      }/**
       * ```
       * Representation for FP32 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated float fp32_contents = 6;`
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearFp32Contents")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Float, Fp32ContentsProxy>.clear() {
        _builder.clearFp32Contents()
      }
      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class Fp64ContentsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * ```
       * Representation for FP64 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated double fp64_contents = 7;`
       */
       public val fp64Contents: com.google.protobuf.kotlin.DslList<kotlin.Double, Fp64ContentsProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getFp64ContentsList()
        )
      /**
       * ```
       * Representation for FP64 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated double fp64_contents = 7;`
       * @param value The fp64Contents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addFp64Contents")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Double, Fp64ContentsProxy>.add(value: kotlin.Double) {
        _builder.addFp64Contents(value)
      }/**
       * ```
       * Representation for FP64 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated double fp64_contents = 7;`
       * @param value The fp64Contents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignFp64Contents")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, Fp64ContentsProxy>.plusAssign(value: kotlin.Double) {
        add(value)
      }/**
       * ```
       * Representation for FP64 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated double fp64_contents = 7;`
       * @param values The fp64Contents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllFp64Contents")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Double, Fp64ContentsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Double>) {
        _builder.addAllFp64Contents(values)
      }/**
       * ```
       * Representation for FP64 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated double fp64_contents = 7;`
       * @param values The fp64Contents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllFp64Contents")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, Fp64ContentsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Double>) {
        addAll(values)
      }/**
       * ```
       * Representation for FP64 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated double fp64_contents = 7;`
       * @param index The index to set the value at.
       * @param value The fp64Contents to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setFp64Contents")
      public operator fun com.google.protobuf.kotlin.DslList<kotlin.Double, Fp64ContentsProxy>.set(index: kotlin.Int, value: kotlin.Double) {
        _builder.setFp64Contents(index, value)
      }/**
       * ```
       * Representation for FP64 data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated double fp64_contents = 7;`
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearFp64Contents")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Double, Fp64ContentsProxy>.clear() {
        _builder.clearFp64Contents()
      }
      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class BytesContentsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * ```
       * Representation for BYTES data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated bytes bytes_contents = 8;`
       */
       public val bytesContents: com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, BytesContentsProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getBytesContentsList()
        )
      /**
       * ```
       * Representation for BYTES data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated bytes bytes_contents = 8;`
       * @param value The bytesContents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addBytesContents")
      public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, BytesContentsProxy>.add(value: com.google.protobuf.ByteString) {
        _builder.addBytesContents(value)
      }/**
       * ```
       * Representation for BYTES data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated bytes bytes_contents = 8;`
       * @param value The bytesContents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignBytesContents")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, BytesContentsProxy>.plusAssign(value: com.google.protobuf.ByteString) {
        add(value)
      }/**
       * ```
       * Representation for BYTES data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated bytes bytes_contents = 8;`
       * @param values The bytesContents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllBytesContents")
      public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, BytesContentsProxy>.addAll(values: kotlin.collections.Iterable<com.google.protobuf.ByteString>) {
        _builder.addAllBytesContents(values)
      }/**
       * ```
       * Representation for BYTES data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated bytes bytes_contents = 8;`
       * @param values The bytesContents to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllBytesContents")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, BytesContentsProxy>.plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.ByteString>) {
        addAll(values)
      }/**
       * ```
       * Representation for BYTES data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated bytes bytes_contents = 8;`
       * @param index The index to set the value at.
       * @param value The bytesContents to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setBytesContents")
      public operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, BytesContentsProxy>.set(index: kotlin.Int, value: com.google.protobuf.ByteString) {
        _builder.setBytesContents(index, value)
      }/**
       * ```
       * Representation for BYTES data type. The size must match what is
       * expected by the tensor's shape. The contents must be the flattened,
       * one-dimensional, row-major order of the tensor elements.
       * ```
       *
       * `repeated bytes bytes_contents = 8;`
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearBytesContents")
      public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, BytesContentsProxy>.clear() {
        _builder.clearBytesContents()
      }}
  }
  @kotlin.jvm.JvmName("-initializeinferParameter")
  public inline fun inferParameter(block: io.seldon.mlops.inference.schema.ModelInferResponseKt.InferParameterKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter =
    io.seldon.mlops.inference.schema.ModelInferResponseKt.InferParameterKt.Dsl._create(io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter.newBuilder()).apply { block() }._build()
  /**
   * ```
   * An inference parameter value. The Parameters message describes a
   * “name”/”value” pair, where the “name” is the name of the parameter
   * and the “value” is a boolean, integer, or string corresponding to
   * the parameter.
   * ```
   *
   * Protobuf type `seldon.mlops.inference.schema.ModelInferResponse.InferParameter`
   */
  public object InferParameterKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter = _builder.build()

      /**
       * ```
       * A boolean parameter value.
       * ```
       *
       * `bool bool_param = 1;`
       */
      public var boolParam: kotlin.Boolean
        @JvmName("getBoolParam")
        get() = _builder.getBoolParam()
        @JvmName("setBoolParam")
        set(value) {
          _builder.setBoolParam(value)
        }
      /**
       * ```
       * A boolean parameter value.
       * ```
       *
       * `bool bool_param = 1;`
       */
      public fun clearBoolParam() {
        _builder.clearBoolParam()
      }
      /**
       * ```
       * A boolean parameter value.
       * ```
       *
       * `bool bool_param = 1;`
       * @return Whether the boolParam field is set.
       */
      public fun hasBoolParam(): kotlin.Boolean {
        return _builder.hasBoolParam()
      }

      /**
       * ```
       * An int64 parameter value.
       * ```
       *
       * `int64 int64_param = 2;`
       */
      public var int64Param: kotlin.Long
        @JvmName("getInt64Param")
        get() = _builder.getInt64Param()
        @JvmName("setInt64Param")
        set(value) {
          _builder.setInt64Param(value)
        }
      /**
       * ```
       * An int64 parameter value.
       * ```
       *
       * `int64 int64_param = 2;`
       */
      public fun clearInt64Param() {
        _builder.clearInt64Param()
      }
      /**
       * ```
       * An int64 parameter value.
       * ```
       *
       * `int64 int64_param = 2;`
       * @return Whether the int64Param field is set.
       */
      public fun hasInt64Param(): kotlin.Boolean {
        return _builder.hasInt64Param()
      }

      /**
       * ```
       * A string parameter value.
       * ```
       *
       * `string string_param = 3;`
       */
      public var stringParam: kotlin.String
        @JvmName("getStringParam")
        get() = _builder.getStringParam()
        @JvmName("setStringParam")
        set(value) {
          _builder.setStringParam(value)
        }
      /**
       * ```
       * A string parameter value.
       * ```
       *
       * `string string_param = 3;`
       */
      public fun clearStringParam() {
        _builder.clearStringParam()
      }
      /**
       * ```
       * A string parameter value.
       * ```
       *
       * `string string_param = 3;`
       * @return Whether the stringParam field is set.
       */
      public fun hasStringParam(): kotlin.Boolean {
        return _builder.hasStringParam()
      }
      public val parameterChoiceCase: io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter.ParameterChoiceCase
        @JvmName("getParameterChoiceCase")
        get() = _builder.getParameterChoiceCase()

      public fun clearParameterChoice() {
        _builder.clearParameterChoice()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializeinferOutputTensor")
  public inline fun inferOutputTensor(block: io.seldon.mlops.inference.schema.ModelInferResponseKt.InferOutputTensorKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferOutputTensor =
    io.seldon.mlops.inference.schema.ModelInferResponseKt.InferOutputTensorKt.Dsl._create(io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferOutputTensor.newBuilder()).apply { block() }._build()
  /**
   * ```
   * An output tensor returned for an inference request.
   * ```
   *
   * Protobuf type `seldon.mlops.inference.schema.ModelInferResponse.InferOutputTensor`
   */
  public object InferOutputTensorKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferOutputTensor.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferOutputTensor.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferOutputTensor = _builder.build()

      /**
       * ```
       * The tensor name.
       * ```
       *
       * `string name = 1;`
       */
      public var name: kotlin.String
        @JvmName("getName")
        get() = _builder.getName()
        @JvmName("setName")
        set(value) {
          _builder.setName(value)
        }
      /**
       * ```
       * The tensor name.
       * ```
       *
       * `string name = 1;`
       */
      public fun clearName() {
        _builder.clearName()
      }

      /**
       * ```
       * The tensor data type.
       * ```
       *
       * `string datatype = 2;`
       */
      public var datatype: kotlin.String
        @JvmName("getDatatype")
        get() = _builder.getDatatype()
        @JvmName("setDatatype")
        set(value) {
          _builder.setDatatype(value)
        }
      /**
       * ```
       * The tensor data type.
       * ```
       *
       * `string datatype = 2;`
       */
      public fun clearDatatype() {
        _builder.clearDatatype()
      }

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class ShapeProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * ```
       * The tensor shape.
       * ```
       *
       * `repeated int64 shape = 3;`
       */
       public val shape: com.google.protobuf.kotlin.DslList<kotlin.Long, ShapeProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getShapeList()
        )
      /**
       * ```
       * The tensor shape.
       * ```
       *
       * `repeated int64 shape = 3;`
       * @param value The shape to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addShape")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Long, ShapeProxy>.add(value: kotlin.Long) {
        _builder.addShape(value)
      }/**
       * ```
       * The tensor shape.
       * ```
       *
       * `repeated int64 shape = 3;`
       * @param value The shape to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignShape")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, ShapeProxy>.plusAssign(value: kotlin.Long) {
        add(value)
      }/**
       * ```
       * The tensor shape.
       * ```
       *
       * `repeated int64 shape = 3;`
       * @param values The shape to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllShape")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Long, ShapeProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Long>) {
        _builder.addAllShape(values)
      }/**
       * ```
       * The tensor shape.
       * ```
       *
       * `repeated int64 shape = 3;`
       * @param values The shape to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllShape")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, ShapeProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Long>) {
        addAll(values)
      }/**
       * ```
       * The tensor shape.
       * ```
       *
       * `repeated int64 shape = 3;`
       * @param index The index to set the value at.
       * @param value The shape to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setShape")
      public operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, ShapeProxy>.set(index: kotlin.Int, value: kotlin.Long) {
        _builder.setShape(index, value)
      }/**
       * ```
       * The tensor shape.
       * ```
       *
       * `repeated int64 shape = 3;`
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearShape")
      public fun com.google.protobuf.kotlin.DslList<kotlin.Long, ShapeProxy>.clear() {
        _builder.clearShape()
      }
      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class ParametersProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * ```
       * Optional output tensor parameters.
       * ```
       *
       * `map<string, .seldon.mlops.inference.schema.ModelInferResponse.InferParameter> parameters = 4;`
       */
       public val parameters: com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter, ParametersProxy>
        @kotlin.jvm.JvmSynthetic
        @JvmName("getParametersMap")
        get() = com.google.protobuf.kotlin.DslMap(
          _builder.getParametersMap()
        )
      /**
       * ```
       * Optional output tensor parameters.
       * ```
       *
       * `map<string, .seldon.mlops.inference.schema.ModelInferResponse.InferParameter> parameters = 4;`
       */
      @JvmName("putParameters")
      public fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter, ParametersProxy>
        .put(key: kotlin.String, value: io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter) {
           _builder.putParameters(key, value)
         }
      /**
       * ```
       * Optional output tensor parameters.
       * ```
       *
       * `map<string, .seldon.mlops.inference.schema.ModelInferResponse.InferParameter> parameters = 4;`
       */
      @kotlin.jvm.JvmSynthetic
      @JvmName("setParameters")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter, ParametersProxy>
        .set(key: kotlin.String, value: io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter) {
           put(key, value)
         }
      /**
       * ```
       * Optional output tensor parameters.
       * ```
       *
       * `map<string, .seldon.mlops.inference.schema.ModelInferResponse.InferParameter> parameters = 4;`
       */
      @kotlin.jvm.JvmSynthetic
      @JvmName("removeParameters")
      public fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter, ParametersProxy>
        .remove(key: kotlin.String) {
           _builder.removeParameters(key)
         }
      /**
       * ```
       * Optional output tensor parameters.
       * ```
       *
       * `map<string, .seldon.mlops.inference.schema.ModelInferResponse.InferParameter> parameters = 4;`
       */
      @kotlin.jvm.JvmSynthetic
      @JvmName("putAllParameters")
      public fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter, ParametersProxy>
        .putAll(map: kotlin.collections.Map<kotlin.String, io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter>) {
           _builder.putAllParameters(map)
         }
      /**
       * ```
       * Optional output tensor parameters.
       * ```
       *
       * `map<string, .seldon.mlops.inference.schema.ModelInferResponse.InferParameter> parameters = 4;`
       */
      @kotlin.jvm.JvmSynthetic
      @JvmName("clearParameters")
      public fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter, ParametersProxy>
        .clear() {
           _builder.clearParameters()
         }

      /**
       * ```
       * The tensor contents using a data-type format. This field must
       * not be specified if "raw" tensor contents are being used for
       * the inference response.
       * ```
       *
       * `.seldon.mlops.inference.schema.ModelInferResponse.InferTensorContents contents = 5;`
       */
      public var contents: io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferTensorContents
        @JvmName("getContents")
        get() = _builder.getContents()
        @JvmName("setContents")
        set(value) {
          _builder.setContents(value)
        }
      /**
       * ```
       * The tensor contents using a data-type format. This field must
       * not be specified if "raw" tensor contents are being used for
       * the inference response.
       * ```
       *
       * `.seldon.mlops.inference.schema.ModelInferResponse.InferTensorContents contents = 5;`
       */
      public fun clearContents() {
        _builder.clearContents()
      }
      /**
       * ```
       * The tensor contents using a data-type format. This field must
       * not be specified if "raw" tensor contents are being used for
       * the inference response.
       * ```
       *
       * `.seldon.mlops.inference.schema.ModelInferResponse.InferTensorContents contents = 5;`
       * @return Whether the contents field is set.
       */
      public fun hasContents(): kotlin.Boolean {
        return _builder.hasContents()
      }
      public val InferOutputTensorKt.Dsl.contentsOrNull: io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferTensorContents?
        get() = _builder.contentsOrNull
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.copy(block: `io.seldon.mlops.inference.schema`.ModelInferResponseKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse =
  `io.seldon.mlops.inference.schema`.ModelInferResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferTensorContents.copy(block: `io.seldon.mlops.inference.schema`.ModelInferResponseKt.InferTensorContentsKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferTensorContents =
  `io.seldon.mlops.inference.schema`.ModelInferResponseKt.InferTensorContentsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter.copy(block: `io.seldon.mlops.inference.schema`.ModelInferResponseKt.InferParameterKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferParameter =
  `io.seldon.mlops.inference.schema`.ModelInferResponseKt.InferParameterKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferOutputTensor.copy(block: `io.seldon.mlops.inference.schema`.ModelInferResponseKt.InferOutputTensorKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferOutputTensor =
  `io.seldon.mlops.inference.schema`.ModelInferResponseKt.InferOutputTensorKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferOutputTensorOrBuilder.contentsOrNull: io.seldon.mlops.inference.schema.InferResponse.ModelInferResponse.InferTensorContents?
  get() = if (hasContents()) getContents() else null

