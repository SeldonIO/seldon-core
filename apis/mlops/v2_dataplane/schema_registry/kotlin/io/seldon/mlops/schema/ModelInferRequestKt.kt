// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: inference_schema.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.seldon.mlops.schema;

@kotlin.jvm.JvmName("-initializemodelInferRequest")
public inline fun modelInferRequest(block: io.seldon.mlops.schema.ModelInferRequestKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.schema.InferenceSchema.ModelInferRequest =
  io.seldon.mlops.schema.ModelInferRequestKt.Dsl._create(io.seldon.mlops.schema.InferenceSchema.ModelInferRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `seldon.mlops.inference.schema.ModelInferRequest`
 */
public object ModelInferRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.seldon.mlops.schema.InferenceSchema.ModelInferRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.seldon.mlops.schema.InferenceSchema.ModelInferRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.seldon.mlops.schema.InferenceSchema.ModelInferRequest = _builder.build()

    /**
     * ```
     * The name of the model to use for inferencing.
     * ```
     *
     * `string model_name = 1;`
     */
    public var modelName: kotlin.String
      @JvmName("getModelName")
      get() = _builder.getModelName()
      @JvmName("setModelName")
      set(value) {
        _builder.setModelName(value)
      }
    /**
     * ```
     * The name of the model to use for inferencing.
     * ```
     *
     * `string model_name = 1;`
     */
    public fun clearModelName() {
      _builder.clearModelName()
    }

    /**
     * ```
     * The version of the model to use for inference. If not given the
     * server will choose a version based on the model and internal policy.
     * ```
     *
     * `string model_version = 2;`
     */
    public var modelVersion: kotlin.String
      @JvmName("getModelVersion")
      get() = _builder.getModelVersion()
      @JvmName("setModelVersion")
      set(value) {
        _builder.setModelVersion(value)
      }
    /**
     * ```
     * The version of the model to use for inference. If not given the
     * server will choose a version based on the model and internal policy.
     * ```
     *
     * `string model_version = 2;`
     */
    public fun clearModelVersion() {
      _builder.clearModelVersion()
    }

    /**
     * ```
     * Optional identifier for the request. If specified will be
     * returned in the response.
     * ```
     *
     * `string id = 3;`
     */
    public var id: kotlin.String
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * ```
     * Optional identifier for the request. If specified will be
     * returned in the response.
     * ```
     *
     * `string id = 3;`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ParametersProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * Optional inference parameters.
     * ```
     *
     * `map<string, .seldon.mlops.inference.schema.InferParameter> parameters = 4;`
     */
     public val parameters: com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.schema.InferenceSchema.InferParameter, ParametersProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getParametersMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getParametersMap()
      )
    /**
     * ```
     * Optional inference parameters.
     * ```
     *
     * `map<string, .seldon.mlops.inference.schema.InferParameter> parameters = 4;`
     */
    @JvmName("putParameters")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.schema.InferenceSchema.InferParameter, ParametersProxy>
      .put(key: kotlin.String, value: io.seldon.mlops.schema.InferenceSchema.InferParameter) {
         _builder.putParameters(key, value)
       }
    /**
     * ```
     * Optional inference parameters.
     * ```
     *
     * `map<string, .seldon.mlops.inference.schema.InferParameter> parameters = 4;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setParameters")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.schema.InferenceSchema.InferParameter, ParametersProxy>
      .set(key: kotlin.String, value: io.seldon.mlops.schema.InferenceSchema.InferParameter) {
         put(key, value)
       }
    /**
     * ```
     * Optional inference parameters.
     * ```
     *
     * `map<string, .seldon.mlops.inference.schema.InferParameter> parameters = 4;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeParameters")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.schema.InferenceSchema.InferParameter, ParametersProxy>
      .remove(key: kotlin.String) {
         _builder.removeParameters(key)
       }
    /**
     * ```
     * Optional inference parameters.
     * ```
     *
     * `map<string, .seldon.mlops.inference.schema.InferParameter> parameters = 4;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllParameters")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.schema.InferenceSchema.InferParameter, ParametersProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, io.seldon.mlops.schema.InferenceSchema.InferParameter>) {
         _builder.putAllParameters(map)
       }
    /**
     * ```
     * Optional inference parameters.
     * ```
     *
     * `map<string, .seldon.mlops.inference.schema.InferParameter> parameters = 4;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearParameters")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.schema.InferenceSchema.InferParameter, ParametersProxy>
      .clear() {
         _builder.clearParameters()
       }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class InputsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * The input tensors for the inference.
     * ```
     *
     * `repeated .seldon.mlops.inference.schema.InferInputTensor inputs = 5;`
     */
     public val inputs: com.google.protobuf.kotlin.DslList<io.seldon.mlops.schema.InferenceSchema.InferInputTensor, InputsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getInputsList()
      )
    /**
     * ```
     * The input tensors for the inference.
     * ```
     *
     * `repeated .seldon.mlops.inference.schema.InferInputTensor inputs = 5;`
     * @param value The inputs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addInputs")
    public fun com.google.protobuf.kotlin.DslList<io.seldon.mlops.schema.InferenceSchema.InferInputTensor, InputsProxy>.add(value: io.seldon.mlops.schema.InferenceSchema.InferInputTensor) {
      _builder.addInputs(value)
    }
    /**
     * ```
     * The input tensors for the inference.
     * ```
     *
     * `repeated .seldon.mlops.inference.schema.InferInputTensor inputs = 5;`
     * @param value The inputs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignInputs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<io.seldon.mlops.schema.InferenceSchema.InferInputTensor, InputsProxy>.plusAssign(value: io.seldon.mlops.schema.InferenceSchema.InferInputTensor) {
      add(value)
    }
    /**
     * ```
     * The input tensors for the inference.
     * ```
     *
     * `repeated .seldon.mlops.inference.schema.InferInputTensor inputs = 5;`
     * @param values The inputs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllInputs")
    public fun com.google.protobuf.kotlin.DslList<io.seldon.mlops.schema.InferenceSchema.InferInputTensor, InputsProxy>.addAll(values: kotlin.collections.Iterable<io.seldon.mlops.schema.InferenceSchema.InferInputTensor>) {
      _builder.addAllInputs(values)
    }
    /**
     * ```
     * The input tensors for the inference.
     * ```
     *
     * `repeated .seldon.mlops.inference.schema.InferInputTensor inputs = 5;`
     * @param values The inputs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllInputs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<io.seldon.mlops.schema.InferenceSchema.InferInputTensor, InputsProxy>.plusAssign(values: kotlin.collections.Iterable<io.seldon.mlops.schema.InferenceSchema.InferInputTensor>) {
      addAll(values)
    }
    /**
     * ```
     * The input tensors for the inference.
     * ```
     *
     * `repeated .seldon.mlops.inference.schema.InferInputTensor inputs = 5;`
     * @param index The index to set the value at.
     * @param value The inputs to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setInputs")
    public operator fun com.google.protobuf.kotlin.DslList<io.seldon.mlops.schema.InferenceSchema.InferInputTensor, InputsProxy>.set(index: kotlin.Int, value: io.seldon.mlops.schema.InferenceSchema.InferInputTensor) {
      _builder.setInputs(index, value)
    }
    /**
     * ```
     * The input tensors for the inference.
     * ```
     *
     * `repeated .seldon.mlops.inference.schema.InferInputTensor inputs = 5;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearInputs")
    public fun com.google.protobuf.kotlin.DslList<io.seldon.mlops.schema.InferenceSchema.InferInputTensor, InputsProxy>.clear() {
      _builder.clearInputs()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class OutputsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * The requested output tensors for the inference. Optional, if not
     * specified all outputs produced by the model will be returned.
     * ```
     *
     * `repeated .seldon.mlops.inference.schema.InferRequestedOutputTensor outputs = 6;`
     */
     public val outputs: com.google.protobuf.kotlin.DslList<io.seldon.mlops.schema.InferenceSchema.InferRequestedOutputTensor, OutputsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getOutputsList()
      )
    /**
     * ```
     * The requested output tensors for the inference. Optional, if not
     * specified all outputs produced by the model will be returned.
     * ```
     *
     * `repeated .seldon.mlops.inference.schema.InferRequestedOutputTensor outputs = 6;`
     * @param value The outputs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addOutputs")
    public fun com.google.protobuf.kotlin.DslList<io.seldon.mlops.schema.InferenceSchema.InferRequestedOutputTensor, OutputsProxy>.add(value: io.seldon.mlops.schema.InferenceSchema.InferRequestedOutputTensor) {
      _builder.addOutputs(value)
    }
    /**
     * ```
     * The requested output tensors for the inference. Optional, if not
     * specified all outputs produced by the model will be returned.
     * ```
     *
     * `repeated .seldon.mlops.inference.schema.InferRequestedOutputTensor outputs = 6;`
     * @param value The outputs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignOutputs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<io.seldon.mlops.schema.InferenceSchema.InferRequestedOutputTensor, OutputsProxy>.plusAssign(value: io.seldon.mlops.schema.InferenceSchema.InferRequestedOutputTensor) {
      add(value)
    }
    /**
     * ```
     * The requested output tensors for the inference. Optional, if not
     * specified all outputs produced by the model will be returned.
     * ```
     *
     * `repeated .seldon.mlops.inference.schema.InferRequestedOutputTensor outputs = 6;`
     * @param values The outputs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllOutputs")
    public fun com.google.protobuf.kotlin.DslList<io.seldon.mlops.schema.InferenceSchema.InferRequestedOutputTensor, OutputsProxy>.addAll(values: kotlin.collections.Iterable<io.seldon.mlops.schema.InferenceSchema.InferRequestedOutputTensor>) {
      _builder.addAllOutputs(values)
    }
    /**
     * ```
     * The requested output tensors for the inference. Optional, if not
     * specified all outputs produced by the model will be returned.
     * ```
     *
     * `repeated .seldon.mlops.inference.schema.InferRequestedOutputTensor outputs = 6;`
     * @param values The outputs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllOutputs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<io.seldon.mlops.schema.InferenceSchema.InferRequestedOutputTensor, OutputsProxy>.plusAssign(values: kotlin.collections.Iterable<io.seldon.mlops.schema.InferenceSchema.InferRequestedOutputTensor>) {
      addAll(values)
    }
    /**
     * ```
     * The requested output tensors for the inference. Optional, if not
     * specified all outputs produced by the model will be returned.
     * ```
     *
     * `repeated .seldon.mlops.inference.schema.InferRequestedOutputTensor outputs = 6;`
     * @param index The index to set the value at.
     * @param value The outputs to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setOutputs")
    public operator fun com.google.protobuf.kotlin.DslList<io.seldon.mlops.schema.InferenceSchema.InferRequestedOutputTensor, OutputsProxy>.set(index: kotlin.Int, value: io.seldon.mlops.schema.InferenceSchema.InferRequestedOutputTensor) {
      _builder.setOutputs(index, value)
    }
    /**
     * ```
     * The requested output tensors for the inference. Optional, if not
     * specified all outputs produced by the model will be returned.
     * ```
     *
     * `repeated .seldon.mlops.inference.schema.InferRequestedOutputTensor outputs = 6;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearOutputs")
    public fun com.google.protobuf.kotlin.DslList<io.seldon.mlops.schema.InferenceSchema.InferRequestedOutputTensor, OutputsProxy>.clear() {
      _builder.clearOutputs()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class RawInputContentsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * The data contained in an input tensor can be represented in "raw"
     * bytes form or in the repeated type that matches the tensor's data
     * type. To use the raw representation 'raw_input_contents' must be
     * initialized with data for each tensor in the same order as
     * 'inputs'. For each tensor, the size of this content must match
     * what is expected by the tensor's shape and data type. The raw
     * data must be the flattened, one-dimensional, row-major order of
     * the tensor elements without any stride or padding between the
     * elements. Note that the FP16 data type must be represented as raw
     * content as there is no specific data type for a 16-bit float
     * type.
     *
     * If this field is specified then InferInputTensor::contents must
     * not be specified for any input tensor.
     * ```
     *
     * `repeated bytes raw_input_contents = 7;`
     */
     public val rawInputContents: com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, RawInputContentsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getRawInputContentsList()
      )
    /**
     * ```
     * The data contained in an input tensor can be represented in "raw"
     * bytes form or in the repeated type that matches the tensor's data
     * type. To use the raw representation 'raw_input_contents' must be
     * initialized with data for each tensor in the same order as
     * 'inputs'. For each tensor, the size of this content must match
     * what is expected by the tensor's shape and data type. The raw
     * data must be the flattened, one-dimensional, row-major order of
     * the tensor elements without any stride or padding between the
     * elements. Note that the FP16 data type must be represented as raw
     * content as there is no specific data type for a 16-bit float
     * type.
     *
     * If this field is specified then InferInputTensor::contents must
     * not be specified for any input tensor.
     * ```
     *
     * `repeated bytes raw_input_contents = 7;`
     * @param value The rawInputContents to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addRawInputContents")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, RawInputContentsProxy>.add(value: com.google.protobuf.ByteString) {
      _builder.addRawInputContents(value)
    }/**
     * ```
     * The data contained in an input tensor can be represented in "raw"
     * bytes form or in the repeated type that matches the tensor's data
     * type. To use the raw representation 'raw_input_contents' must be
     * initialized with data for each tensor in the same order as
     * 'inputs'. For each tensor, the size of this content must match
     * what is expected by the tensor's shape and data type. The raw
     * data must be the flattened, one-dimensional, row-major order of
     * the tensor elements without any stride or padding between the
     * elements. Note that the FP16 data type must be represented as raw
     * content as there is no specific data type for a 16-bit float
     * type.
     *
     * If this field is specified then InferInputTensor::contents must
     * not be specified for any input tensor.
     * ```
     *
     * `repeated bytes raw_input_contents = 7;`
     * @param value The rawInputContents to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignRawInputContents")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, RawInputContentsProxy>.plusAssign(value: com.google.protobuf.ByteString) {
      add(value)
    }/**
     * ```
     * The data contained in an input tensor can be represented in "raw"
     * bytes form or in the repeated type that matches the tensor's data
     * type. To use the raw representation 'raw_input_contents' must be
     * initialized with data for each tensor in the same order as
     * 'inputs'. For each tensor, the size of this content must match
     * what is expected by the tensor's shape and data type. The raw
     * data must be the flattened, one-dimensional, row-major order of
     * the tensor elements without any stride or padding between the
     * elements. Note that the FP16 data type must be represented as raw
     * content as there is no specific data type for a 16-bit float
     * type.
     *
     * If this field is specified then InferInputTensor::contents must
     * not be specified for any input tensor.
     * ```
     *
     * `repeated bytes raw_input_contents = 7;`
     * @param values The rawInputContents to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllRawInputContents")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, RawInputContentsProxy>.addAll(values: kotlin.collections.Iterable<com.google.protobuf.ByteString>) {
      _builder.addAllRawInputContents(values)
    }/**
     * ```
     * The data contained in an input tensor can be represented in "raw"
     * bytes form or in the repeated type that matches the tensor's data
     * type. To use the raw representation 'raw_input_contents' must be
     * initialized with data for each tensor in the same order as
     * 'inputs'. For each tensor, the size of this content must match
     * what is expected by the tensor's shape and data type. The raw
     * data must be the flattened, one-dimensional, row-major order of
     * the tensor elements without any stride or padding between the
     * elements. Note that the FP16 data type must be represented as raw
     * content as there is no specific data type for a 16-bit float
     * type.
     *
     * If this field is specified then InferInputTensor::contents must
     * not be specified for any input tensor.
     * ```
     *
     * `repeated bytes raw_input_contents = 7;`
     * @param values The rawInputContents to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllRawInputContents")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, RawInputContentsProxy>.plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.ByteString>) {
      addAll(values)
    }/**
     * ```
     * The data contained in an input tensor can be represented in "raw"
     * bytes form or in the repeated type that matches the tensor's data
     * type. To use the raw representation 'raw_input_contents' must be
     * initialized with data for each tensor in the same order as
     * 'inputs'. For each tensor, the size of this content must match
     * what is expected by the tensor's shape and data type. The raw
     * data must be the flattened, one-dimensional, row-major order of
     * the tensor elements without any stride or padding between the
     * elements. Note that the FP16 data type must be represented as raw
     * content as there is no specific data type for a 16-bit float
     * type.
     *
     * If this field is specified then InferInputTensor::contents must
     * not be specified for any input tensor.
     * ```
     *
     * `repeated bytes raw_input_contents = 7;`
     * @param index The index to set the value at.
     * @param value The rawInputContents to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setRawInputContents")
    public operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, RawInputContentsProxy>.set(index: kotlin.Int, value: com.google.protobuf.ByteString) {
      _builder.setRawInputContents(index, value)
    }/**
     * ```
     * The data contained in an input tensor can be represented in "raw"
     * bytes form or in the repeated type that matches the tensor's data
     * type. To use the raw representation 'raw_input_contents' must be
     * initialized with data for each tensor in the same order as
     * 'inputs'. For each tensor, the size of this content must match
     * what is expected by the tensor's shape and data type. The raw
     * data must be the flattened, one-dimensional, row-major order of
     * the tensor elements without any stride or padding between the
     * elements. Note that the FP16 data type must be represented as raw
     * content as there is no specific data type for a 16-bit float
     * type.
     *
     * If this field is specified then InferInputTensor::contents must
     * not be specified for any input tensor.
     * ```
     *
     * `repeated bytes raw_input_contents = 7;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearRawInputContents")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, RawInputContentsProxy>.clear() {
      _builder.clearRawInputContents()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun io.seldon.mlops.schema.InferenceSchema.ModelInferRequest.copy(block: `io.seldon.mlops.schema`.ModelInferRequestKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.schema.InferenceSchema.ModelInferRequest =
  `io.seldon.mlops.schema`.ModelInferRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

