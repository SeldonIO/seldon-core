// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: inference_schema.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package io.seldon.mlops.schema;

@kotlin.jvm.JvmName("-initializeinferInputTensor")
public inline fun inferInputTensor(block: io.seldon.mlops.schema.InferInputTensorKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.schema.InferenceSchema.InferInputTensor =
  io.seldon.mlops.schema.InferInputTensorKt.Dsl._create(io.seldon.mlops.schema.InferenceSchema.InferInputTensor.newBuilder()).apply { block() }._build()
/**
 * ```
 * An input tensor for an inference request.
 * ```
 *
 * Protobuf type `seldon.mlops.inference.schema.InferInputTensor`
 */
public object InferInputTensorKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.seldon.mlops.schema.InferenceSchema.InferInputTensor.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.seldon.mlops.schema.InferenceSchema.InferInputTensor.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.seldon.mlops.schema.InferenceSchema.InferInputTensor = _builder.build()

    /**
     * ```
     * The tensor name.
     * ```
     *
     * `string name = 1;`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * ```
     * The tensor name.
     * ```
     *
     * `string name = 1;`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * ```
     * The tensor data type.
     * ```
     *
     * `string datatype = 2;`
     */
    public var datatype: kotlin.String
      @JvmName("getDatatype")
      get() = _builder.getDatatype()
      @JvmName("setDatatype")
      set(value) {
        _builder.setDatatype(value)
      }
    /**
     * ```
     * The tensor data type.
     * ```
     *
     * `string datatype = 2;`
     */
    public fun clearDatatype() {
      _builder.clearDatatype()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ShapeProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * The tensor shape.
     * ```
     *
     * `repeated int64 shape = 3;`
     */
     public val shape: com.google.protobuf.kotlin.DslList<kotlin.Long, ShapeProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getShapeList()
      )
    /**
     * ```
     * The tensor shape.
     * ```
     *
     * `repeated int64 shape = 3;`
     * @param value The shape to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addShape")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Long, ShapeProxy>.add(value: kotlin.Long) {
      _builder.addShape(value)
    }/**
     * ```
     * The tensor shape.
     * ```
     *
     * `repeated int64 shape = 3;`
     * @param value The shape to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignShape")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, ShapeProxy>.plusAssign(value: kotlin.Long) {
      add(value)
    }/**
     * ```
     * The tensor shape.
     * ```
     *
     * `repeated int64 shape = 3;`
     * @param values The shape to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllShape")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Long, ShapeProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Long>) {
      _builder.addAllShape(values)
    }/**
     * ```
     * The tensor shape.
     * ```
     *
     * `repeated int64 shape = 3;`
     * @param values The shape to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllShape")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, ShapeProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Long>) {
      addAll(values)
    }/**
     * ```
     * The tensor shape.
     * ```
     *
     * `repeated int64 shape = 3;`
     * @param index The index to set the value at.
     * @param value The shape to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setShape")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, ShapeProxy>.set(index: kotlin.Int, value: kotlin.Long) {
      _builder.setShape(index, value)
    }/**
     * ```
     * The tensor shape.
     * ```
     *
     * `repeated int64 shape = 3;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearShape")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Long, ShapeProxy>.clear() {
      _builder.clearShape()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ParametersProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * Optional inference input tensor parameters.
     * ```
     *
     * `map<string, .seldon.mlops.inference.schema.InferParameter> parameters = 4;`
     */
     public val parameters: com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.schema.InferenceSchema.InferParameter, ParametersProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getParametersMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getParametersMap()
      )
    /**
     * ```
     * Optional inference input tensor parameters.
     * ```
     *
     * `map<string, .seldon.mlops.inference.schema.InferParameter> parameters = 4;`
     */
    @JvmName("putParameters")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.schema.InferenceSchema.InferParameter, ParametersProxy>
      .put(key: kotlin.String, value: io.seldon.mlops.schema.InferenceSchema.InferParameter) {
         _builder.putParameters(key, value)
       }
    /**
     * ```
     * Optional inference input tensor parameters.
     * ```
     *
     * `map<string, .seldon.mlops.inference.schema.InferParameter> parameters = 4;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setParameters")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.schema.InferenceSchema.InferParameter, ParametersProxy>
      .set(key: kotlin.String, value: io.seldon.mlops.schema.InferenceSchema.InferParameter) {
         put(key, value)
       }
    /**
     * ```
     * Optional inference input tensor parameters.
     * ```
     *
     * `map<string, .seldon.mlops.inference.schema.InferParameter> parameters = 4;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeParameters")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.schema.InferenceSchema.InferParameter, ParametersProxy>
      .remove(key: kotlin.String) {
         _builder.removeParameters(key)
       }
    /**
     * ```
     * Optional inference input tensor parameters.
     * ```
     *
     * `map<string, .seldon.mlops.inference.schema.InferParameter> parameters = 4;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllParameters")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.schema.InferenceSchema.InferParameter, ParametersProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, io.seldon.mlops.schema.InferenceSchema.InferParameter>) {
         _builder.putAllParameters(map)
       }
    /**
     * ```
     * Optional inference input tensor parameters.
     * ```
     *
     * `map<string, .seldon.mlops.inference.schema.InferParameter> parameters = 4;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearParameters")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.seldon.mlops.schema.InferenceSchema.InferParameter, ParametersProxy>
      .clear() {
         _builder.clearParameters()
       }

    /**
     * ```
     * The tensor contents using a data-type format. This field must
     * not be specified if "raw" tensor contents are being used for
     * the inference request.
     * ```
     *
     * `.seldon.mlops.inference.schema.InferTensorContents contents = 5;`
     */
    public var contents: io.seldon.mlops.schema.InferenceSchema.InferTensorContents
      @JvmName("getContents")
      get() = _builder.getContents()
      @JvmName("setContents")
      set(value) {
        _builder.setContents(value)
      }
    /**
     * ```
     * The tensor contents using a data-type format. This field must
     * not be specified if "raw" tensor contents are being used for
     * the inference request.
     * ```
     *
     * `.seldon.mlops.inference.schema.InferTensorContents contents = 5;`
     */
    public fun clearContents() {
      _builder.clearContents()
    }
    /**
     * ```
     * The tensor contents using a data-type format. This field must
     * not be specified if "raw" tensor contents are being used for
     * the inference request.
     * ```
     *
     * `.seldon.mlops.inference.schema.InferTensorContents contents = 5;`
     * @return Whether the contents field is set.
     */
    public fun hasContents(): kotlin.Boolean {
      return _builder.hasContents()
    }
    public val InferInputTensorKt.Dsl.contentsOrNull: io.seldon.mlops.schema.InferenceSchema.InferTensorContents?
      get() = _builder.contentsOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun io.seldon.mlops.schema.InferenceSchema.InferInputTensor.copy(block: `io.seldon.mlops.schema`.InferInputTensorKt.Dsl.() -> kotlin.Unit): io.seldon.mlops.schema.InferenceSchema.InferInputTensor =
  `io.seldon.mlops.schema`.InferInputTensorKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val io.seldon.mlops.schema.InferenceSchema.InferInputTensorOrBuilder.contentsOrNull: io.seldon.mlops.schema.InferenceSchema.InferTensorContents?
  get() = if (hasContents()) getContents() else null

