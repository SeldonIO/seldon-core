#!/usr/bin/env bash
#
# add-pr-build-comment
#
set -o nounset
set -o errexit
set -o pipefail
set -o noglob
set -o xtrace

VERSION=$(cat ../version.txt)

# Check if version has trailing -dev otherwise exit
if [ ${VERSION##*-dev} ]; then
    echo "Version does not end with -dev"
    exit 1
fi

# Remove trailing dev as that will be our release version
VERSION=${VERSION%"-dev"}
BRANCH_NAME="release-$VERSION"

# Check out master branch to use as base
git fetch origin master
git checkout master

# Don't exit on failure so we can test branch exists
set +o errexit
    git checkout -b $BRANCH_NAME
    RETVAL=$?
    if [[ ${RETVAL} -gt 0 ]]; then
        echo "Branch already exists"
        git checkout $BRANCH_NAME
        git rebase master
    fi
set -o errexit

# Perform required actions for release
echo "$VERSION" > ../version.txt
(cd ../engine && mvn versions:set -DnewVersion=$(cat ../version.txt))
(cd ../ && python release.py $(cat version.txt))

# Push updated changes for release
git add ..
git commit -m "Updating $BRANCH_NAME"
git push origin $BRANCH_NAME


