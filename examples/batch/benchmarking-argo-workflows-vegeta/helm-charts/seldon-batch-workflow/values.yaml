workflow:
  # Name of the overarching argo workflow
  name: seldon-benchmark-process
  # If true the randomly generated string will be apended as the name of the workflow
  useNameAsGenerateName: false
  # Namespace where to create the workflow and all resources in benchmark job
  namespace: default
seldonDeployment:
  # Name to use for the seldon deployment which by default appends generated workflow ID
  name: seldon-{{workflow.uid}}
  # Image to use for the benchmark client
  image: seldonio/seldon-core-s2i-python37:1.3.0-dev
  # Prepackaged model server to use [see https://docs.seldon.io/projects/seldon-core/en/latest/servers/overview.html]
  server: SKLEARN_SERVER
  # The URL for the model that is to be used
  modelUri: gs://seldon-models/sklearn/iris
  # The number of seldon deployment replicas to launch
  replicas: 2
  # Waiting time before checks for deployment to ensure kubernetes cluster registers create
  waitTime: 5
  # The number of threads spawned by Python Gunicorn Flask server
  serverThreads: 10
  # The number of workers spawned by Python Gunicorn Flask server
  serverWorkers: 1
  # Whether to enable resources
  enableResources: false
  requests:
    # Requests for CPU (only added if enableResources is enabled)
    cpu: 50m
    # Requests for memory (only added if enableResources is enabled)
    memory: 100Mi
  limits:
    # Limits for CPU (only added if enableResources is enabled)
    cpu: 50m
    # Limits for memory (only added if enableResources is enabled)
    memory: 1000Mi
# The benchmark worker is the component that will send the requests from the files
benchmark:
  # Endpoint of for the benchmark client to contact the seldon deployment
  host: istio-ingressgateway.istio-system.svc.cluster.local
  # Number of parallel benchmark client workers to process the data
  cpus: 4
  # Maximum number of workers to allocate for a benchmark
  maxWorkers: 100
  # Duration of benchmark
  duration: 30s
  # Rate (number of requests per second [0 = infinity])
  rate: 0
  # Number of times client will try to send a request if it fails
  retries: 3
  # Image to use for benchmark
  image: peterevans/vegeta:6.8.1
  # Data that the benchmark worker will use to send
  data: '{"data": {"ndarray": [[0,1,2,3]], "names": []}}'
