/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.exportSymbol('proto.seldon.protos.DefaultData', null, global);
goog.exportSymbol('proto.seldon.protos.Feedback', null, global);
goog.exportSymbol('proto.seldon.protos.Meta', null, global);
goog.exportSymbol('proto.seldon.protos.RequestResponse', null, global);
goog.exportSymbol('proto.seldon.protos.SeldonMessage', null, global);
goog.exportSymbol('proto.seldon.protos.SeldonMessageList', null, global);
goog.exportSymbol('proto.seldon.protos.Status', null, global);
goog.exportSymbol('proto.seldon.protos.Status.StatusFlag', null, global);
goog.exportSymbol('proto.seldon.protos.Tensor', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seldon.protos.SeldonMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.seldon.protos.SeldonMessage.oneofGroups_);
};
goog.inherits(proto.seldon.protos.SeldonMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.seldon.protos.SeldonMessage.displayName = 'proto.seldon.protos.SeldonMessage';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.seldon.protos.SeldonMessage.oneofGroups_ = [[3,4,5]];

/**
 * @enum {number}
 */
proto.seldon.protos.SeldonMessage.DataOneofCase = {
  DATA_ONEOF_NOT_SET: 0,
  DATA: 3,
  BINDATA: 4,
  STRDATA: 5
};

/**
 * @return {proto.seldon.protos.SeldonMessage.DataOneofCase}
 */
proto.seldon.protos.SeldonMessage.prototype.getDataOneofCase = function() {
  return /** @type {proto.seldon.protos.SeldonMessage.DataOneofCase} */(jspb.Message.computeOneofCase(this, proto.seldon.protos.SeldonMessage.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seldon.protos.SeldonMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.seldon.protos.SeldonMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seldon.protos.SeldonMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seldon.protos.SeldonMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && proto.seldon.protos.Status.toObject(includeInstance, f),
    meta: (f = msg.getMeta()) && proto.seldon.protos.Meta.toObject(includeInstance, f),
    data: (f = msg.getData()) && proto.seldon.protos.DefaultData.toObject(includeInstance, f),
    bindata: msg.getBindata_asB64(),
    strdata: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seldon.protos.SeldonMessage}
 */
proto.seldon.protos.SeldonMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seldon.protos.SeldonMessage;
  return proto.seldon.protos.SeldonMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seldon.protos.SeldonMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seldon.protos.SeldonMessage}
 */
proto.seldon.protos.SeldonMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.seldon.protos.Status;
      reader.readMessage(value,proto.seldon.protos.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.seldon.protos.Meta;
      reader.readMessage(value,proto.seldon.protos.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 3:
      var value = new proto.seldon.protos.DefaultData;
      reader.readMessage(value,proto.seldon.protos.DefaultData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBindata(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStrdata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seldon.protos.SeldonMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seldon.protos.SeldonMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seldon.protos.SeldonMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seldon.protos.SeldonMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.seldon.protos.Status.serializeBinaryToWriter
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.seldon.protos.Meta.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.seldon.protos.DefaultData.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional Status status = 1;
 * @return {?proto.seldon.protos.Status}
 */
proto.seldon.protos.SeldonMessage.prototype.getStatus = function() {
  return /** @type{?proto.seldon.protos.Status} */ (
    jspb.Message.getWrapperField(this, proto.seldon.protos.Status, 1));
};


/** @param {?proto.seldon.protos.Status|undefined} value */
proto.seldon.protos.SeldonMessage.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.seldon.protos.SeldonMessage.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.seldon.protos.SeldonMessage.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Meta meta = 2;
 * @return {?proto.seldon.protos.Meta}
 */
proto.seldon.protos.SeldonMessage.prototype.getMeta = function() {
  return /** @type{?proto.seldon.protos.Meta} */ (
    jspb.Message.getWrapperField(this, proto.seldon.protos.Meta, 2));
};


/** @param {?proto.seldon.protos.Meta|undefined} value */
proto.seldon.protos.SeldonMessage.prototype.setMeta = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.seldon.protos.SeldonMessage.prototype.clearMeta = function() {
  this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.seldon.protos.SeldonMessage.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DefaultData data = 3;
 * @return {?proto.seldon.protos.DefaultData}
 */
proto.seldon.protos.SeldonMessage.prototype.getData = function() {
  return /** @type{?proto.seldon.protos.DefaultData} */ (
    jspb.Message.getWrapperField(this, proto.seldon.protos.DefaultData, 3));
};


/** @param {?proto.seldon.protos.DefaultData|undefined} value */
proto.seldon.protos.SeldonMessage.prototype.setData = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.seldon.protos.SeldonMessage.oneofGroups_[0], value);
};


proto.seldon.protos.SeldonMessage.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.seldon.protos.SeldonMessage.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes binData = 4;
 * @return {!(string|Uint8Array)}
 */
proto.seldon.protos.SeldonMessage.prototype.getBindata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes binData = 4;
 * This is a type-conversion wrapper around `getBindata()`
 * @return {string}
 */
proto.seldon.protos.SeldonMessage.prototype.getBindata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBindata()));
};


/**
 * optional bytes binData = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBindata()`
 * @return {!Uint8Array}
 */
proto.seldon.protos.SeldonMessage.prototype.getBindata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBindata()));
};


/** @param {!(string|Uint8Array)} value */
proto.seldon.protos.SeldonMessage.prototype.setBindata = function(value) {
  jspb.Message.setOneofField(this, 4, proto.seldon.protos.SeldonMessage.oneofGroups_[0], value);
};


proto.seldon.protos.SeldonMessage.prototype.clearBindata = function() {
  jspb.Message.setOneofField(this, 4, proto.seldon.protos.SeldonMessage.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.seldon.protos.SeldonMessage.prototype.hasBindata = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string strData = 5;
 * @return {string}
 */
proto.seldon.protos.SeldonMessage.prototype.getStrdata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.seldon.protos.SeldonMessage.prototype.setStrdata = function(value) {
  jspb.Message.setOneofField(this, 5, proto.seldon.protos.SeldonMessage.oneofGroups_[0], value);
};


proto.seldon.protos.SeldonMessage.prototype.clearStrdata = function() {
  jspb.Message.setOneofField(this, 5, proto.seldon.protos.SeldonMessage.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.seldon.protos.SeldonMessage.prototype.hasStrdata = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seldon.protos.DefaultData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.seldon.protos.DefaultData.repeatedFields_, proto.seldon.protos.DefaultData.oneofGroups_);
};
goog.inherits(proto.seldon.protos.DefaultData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.seldon.protos.DefaultData.displayName = 'proto.seldon.protos.DefaultData';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.seldon.protos.DefaultData.repeatedFields_ = [1];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.seldon.protos.DefaultData.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.seldon.protos.DefaultData.DataOneofCase = {
  DATA_ONEOF_NOT_SET: 0,
  TENSOR: 2,
  NDARRAY: 3
};

/**
 * @return {proto.seldon.protos.DefaultData.DataOneofCase}
 */
proto.seldon.protos.DefaultData.prototype.getDataOneofCase = function() {
  return /** @type {proto.seldon.protos.DefaultData.DataOneofCase} */(jspb.Message.computeOneofCase(this, proto.seldon.protos.DefaultData.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seldon.protos.DefaultData.prototype.toObject = function(opt_includeInstance) {
  return proto.seldon.protos.DefaultData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seldon.protos.DefaultData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seldon.protos.DefaultData.toObject = function(includeInstance, msg) {
  var f, obj = {
    namesList: jspb.Message.getRepeatedField(msg, 1),
    tensor: (f = msg.getTensor()) && proto.seldon.protos.Tensor.toObject(includeInstance, f),
    ndarray: (f = msg.getNdarray()) && google_protobuf_struct_pb.ListValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seldon.protos.DefaultData}
 */
proto.seldon.protos.DefaultData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seldon.protos.DefaultData;
  return proto.seldon.protos.DefaultData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seldon.protos.DefaultData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seldon.protos.DefaultData}
 */
proto.seldon.protos.DefaultData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addNames(value);
      break;
    case 2:
      var value = new proto.seldon.protos.Tensor;
      reader.readMessage(value,proto.seldon.protos.Tensor.deserializeBinaryFromReader);
      msg.setTensor(value);
      break;
    case 3:
      var value = new google_protobuf_struct_pb.ListValue;
      reader.readMessage(value,google_protobuf_struct_pb.ListValue.deserializeBinaryFromReader);
      msg.setNdarray(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seldon.protos.DefaultData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seldon.protos.DefaultData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seldon.protos.DefaultData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seldon.protos.DefaultData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getTensor();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.seldon.protos.Tensor.serializeBinaryToWriter
    );
  }
  f = message.getNdarray();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.ListValue.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string names = 1;
 * @return {!Array.<string>}
 */
proto.seldon.protos.DefaultData.prototype.getNamesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.seldon.protos.DefaultData.prototype.setNamesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.seldon.protos.DefaultData.prototype.addNames = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.seldon.protos.DefaultData.prototype.clearNamesList = function() {
  this.setNamesList([]);
};


/**
 * optional Tensor tensor = 2;
 * @return {?proto.seldon.protos.Tensor}
 */
proto.seldon.protos.DefaultData.prototype.getTensor = function() {
  return /** @type{?proto.seldon.protos.Tensor} */ (
    jspb.Message.getWrapperField(this, proto.seldon.protos.Tensor, 2));
};


/** @param {?proto.seldon.protos.Tensor|undefined} value */
proto.seldon.protos.DefaultData.prototype.setTensor = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.seldon.protos.DefaultData.oneofGroups_[0], value);
};


proto.seldon.protos.DefaultData.prototype.clearTensor = function() {
  this.setTensor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.seldon.protos.DefaultData.prototype.hasTensor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.ListValue ndarray = 3;
 * @return {?proto.google.protobuf.ListValue}
 */
proto.seldon.protos.DefaultData.prototype.getNdarray = function() {
  return /** @type{?proto.google.protobuf.ListValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.ListValue, 3));
};


/** @param {?proto.google.protobuf.ListValue|undefined} value */
proto.seldon.protos.DefaultData.prototype.setNdarray = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.seldon.protos.DefaultData.oneofGroups_[0], value);
};


proto.seldon.protos.DefaultData.prototype.clearNdarray = function() {
  this.setNdarray(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.seldon.protos.DefaultData.prototype.hasNdarray = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seldon.protos.Tensor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.seldon.protos.Tensor.repeatedFields_, null);
};
goog.inherits(proto.seldon.protos.Tensor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.seldon.protos.Tensor.displayName = 'proto.seldon.protos.Tensor';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.seldon.protos.Tensor.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seldon.protos.Tensor.prototype.toObject = function(opt_includeInstance) {
  return proto.seldon.protos.Tensor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seldon.protos.Tensor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seldon.protos.Tensor.toObject = function(includeInstance, msg) {
  var f, obj = {
    shapeList: jspb.Message.getRepeatedField(msg, 1),
    valuesList: jspb.Message.getRepeatedFloatingPointField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seldon.protos.Tensor}
 */
proto.seldon.protos.Tensor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seldon.protos.Tensor;
  return proto.seldon.protos.Tensor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seldon.protos.Tensor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seldon.protos.Tensor}
 */
proto.seldon.protos.Tensor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
      msg.setShapeList(value);
      break;
    case 2:
      var value = /** @type {!Array.<number>} */ (reader.readPackedDouble());
      msg.setValuesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seldon.protos.Tensor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seldon.protos.Tensor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seldon.protos.Tensor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seldon.protos.Tensor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShapeList();
  if (f.length > 0) {
    writer.writePackedInt32(
      1,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writePackedDouble(
      2,
      f
    );
  }
};


/**
 * repeated int32 shape = 1;
 * @return {!Array.<number>}
 */
proto.seldon.protos.Tensor.prototype.getShapeList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<number>} value */
proto.seldon.protos.Tensor.prototype.setShapeList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.seldon.protos.Tensor.prototype.addShape = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.seldon.protos.Tensor.prototype.clearShapeList = function() {
  this.setShapeList([]);
};


/**
 * repeated double values = 2;
 * @return {!Array.<number>}
 */
proto.seldon.protos.Tensor.prototype.getValuesList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/** @param {!Array.<number>} value */
proto.seldon.protos.Tensor.prototype.setValuesList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.seldon.protos.Tensor.prototype.addValues = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.seldon.protos.Tensor.prototype.clearValuesList = function() {
  this.setValuesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seldon.protos.Meta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.seldon.protos.Meta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.seldon.protos.Meta.displayName = 'proto.seldon.protos.Meta';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seldon.protos.Meta.prototype.toObject = function(opt_includeInstance) {
  return proto.seldon.protos.Meta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seldon.protos.Meta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seldon.protos.Meta.toObject = function(includeInstance, msg) {
  var f, obj = {
    puid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tagsMap: (f = msg.getTagsMap()) ? f.toObject(includeInstance, proto.google.protobuf.Value.toObject) : [],
    routingMap: (f = msg.getRoutingMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seldon.protos.Meta}
 */
proto.seldon.protos.Meta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seldon.protos.Meta;
  return proto.seldon.protos.Meta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seldon.protos.Meta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seldon.protos.Meta}
 */
proto.seldon.protos.Meta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPuid(value);
      break;
    case 2:
      var value = msg.getTagsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Value.deserializeBinaryFromReader);
         });
      break;
    case 3:
      var value = msg.getRoutingMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt32);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seldon.protos.Meta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seldon.protos.Meta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seldon.protos.Meta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seldon.protos.Meta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTagsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Value.serializeBinaryToWriter);
  }
  f = message.getRoutingMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt32);
  }
};


/**
 * optional string puid = 1;
 * @return {string}
 */
proto.seldon.protos.Meta.prototype.getPuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.seldon.protos.Meta.prototype.setPuid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * map<string, google.protobuf.Value> tags = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Value>}
 */
proto.seldon.protos.Meta.prototype.getTagsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Value>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.google.protobuf.Value));
};


proto.seldon.protos.Meta.prototype.clearTagsMap = function() {
  this.getTagsMap().clear();
};


/**
 * map<string, int32> routing = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.seldon.protos.Meta.prototype.getRoutingMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


proto.seldon.protos.Meta.prototype.clearRoutingMap = function() {
  this.getRoutingMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seldon.protos.SeldonMessageList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.seldon.protos.SeldonMessageList.repeatedFields_, null);
};
goog.inherits(proto.seldon.protos.SeldonMessageList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.seldon.protos.SeldonMessageList.displayName = 'proto.seldon.protos.SeldonMessageList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.seldon.protos.SeldonMessageList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seldon.protos.SeldonMessageList.prototype.toObject = function(opt_includeInstance) {
  return proto.seldon.protos.SeldonMessageList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seldon.protos.SeldonMessageList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seldon.protos.SeldonMessageList.toObject = function(includeInstance, msg) {
  var f, obj = {
    seldonmessagesList: jspb.Message.toObjectList(msg.getSeldonmessagesList(),
    proto.seldon.protos.SeldonMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seldon.protos.SeldonMessageList}
 */
proto.seldon.protos.SeldonMessageList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seldon.protos.SeldonMessageList;
  return proto.seldon.protos.SeldonMessageList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seldon.protos.SeldonMessageList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seldon.protos.SeldonMessageList}
 */
proto.seldon.protos.SeldonMessageList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.seldon.protos.SeldonMessage;
      reader.readMessage(value,proto.seldon.protos.SeldonMessage.deserializeBinaryFromReader);
      msg.addSeldonmessages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seldon.protos.SeldonMessageList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seldon.protos.SeldonMessageList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seldon.protos.SeldonMessageList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seldon.protos.SeldonMessageList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeldonmessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.seldon.protos.SeldonMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SeldonMessage seldonMessages = 1;
 * @return {!Array.<!proto.seldon.protos.SeldonMessage>}
 */
proto.seldon.protos.SeldonMessageList.prototype.getSeldonmessagesList = function() {
  return /** @type{!Array.<!proto.seldon.protos.SeldonMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.seldon.protos.SeldonMessage, 1));
};


/** @param {!Array.<!proto.seldon.protos.SeldonMessage>} value */
proto.seldon.protos.SeldonMessageList.prototype.setSeldonmessagesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.seldon.protos.SeldonMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.seldon.protos.SeldonMessage}
 */
proto.seldon.protos.SeldonMessageList.prototype.addSeldonmessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.seldon.protos.SeldonMessage, opt_index);
};


proto.seldon.protos.SeldonMessageList.prototype.clearSeldonmessagesList = function() {
  this.setSeldonmessagesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seldon.protos.Status = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.seldon.protos.Status, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.seldon.protos.Status.displayName = 'proto.seldon.protos.Status';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seldon.protos.Status.prototype.toObject = function(opt_includeInstance) {
  return proto.seldon.protos.Status.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seldon.protos.Status} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seldon.protos.Status.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    info: jspb.Message.getFieldWithDefault(msg, 2, ""),
    reason: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seldon.protos.Status}
 */
proto.seldon.protos.Status.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seldon.protos.Status;
  return proto.seldon.protos.Status.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seldon.protos.Status} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seldon.protos.Status}
 */
proto.seldon.protos.Status.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 4:
      var value = /** @type {!proto.seldon.protos.Status.StatusFlag} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seldon.protos.Status.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seldon.protos.Status.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seldon.protos.Status} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seldon.protos.Status.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.seldon.protos.Status.StatusFlag = {
  SUCCESS: 0,
  FAILURE: 1
};

/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.seldon.protos.Status.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.seldon.protos.Status.prototype.setCode = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string info = 2;
 * @return {string}
 */
proto.seldon.protos.Status.prototype.getInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.seldon.protos.Status.prototype.setInfo = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string reason = 3;
 * @return {string}
 */
proto.seldon.protos.Status.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.seldon.protos.Status.prototype.setReason = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional StatusFlag status = 4;
 * @return {!proto.seldon.protos.Status.StatusFlag}
 */
proto.seldon.protos.Status.prototype.getStatus = function() {
  return /** @type {!proto.seldon.protos.Status.StatusFlag} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.seldon.protos.Status.StatusFlag} value */
proto.seldon.protos.Status.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seldon.protos.Feedback = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.seldon.protos.Feedback, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.seldon.protos.Feedback.displayName = 'proto.seldon.protos.Feedback';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seldon.protos.Feedback.prototype.toObject = function(opt_includeInstance) {
  return proto.seldon.protos.Feedback.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seldon.protos.Feedback} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seldon.protos.Feedback.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.seldon.protos.SeldonMessage.toObject(includeInstance, f),
    response: (f = msg.getResponse()) && proto.seldon.protos.SeldonMessage.toObject(includeInstance, f),
    reward: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    truth: (f = msg.getTruth()) && proto.seldon.protos.SeldonMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seldon.protos.Feedback}
 */
proto.seldon.protos.Feedback.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seldon.protos.Feedback;
  return proto.seldon.protos.Feedback.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seldon.protos.Feedback} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seldon.protos.Feedback}
 */
proto.seldon.protos.Feedback.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.seldon.protos.SeldonMessage;
      reader.readMessage(value,proto.seldon.protos.SeldonMessage.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 2:
      var value = new proto.seldon.protos.SeldonMessage;
      reader.readMessage(value,proto.seldon.protos.SeldonMessage.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setReward(value);
      break;
    case 4:
      var value = new proto.seldon.protos.SeldonMessage;
      reader.readMessage(value,proto.seldon.protos.SeldonMessage.deserializeBinaryFromReader);
      msg.setTruth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seldon.protos.Feedback.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seldon.protos.Feedback.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seldon.protos.Feedback} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seldon.protos.Feedback.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.seldon.protos.SeldonMessage.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.seldon.protos.SeldonMessage.serializeBinaryToWriter
    );
  }
  f = message.getReward();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getTruth();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.seldon.protos.SeldonMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional SeldonMessage request = 1;
 * @return {?proto.seldon.protos.SeldonMessage}
 */
proto.seldon.protos.Feedback.prototype.getRequest = function() {
  return /** @type{?proto.seldon.protos.SeldonMessage} */ (
    jspb.Message.getWrapperField(this, proto.seldon.protos.SeldonMessage, 1));
};


/** @param {?proto.seldon.protos.SeldonMessage|undefined} value */
proto.seldon.protos.Feedback.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.seldon.protos.Feedback.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.seldon.protos.Feedback.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SeldonMessage response = 2;
 * @return {?proto.seldon.protos.SeldonMessage}
 */
proto.seldon.protos.Feedback.prototype.getResponse = function() {
  return /** @type{?proto.seldon.protos.SeldonMessage} */ (
    jspb.Message.getWrapperField(this, proto.seldon.protos.SeldonMessage, 2));
};


/** @param {?proto.seldon.protos.SeldonMessage|undefined} value */
proto.seldon.protos.Feedback.prototype.setResponse = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.seldon.protos.Feedback.prototype.clearResponse = function() {
  this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.seldon.protos.Feedback.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float reward = 3;
 * @return {number}
 */
proto.seldon.protos.Feedback.prototype.getReward = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.seldon.protos.Feedback.prototype.setReward = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional SeldonMessage truth = 4;
 * @return {?proto.seldon.protos.SeldonMessage}
 */
proto.seldon.protos.Feedback.prototype.getTruth = function() {
  return /** @type{?proto.seldon.protos.SeldonMessage} */ (
    jspb.Message.getWrapperField(this, proto.seldon.protos.SeldonMessage, 4));
};


/** @param {?proto.seldon.protos.SeldonMessage|undefined} value */
proto.seldon.protos.Feedback.prototype.setTruth = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.seldon.protos.Feedback.prototype.clearTruth = function() {
  this.setTruth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.seldon.protos.Feedback.prototype.hasTruth = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.seldon.protos.RequestResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.seldon.protos.RequestResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.seldon.protos.RequestResponse.displayName = 'proto.seldon.protos.RequestResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.seldon.protos.RequestResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.seldon.protos.RequestResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.seldon.protos.RequestResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seldon.protos.RequestResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.seldon.protos.SeldonMessage.toObject(includeInstance, f),
    response: (f = msg.getResponse()) && proto.seldon.protos.SeldonMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.seldon.protos.RequestResponse}
 */
proto.seldon.protos.RequestResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.seldon.protos.RequestResponse;
  return proto.seldon.protos.RequestResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.seldon.protos.RequestResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.seldon.protos.RequestResponse}
 */
proto.seldon.protos.RequestResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.seldon.protos.SeldonMessage;
      reader.readMessage(value,proto.seldon.protos.SeldonMessage.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 2:
      var value = new proto.seldon.protos.SeldonMessage;
      reader.readMessage(value,proto.seldon.protos.SeldonMessage.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.seldon.protos.RequestResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.seldon.protos.RequestResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.seldon.protos.RequestResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.seldon.protos.RequestResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.seldon.protos.SeldonMessage.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.seldon.protos.SeldonMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional SeldonMessage request = 1;
 * @return {?proto.seldon.protos.SeldonMessage}
 */
proto.seldon.protos.RequestResponse.prototype.getRequest = function() {
  return /** @type{?proto.seldon.protos.SeldonMessage} */ (
    jspb.Message.getWrapperField(this, proto.seldon.protos.SeldonMessage, 1));
};


/** @param {?proto.seldon.protos.SeldonMessage|undefined} value */
proto.seldon.protos.RequestResponse.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.seldon.protos.RequestResponse.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.seldon.protos.RequestResponse.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SeldonMessage response = 2;
 * @return {?proto.seldon.protos.SeldonMessage}
 */
proto.seldon.protos.RequestResponse.prototype.getResponse = function() {
  return /** @type{?proto.seldon.protos.SeldonMessage} */ (
    jspb.Message.getWrapperField(this, proto.seldon.protos.SeldonMessage, 2));
};


/** @param {?proto.seldon.protos.SeldonMessage|undefined} value */
proto.seldon.protos.RequestResponse.prototype.setResponse = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.seldon.protos.RequestResponse.prototype.clearResponse = function() {
  this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.seldon.protos.RequestResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.seldon.protos);
