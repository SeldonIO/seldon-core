// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/tensorflow/core/framework/types.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tensorflow/tensorflow/core/framework/types.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {

namespace {

const ::google::protobuf::EnumDescriptor* DataType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* SpecializedType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_tensorflow_2ftensorflow_2fcore_2fframework_2ftypes_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_tensorflow_2ftensorflow_2fcore_2fframework_2ftypes_2eproto() {
  protobuf_AddDesc_tensorflow_2ftensorflow_2fcore_2fframework_2ftypes_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "tensorflow/tensorflow/core/framework/types.proto");
  GOOGLE_CHECK(file != NULL);
  DataType_descriptor_ = file->enum_type(0);
  SpecializedType_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_tensorflow_2ftensorflow_2fcore_2fframework_2ftypes_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_tensorflow_2ftensorflow_2fcore_2fframework_2ftypes_2eproto() {
}

void protobuf_AddDesc_tensorflow_2ftensorflow_2fcore_2fframework_2ftypes_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_tensorflow_2ftensorflow_2fcore_2fframework_2ftypes_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n0tensorflow/tensorflow/core/framework/t"
    "ypes.proto\022\ntensorflow*\252\006\n\010DataType\022\016\n\nD"
    "T_INVALID\020\000\022\014\n\010DT_FLOAT\020\001\022\r\n\tDT_DOUBLE\020\002"
    "\022\014\n\010DT_INT32\020\003\022\014\n\010DT_UINT8\020\004\022\014\n\010DT_INT16"
    "\020\005\022\013\n\007DT_INT8\020\006\022\r\n\tDT_STRING\020\007\022\020\n\014DT_COM"
    "PLEX64\020\010\022\014\n\010DT_INT64\020\t\022\013\n\007DT_BOOL\020\n\022\014\n\010D"
    "T_QINT8\020\013\022\r\n\tDT_QUINT8\020\014\022\r\n\tDT_QINT32\020\r\022"
    "\017\n\013DT_BFLOAT16\020\016\022\r\n\tDT_QINT16\020\017\022\016\n\nDT_QU"
    "INT16\020\020\022\r\n\tDT_UINT16\020\021\022\021\n\rDT_COMPLEX128\020"
    "\022\022\013\n\007DT_HALF\020\023\022\017\n\013DT_RESOURCE\020\024\022\016\n\nDT_VA"
    "RIANT\020\025\022\r\n\tDT_UINT32\020\026\022\r\n\tDT_UINT64\020\027\022\020\n"
    "\014DT_FLOAT_REF\020e\022\021\n\rDT_DOUBLE_REF\020f\022\020\n\014DT"
    "_INT32_REF\020g\022\020\n\014DT_UINT8_REF\020h\022\020\n\014DT_INT"
    "16_REF\020i\022\017\n\013DT_INT8_REF\020j\022\021\n\rDT_STRING_R"
    "EF\020k\022\024\n\020DT_COMPLEX64_REF\020l\022\020\n\014DT_INT64_R"
    "EF\020m\022\017\n\013DT_BOOL_REF\020n\022\020\n\014DT_QINT8_REF\020o\022"
    "\021\n\rDT_QUINT8_REF\020p\022\021\n\rDT_QINT32_REF\020q\022\023\n"
    "\017DT_BFLOAT16_REF\020r\022\021\n\rDT_QINT16_REF\020s\022\022\n"
    "\016DT_QUINT16_REF\020t\022\021\n\rDT_UINT16_REF\020u\022\025\n\021"
    "DT_COMPLEX128_REF\020v\022\017\n\013DT_HALF_REF\020w\022\023\n\017"
    "DT_RESOURCE_REF\020x\022\022\n\016DT_VARIANT_REF\020y\022\021\n"
    "\rDT_UINT32_REF\020z\022\021\n\rDT_UINT64_REF\020{*5\n\017S"
    "pecializedType\022\016\n\nST_INVALID\020\000\022\022\n\016ST_TEN"
    "SOR_LIST\020\001Bz\n\030org.tensorflow.frameworkB\013"
    "TypesProtosP\001ZLgithub.com/tensorflow/ten"
    "sorflow/tensorflow/go/core/framework/typ"
    "es_go_proto\370\001\001b\006proto3", 1062);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/tensorflow/core/framework/types.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_tensorflow_2ftensorflow_2fcore_2fframework_2ftypes_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_tensorflow_2ftensorflow_2fcore_2fframework_2ftypes_2eproto {
  StaticDescriptorInitializer_tensorflow_2ftensorflow_2fcore_2fframework_2ftypes_2eproto() {
    protobuf_AddDesc_tensorflow_2ftensorflow_2fcore_2fframework_2ftypes_2eproto();
  }
} static_descriptor_initializer_tensorflow_2ftensorflow_2fcore_2fframework_2ftypes_2eproto_;
const ::google::protobuf::EnumDescriptor* DataType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataType_descriptor_;
}
bool DataType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SpecializedType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SpecializedType_descriptor_;
}
bool SpecializedType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)
