# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https:#www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-ui
  namespace: gpu-monitoring-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-ui
  template:
    metadata:
      labels:
        app: prometheus-ui
    spec:
      automountServiceAccountToken: true
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
      containers:
      - name: prometheus-ui
        image: "gke.gcr.io/prometheus-engine/frontend:v0.4.3-gke.0"
        args:
        - "--web.listen-address=:9090"
        - "--query.project-id=$PROJECT_ID"
        ports:
        - name: web
          containerPort: 9090
        readinessProbe:
          httpGet:
            path: /-/ready
            port: web
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: web
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-ui
  namespace: gpu-monitoring-system
spec:
  clusterIP: None
  selector:
    app: prometheus-ui
  ports:
  - name: web
    port: 9090
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: gpu-monitoring-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:8.4.1
        ports:
        - name: web
          containerPort: 3000
        env:
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_NAME
          value: "Main Org."
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: "Admin"  
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: gpu-monitoring-system
spec:
  clusterIP: None
  selector:
    app: grafana
  ports:
  - name: web
    port: 3000
---
apiVersion: v1
kind: Pod
metadata:
  name: inverse-proxy
  namespace: gpu-monitoring-system
spec:
  containers:
  - name: inverse-proxy
    image: sukha/inverse-proxy-for-grafana 
    ports:
    - containerPort: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: inverse-proxy-config
  namespace: gpu-monitoring-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: inverse-proxy-role
  namespace: gpu-monitoring-system
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: inverse-proxy-role-binding
  namespace: gpu-monitoring-system
subjects:
- kind: ServiceAccount
  name: default
  namespace: gpu-monitoring-system
roleRef:
  kind: Role
  name: inverse-proxy-role
  apiGroup: rbac.authorization.k8s.io
