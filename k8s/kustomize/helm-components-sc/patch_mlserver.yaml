apiVersion: mlops.seldon.io/v1alpha1
kind: ServerConfig
metadata:
  name: mlserver
spec:
  podSpec:
    imagePullSecrets: []
    containers:
    - image: '{{ .Values.serverConfig.rclone.image.registry }}/{{ .Values.serverConfig.rclone.image.repository }}:{{ .Values.serverConfig.rclone.image.tag }}'
      imagePullPolicy: '{{ .Values.serverConfig.rclone.image.pullPolicy }}'
      name: rclone
      resources:
        requests:
          cpu: '{{ .Values.serverConfig.rclone.resources.cpu }}'
          memory: '{{ .Values.serverConfig.rclone.resources.memory }}'
        limits:
          memory: '{{ .Values.serverConfig.rclone.resources.memory }}'
    - env:
      - name: SELDON_SERVER_CAPABILITIES
        value: '{{ .Values.serverConfig.mlserver.serverCapabilities }}'
      - name: SELDON_MODEL_INFERENCE_LAG_THRESHOLD
        value: '{{ .Values.serverConfig.agent.modelInferenceLagThreshold }}'
      - name: SELDON_MODEL_INACTIVE_SECONDS_THRESHOLD
        value: '{{ .Values.serverConfig.agent.modelInactiveSecondsThreshold }}'
      - name: SELDON_SCALING_STATS_PERIOD_SECONDS
        value: '{{ .Values.serverConfig.agent.scalingStatsPeriodSeconds }}'
      - name: SELDON_OVERCOMMIT_PERCENTAGE
        value: '{{ .Values.serverConfig.agent.overcommitPercentage }}'
      - name: CONTROL_PLANE_SECURITY_PROTOCOL
        value: '{{ .Values.security.controlplane.protocol }}'
      - name: CONTROL_PLANE_CLIENT_TLS_SECRET_NAME
        value: '{{ .Values.security.controlplane.ssl.client.secret }}'
      - name: CONTROL_PLANE_SERVER_TLS_SECRET_NAME
        value: '{{ .Values.security.controlplane.ssl.client.serverValidationSecret }}'
      - name: CONTROL_PLANE_CLIENT_TLS_KEY_LOCATION
        value: '{{ .Values.security.controlplane.ssl.client.keyPath }}'
      - name: CONTROL_PLANE_CLIENT_TLS_CRT_LOCATION
        value: '{{ .Values.security.controlplane.ssl.client.crtPath }}'
      - name: CONTROL_PLANE_CLIENT_TLS_CA_LOCATION
        value: '{{ .Values.security.controlplane.ssl.client.caPath }}'
      - name: CONTROL_PLANE_SERVER_TLS_CA_LOCATION
        value: '{{ .Values.security.controlplane.ssl.client.serverCaPath }}'
      - name: ENVOY_SECURITY_PROTOCOL
        value: '{{ .Values.security.envoy.protocol }}'
      - name: ENVOY_UPSTREAM_SERVER_TLS_SECRET_NAME
        value: '{{ .Values.security.envoy.ssl.upstream.server.secret }}'
      - name: ENVOY_UPSTREAM_CLIENT_TLS_SECRET_NAME
        value: '{{ .Values.security.envoy.ssl.upstream.server.clientValidationSecret }}'
      - name: ENVOY_UPSTREAM_SERVER_TLS_KEY_LOCATION
        value: '{{ .Values.security.envoy.ssl.upstream.server.keyPath }}'
      - name: ENVOY_UPSTREAM_SERVER_TLS_CRT_LOCATION
        value: '{{ .Values.security.envoy.ssl.upstream.server.crtPath }}'
      - name: ENVOY_UPSTREAM_SERVER_TLS_CA_LOCATION
        value: '{{ .Values.security.envoy.ssl.upstream.server.caPath }}'
      - name: ENVOY_UPSTREAM_CLIENT_TLS_CA_LOCATION
        value: '{{ .Values.security.envoy.ssl.upstream.server.clientCaPath }}'
      image: '{{ .Values.serverConfig.agent.image.registry }}/{{ .Values.serverConfig.agent.image.repository }}:{{ .Values.serverConfig.agent.image.tag }}'
      imagePullPolicy: '{{ .Values.serverConfig.agent.image.pullPolicy }}'
      name: agent
      resources:
        requests:
          cpu: '{{ .Values.serverConfig.agent.resources.cpu }}'
          memory: '{{ .Values.serverConfig.agent.resources.memory }}'
        limits:
          memory: '{{ .Values.serverConfig.agent.resources.memory }}'
    - image: '{{ .Values.serverConfig.mlserver.image.registry }}/{{ .Values.serverConfig.mlserver.image.repository }}:{{ .Values.serverConfig.mlserver.image.tag }}'
      imagePullPolicy: '{{ .Values.serverConfig.mlserver.image.pullPolicy }}'
      name: mlserver
      resources:
        requests:
          cpu: '{{ .Values.serverConfig.mlserver.resources.cpu }}'
          memory: '{{ .Values.serverConfig.mlserver.resources.memory }}'
        limits:
          memory: '{{ .Values.serverConfig.mlserver.resources.memory }}'
    volumes:
    - name: downstream-ca-certs
      secret:
        secretName: '{{ .Values.security.envoy.ssl.downstream.client.serverValidationSecret }}'
        optional: true
  volumeClaimTemplates:
  - name: mlserver-models
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: '{{ .Values.serverConfig.mlserver.modelVolumeStorage }}'
