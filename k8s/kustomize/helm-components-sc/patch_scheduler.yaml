apiVersion: mlops.seldon.io/v1alpha1
kind: SeldonConfig
metadata:
  name: default
spec:
  components:
  - name: seldon-scheduler
    replicas: 1
    podSpec:
      imagePullSecrets: []
      containers:
      - image: '{{ .Values.scheduler.image.registry }}/{{ .Values.scheduler.image.repository }}:{{ .Values.scheduler.image.tag }}'
        imagePullPolicy: '{{ .Values.scheduler.image.pullPolicy }}'
        name: scheduler
        resources:
          requests:
            cpu: '{{ .Values.scheduler.resources.cpu }}'
            memory: '{{ .Values.scheduler.resources.memory }}'
          limits:
            memory: '{{ .Values.scheduler.resources.memory }}'
        env:
          - name: CONTROL_PLANE_SECURITY_PROTOCOL
            value: '{{ .Values.security.controlplane.protocol }}'
          - name: CONTROL_PLANE_SERVER_TLS_SECRET_NAME
            value: '{{ .Values.security.controlplane.ssl.server.secret }}'
          - name: CONTROL_PLANE_CLIENT_TLS_SECRET_NAME
            value: '{{ .Values.security.controlplane.ssl.server.clientValidationSecret }}'
          - name: CONTROL_PLANE_SERVER_TLS_KEY_LOCATION
            value: '{{ .Values.security.controlplane.ssl.server.keyPath }}'
          - name: CONTROL_PLANE_SERVER_TLS_CRT_LOCATION
            value: '{{ .Values.security.controlplane.ssl.server.crtPath }}'
          - name: CONTROL_PLANE_SERVER_TLS_CA_LOCATION
            value: '{{ .Values.security.controlplane.ssl.server.caPath }}'
          - name: CONTROL_PLANE_CLIENT_TLS_CA_LOCATION
            value: '{{ .Values.security.controlplane.ssl.server.clientCaPath }}'
          - name: ENVOY_SECURITY_PROTOCOL
            value: '{{ .Values.security.envoy.protocol }}'
          - name: ENVOY_UPSTREAM_CLIENT_TLS_SECRET_NAME
            value: '{{ .Values.security.envoy.ssl.upstream.client.secret }}'
          - name: ENVOY_UPSTREAM_SERVER_TLS_SECRET_NAME
            value: '{{ .Values.security.envoy.ssl.upstream.client.serverValidationSecret }}'
          - name: ENVOY_UPSTREAM_CLIENT_TLS_KEY_LOCATION
            value: '{{ .Values.security.envoy.ssl.upstream.client.keyPath }}'
          - name: ENVOY_UPSTREAM_CLIENT_TLS_CRT_LOCATION
            value: '{{ .Values.security.envoy.ssl.upstream.client.crtPath }}'
          - name: ENVOY_UPSTREAM_CLIENT_TLS_CA_LOCATION
            value: '{{ .Values.security.envoy.ssl.upstream.client.caPath }}'
          - name: ENVOY_UPSTREAM_SERVER_TLS_CA_LOCATION
            value: '{{ .Values.security.envoy.ssl.upstream.client.serverCaPath }}'
          - name: ENVOY_DOWNSTREAM_SERVER_TLS_SECRET_NAME
            value: '{{ .Values.security.envoy.ssl.downstream.server.secret }}'
          - name: ENVOY_DOWNSTREAM_CLIENT_TLS_SECRET_NAME
            value: '{{ .Values.security.envoy.ssl.downstream.server.clientValidationSecret }}'
          - name: ENVOY_DOWNSTREAM_SERVER_TLS_KEY_LOCATION
            value: '{{ .Values.security.envoy.ssl.downstream.server.keyPath }}'
          - name: ENVOY_DOWNSTREAM_SERVER_TLS_CRT_LOCATION
            value: '{{ .Values.security.envoy.ssl.downstream.server.crtPath }}'
          - name: ENVOY_DOWNSTREAM_SERVER_TLS_CA_LOCATION
            value: '{{ .Values.security.envoy.ssl.downstream.server.caPath }}'
          - name: ENVOY_DOWNSTREAM_CLIENT_TLS_CA_LOCATION
            value: '{{ .Values.security.envoy.ssl.downstream.server.clientCaPath }}'
    volumeClaimTemplates:
    - name: scheduler-state
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: '{{ .Values.scheduler.resources.storage }}'
