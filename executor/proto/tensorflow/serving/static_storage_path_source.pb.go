// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow_serving/sources/storage_path/static_storage_path_source.proto

package serving

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Config proto for StaticStoragePathSource.
type StaticStoragePathSourceConfig struct {
	// The single servable name, version number and path to supply statically.
	ServableName         string   `protobuf:"bytes,1,opt,name=servable_name,json=servableName,proto3" json:"servable_name,omitempty"`
	VersionNum           int64    `protobuf:"varint,2,opt,name=version_num,json=versionNum,proto3" json:"version_num,omitempty"`
	VersionPath          string   `protobuf:"bytes,3,opt,name=version_path,json=versionPath,proto3" json:"version_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StaticStoragePathSourceConfig) Reset()         { *m = StaticStoragePathSourceConfig{} }
func (m *StaticStoragePathSourceConfig) String() string { return proto.CompactTextString(m) }
func (*StaticStoragePathSourceConfig) ProtoMessage()    {}
func (*StaticStoragePathSourceConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_0651e15b76c19a4e, []int{0}
}

func (m *StaticStoragePathSourceConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StaticStoragePathSourceConfig.Unmarshal(m, b)
}
func (m *StaticStoragePathSourceConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StaticStoragePathSourceConfig.Marshal(b, m, deterministic)
}
func (m *StaticStoragePathSourceConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StaticStoragePathSourceConfig.Merge(m, src)
}
func (m *StaticStoragePathSourceConfig) XXX_Size() int {
	return xxx_messageInfo_StaticStoragePathSourceConfig.Size(m)
}
func (m *StaticStoragePathSourceConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_StaticStoragePathSourceConfig.DiscardUnknown(m)
}

var xxx_messageInfo_StaticStoragePathSourceConfig proto.InternalMessageInfo

func (m *StaticStoragePathSourceConfig) GetServableName() string {
	if m != nil {
		return m.ServableName
	}
	return ""
}

func (m *StaticStoragePathSourceConfig) GetVersionNum() int64 {
	if m != nil {
		return m.VersionNum
	}
	return 0
}

func (m *StaticStoragePathSourceConfig) GetVersionPath() string {
	if m != nil {
		return m.VersionPath
	}
	return ""
}

func init() {
	proto.RegisterType((*StaticStoragePathSourceConfig)(nil), "tensorflow.serving.StaticStoragePathSourceConfig")
}

func init() {
	proto.RegisterFile("tensorflow_serving/sources/storage_path/static_storage_path_source.proto", fileDescriptor_0651e15b76c19a4e)
}

var fileDescriptor_0651e15b76c19a4e = []byte{
	// 191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8e, 0xb1, 0xce, 0x82, 0x30,
	0x14, 0x46, 0xd3, 0x9f, 0xe4, 0x4f, 0xac, 0xb8, 0x74, 0x62, 0x31, 0xa2, 0x2e, 0x4c, 0x30, 0xf8,
	0x08, 0x2e, 0x4e, 0xc4, 0xc0, 0x03, 0x34, 0x85, 0x5c, 0xa0, 0x09, 0xed, 0x25, 0x6d, 0xc1, 0x57,
	0xf0, 0xb1, 0x0d, 0x05, 0xa2, 0xeb, 0x97, 0x73, 0xce, 0xbd, 0xf4, 0xe1, 0x40, 0x5b, 0x34, 0x4d,
	0x8f, 0x2f, 0x6e, 0xc1, 0x4c, 0x52, 0xb7, 0x99, 0xc5, 0xd1, 0xd4, 0x60, 0x33, 0xeb, 0xd0, 0x88,
	0x16, 0xf8, 0x20, 0x5c, 0x97, 0x59, 0x27, 0x9c, 0xac, 0xf9, 0xef, 0xc6, 0x17, 0x30, 0x1d, 0x0c,
	0x3a, 0x64, 0xec, 0x5b, 0x4a, 0xd7, 0xd2, 0xe5, 0x4d, 0xe8, 0xb1, 0xf4, 0x62, 0xb9, 0x78, 0x4f,
	0xe1, 0xba, 0xd2, 0x5b, 0x77, 0xd4, 0x8d, 0x6c, 0xd9, 0x95, 0x1e, 0x66, 0x58, 0x54, 0x3d, 0x70,
	0x2d, 0x14, 0x44, 0x24, 0x26, 0xc9, 0xae, 0x08, 0xb7, 0x31, 0x17, 0x0a, 0xd8, 0x89, 0xee, 0x27,
	0x30, 0x56, 0xa2, 0xe6, 0x7a, 0x54, 0xd1, 0x5f, 0x4c, 0x92, 0xa0, 0xa0, 0xeb, 0x94, 0x8f, 0x8a,
	0x9d, 0x69, 0xb8, 0x01, 0xf3, 0x63, 0x51, 0xe0, 0x23, 0x9b, 0x34, 0x1f, 0xad, 0xfe, 0xfd, 0x97,
	0xb7, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4a, 0xea, 0x2a, 0xca, 0xf1, 0x00, 0x00, 0x00,
}
