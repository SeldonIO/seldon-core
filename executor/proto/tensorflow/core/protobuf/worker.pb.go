// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow/core/protobuf/worker.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	framework "github.com/tensorflow/tensorflow/tensorflow/go/core/framework"
	core "github.com/tensorflow/tensorflow/tensorflow/go/core/lib/core"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetStatusRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStatusRequest) Reset()         { *m = GetStatusRequest{} }
func (m *GetStatusRequest) String() string { return proto.CompactTextString(m) }
func (*GetStatusRequest) ProtoMessage()    {}
func (*GetStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{0}
}

func (m *GetStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatusRequest.Unmarshal(m, b)
}
func (m *GetStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatusRequest.Marshal(b, m, deterministic)
}
func (m *GetStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatusRequest.Merge(m, src)
}
func (m *GetStatusRequest) XXX_Size() int {
	return xxx_messageInfo_GetStatusRequest.Size(m)
}
func (m *GetStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatusRequest proto.InternalMessageInfo

type GetStatusResponse struct {
	DeviceAttributes     []*framework.DeviceAttributes `protobuf:"bytes,1,rep,name=device_attributes,json=deviceAttributes,proto3" json:"device_attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *GetStatusResponse) Reset()         { *m = GetStatusResponse{} }
func (m *GetStatusResponse) String() string { return proto.CompactTextString(m) }
func (*GetStatusResponse) ProtoMessage()    {}
func (*GetStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{1}
}

func (m *GetStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatusResponse.Unmarshal(m, b)
}
func (m *GetStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatusResponse.Marshal(b, m, deterministic)
}
func (m *GetStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatusResponse.Merge(m, src)
}
func (m *GetStatusResponse) XXX_Size() int {
	return xxx_messageInfo_GetStatusResponse.Size(m)
}
func (m *GetStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatusResponse proto.InternalMessageInfo

func (m *GetStatusResponse) GetDeviceAttributes() []*framework.DeviceAttributes {
	if m != nil {
		return m.DeviceAttributes
	}
	return nil
}

type CreateWorkerSessionRequest struct {
	// Sessions are identified by a given handle.
	SessionHandle string `protobuf:"bytes,1,opt,name=session_handle,json=sessionHandle,proto3" json:"session_handle,omitempty"`
	// Defines the configuration of a TensorFlow worker.
	ServerDef *ServerDef `protobuf:"bytes,2,opt,name=server_def,json=serverDef,proto3" json:"server_def,omitempty"`
	// If true, any resources such as Variables used in the session will not be
	// shared with other sessions.
	IsolateSessionState bool `protobuf:"varint,3,opt,name=isolate_session_state,json=isolateSessionState,proto3" json:"isolate_session_state,omitempty"`
	// The device attributes of all the devices in the cluster.
	ClusterDeviceAttributes []*framework.DeviceAttributes `protobuf:"bytes,4,rep,name=cluster_device_attributes,json=clusterDeviceAttributes,proto3" json:"cluster_device_attributes,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                      `json:"-"`
	XXX_unrecognized        []byte                        `json:"-"`
	XXX_sizecache           int32                         `json:"-"`
}

func (m *CreateWorkerSessionRequest) Reset()         { *m = CreateWorkerSessionRequest{} }
func (m *CreateWorkerSessionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateWorkerSessionRequest) ProtoMessage()    {}
func (*CreateWorkerSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{2}
}

func (m *CreateWorkerSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWorkerSessionRequest.Unmarshal(m, b)
}
func (m *CreateWorkerSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWorkerSessionRequest.Marshal(b, m, deterministic)
}
func (m *CreateWorkerSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWorkerSessionRequest.Merge(m, src)
}
func (m *CreateWorkerSessionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateWorkerSessionRequest.Size(m)
}
func (m *CreateWorkerSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWorkerSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWorkerSessionRequest proto.InternalMessageInfo

func (m *CreateWorkerSessionRequest) GetSessionHandle() string {
	if m != nil {
		return m.SessionHandle
	}
	return ""
}

func (m *CreateWorkerSessionRequest) GetServerDef() *ServerDef {
	if m != nil {
		return m.ServerDef
	}
	return nil
}

func (m *CreateWorkerSessionRequest) GetIsolateSessionState() bool {
	if m != nil {
		return m.IsolateSessionState
	}
	return false
}

func (m *CreateWorkerSessionRequest) GetClusterDeviceAttributes() []*framework.DeviceAttributes {
	if m != nil {
		return m.ClusterDeviceAttributes
	}
	return nil
}

type CreateWorkerSessionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateWorkerSessionResponse) Reset()         { *m = CreateWorkerSessionResponse{} }
func (m *CreateWorkerSessionResponse) String() string { return proto.CompactTextString(m) }
func (*CreateWorkerSessionResponse) ProtoMessage()    {}
func (*CreateWorkerSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{3}
}

func (m *CreateWorkerSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWorkerSessionResponse.Unmarshal(m, b)
}
func (m *CreateWorkerSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWorkerSessionResponse.Marshal(b, m, deterministic)
}
func (m *CreateWorkerSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWorkerSessionResponse.Merge(m, src)
}
func (m *CreateWorkerSessionResponse) XXX_Size() int {
	return xxx_messageInfo_CreateWorkerSessionResponse.Size(m)
}
func (m *CreateWorkerSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWorkerSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWorkerSessionResponse proto.InternalMessageInfo

type DeleteWorkerSessionRequest struct {
	// Sessions are identified by a given handle.
	SessionHandle        string   `protobuf:"bytes,1,opt,name=session_handle,json=sessionHandle,proto3" json:"session_handle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteWorkerSessionRequest) Reset()         { *m = DeleteWorkerSessionRequest{} }
func (m *DeleteWorkerSessionRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteWorkerSessionRequest) ProtoMessage()    {}
func (*DeleteWorkerSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{4}
}

func (m *DeleteWorkerSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteWorkerSessionRequest.Unmarshal(m, b)
}
func (m *DeleteWorkerSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteWorkerSessionRequest.Marshal(b, m, deterministic)
}
func (m *DeleteWorkerSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteWorkerSessionRequest.Merge(m, src)
}
func (m *DeleteWorkerSessionRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteWorkerSessionRequest.Size(m)
}
func (m *DeleteWorkerSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteWorkerSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteWorkerSessionRequest proto.InternalMessageInfo

func (m *DeleteWorkerSessionRequest) GetSessionHandle() string {
	if m != nil {
		return m.SessionHandle
	}
	return ""
}

type DeleteWorkerSessionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteWorkerSessionResponse) Reset()         { *m = DeleteWorkerSessionResponse{} }
func (m *DeleteWorkerSessionResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteWorkerSessionResponse) ProtoMessage()    {}
func (*DeleteWorkerSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{5}
}

func (m *DeleteWorkerSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteWorkerSessionResponse.Unmarshal(m, b)
}
func (m *DeleteWorkerSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteWorkerSessionResponse.Marshal(b, m, deterministic)
}
func (m *DeleteWorkerSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteWorkerSessionResponse.Merge(m, src)
}
func (m *DeleteWorkerSessionResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteWorkerSessionResponse.Size(m)
}
func (m *DeleteWorkerSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteWorkerSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteWorkerSessionResponse proto.InternalMessageInfo

type RegisterGraphRequest struct {
	// Subgraphs are scoped within one session.
	SessionHandle string `protobuf:"bytes,1,opt,name=session_handle,json=sessionHandle,proto3" json:"session_handle,omitempty"`
	// Set to true if `CreateWorkerSession` was called for `session_handle`.
	CreateWorkerSessionCalled bool `protobuf:"varint,6,opt,name=create_worker_session_called,json=createWorkerSessionCalled,proto3" json:"create_worker_session_called,omitempty"`
	// "graph_def" has the subgraph of nodes for this worker, with each node
	// having its device_name filled in.
	GraphDef *framework.GraphDef `protobuf:"bytes,2,opt,name=graph_def,json=graphDef,proto3" json:"graph_def,omitempty"`
	// True iff the graph (before partitioning) contains control flow nodes.
	//
	// As of 01/11/2015, this is no longer set by clients.
	HasControlFlow bool `protobuf:"varint,3,opt,name=has_control_flow,json=hasControlFlow,proto3" json:"has_control_flow,omitempty"` // Deprecated: Do not use.
	// Configuration options for the session in which this graph was created.
	GraphOptions *GraphOptions `protobuf:"bytes,4,opt,name=graph_options,json=graphOptions,proto3" json:"graph_options,omitempty"`
	// Field(s) used by TensorFlow Debugger (tfdbg).
	DebugOptions *DebugOptions `protobuf:"bytes,5,opt,name=debug_options,json=debugOptions,proto3" json:"debug_options,omitempty"`
	// If graph_def contains any collective ops this must be a positive
	// integer used to coordinate execution with other graphs.  All
	// graphs in a distributed execution with the same
	// collective_graph_key will coordinate to use the same step_id
	// concurrently so that BufRendezvous entries will make the correct
	// values accessible.
	CollectiveGraphKey   int64    `protobuf:"varint,7,opt,name=collective_graph_key,json=collectiveGraphKey,proto3" json:"collective_graph_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterGraphRequest) Reset()         { *m = RegisterGraphRequest{} }
func (m *RegisterGraphRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterGraphRequest) ProtoMessage()    {}
func (*RegisterGraphRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{6}
}

func (m *RegisterGraphRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterGraphRequest.Unmarshal(m, b)
}
func (m *RegisterGraphRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterGraphRequest.Marshal(b, m, deterministic)
}
func (m *RegisterGraphRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterGraphRequest.Merge(m, src)
}
func (m *RegisterGraphRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterGraphRequest.Size(m)
}
func (m *RegisterGraphRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterGraphRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterGraphRequest proto.InternalMessageInfo

func (m *RegisterGraphRequest) GetSessionHandle() string {
	if m != nil {
		return m.SessionHandle
	}
	return ""
}

func (m *RegisterGraphRequest) GetCreateWorkerSessionCalled() bool {
	if m != nil {
		return m.CreateWorkerSessionCalled
	}
	return false
}

func (m *RegisterGraphRequest) GetGraphDef() *framework.GraphDef {
	if m != nil {
		return m.GraphDef
	}
	return nil
}

// Deprecated: Do not use.
func (m *RegisterGraphRequest) GetHasControlFlow() bool {
	if m != nil {
		return m.HasControlFlow
	}
	return false
}

func (m *RegisterGraphRequest) GetGraphOptions() *GraphOptions {
	if m != nil {
		return m.GraphOptions
	}
	return nil
}

func (m *RegisterGraphRequest) GetDebugOptions() *DebugOptions {
	if m != nil {
		return m.DebugOptions
	}
	return nil
}

func (m *RegisterGraphRequest) GetCollectiveGraphKey() int64 {
	if m != nil {
		return m.CollectiveGraphKey
	}
	return 0
}

type RegisterGraphResponse struct {
	// If the registration succeeds, returns an opaque graph_handle to
	// the master. The master calls RunGraph with graph_handle to
	// compute different steps.
	GraphHandle          string   `protobuf:"bytes,1,opt,name=graph_handle,json=graphHandle,proto3" json:"graph_handle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterGraphResponse) Reset()         { *m = RegisterGraphResponse{} }
func (m *RegisterGraphResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterGraphResponse) ProtoMessage()    {}
func (*RegisterGraphResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{7}
}

func (m *RegisterGraphResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterGraphResponse.Unmarshal(m, b)
}
func (m *RegisterGraphResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterGraphResponse.Marshal(b, m, deterministic)
}
func (m *RegisterGraphResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterGraphResponse.Merge(m, src)
}
func (m *RegisterGraphResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterGraphResponse.Size(m)
}
func (m *RegisterGraphResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterGraphResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterGraphResponse proto.InternalMessageInfo

func (m *RegisterGraphResponse) GetGraphHandle() string {
	if m != nil {
		return m.GraphHandle
	}
	return ""
}

type DeregisterGraphRequest struct {
	// The session_handle used when registering the graph. If session_handle is
	// empty, a single global namespace is used.
	SessionHandle string `protobuf:"bytes,2,opt,name=session_handle,json=sessionHandle,proto3" json:"session_handle,omitempty"`
	// Set to true if `CreateWorkerSession` was called for `session_handle`.
	CreateWorkerSessionCalled bool `protobuf:"varint,3,opt,name=create_worker_session_called,json=createWorkerSessionCalled,proto3" json:"create_worker_session_called,omitempty"`
	// REQUIRED: graph_handle must be returned by a RegisterGraph call
	// to the same WorkerService.
	GraphHandle          string   `protobuf:"bytes,1,opt,name=graph_handle,json=graphHandle,proto3" json:"graph_handle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeregisterGraphRequest) Reset()         { *m = DeregisterGraphRequest{} }
func (m *DeregisterGraphRequest) String() string { return proto.CompactTextString(m) }
func (*DeregisterGraphRequest) ProtoMessage()    {}
func (*DeregisterGraphRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{8}
}

func (m *DeregisterGraphRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeregisterGraphRequest.Unmarshal(m, b)
}
func (m *DeregisterGraphRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeregisterGraphRequest.Marshal(b, m, deterministic)
}
func (m *DeregisterGraphRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeregisterGraphRequest.Merge(m, src)
}
func (m *DeregisterGraphRequest) XXX_Size() int {
	return xxx_messageInfo_DeregisterGraphRequest.Size(m)
}
func (m *DeregisterGraphRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeregisterGraphRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeregisterGraphRequest proto.InternalMessageInfo

func (m *DeregisterGraphRequest) GetSessionHandle() string {
	if m != nil {
		return m.SessionHandle
	}
	return ""
}

func (m *DeregisterGraphRequest) GetCreateWorkerSessionCalled() bool {
	if m != nil {
		return m.CreateWorkerSessionCalled
	}
	return false
}

func (m *DeregisterGraphRequest) GetGraphHandle() string {
	if m != nil {
		return m.GraphHandle
	}
	return ""
}

type DeregisterGraphResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeregisterGraphResponse) Reset()         { *m = DeregisterGraphResponse{} }
func (m *DeregisterGraphResponse) String() string { return proto.CompactTextString(m) }
func (*DeregisterGraphResponse) ProtoMessage()    {}
func (*DeregisterGraphResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{9}
}

func (m *DeregisterGraphResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeregisterGraphResponse.Unmarshal(m, b)
}
func (m *DeregisterGraphResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeregisterGraphResponse.Marshal(b, m, deterministic)
}
func (m *DeregisterGraphResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeregisterGraphResponse.Merge(m, src)
}
func (m *DeregisterGraphResponse) XXX_Size() int {
	return xxx_messageInfo_DeregisterGraphResponse.Size(m)
}
func (m *DeregisterGraphResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeregisterGraphResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeregisterGraphResponse proto.InternalMessageInfo

type CleanupAllRequest struct {
	// A list of container names.
	//
	// If 'container' is not empty, releases resources in the given
	// containers in all devices.
	//
	// If 'container' is empty, releases resources in the default
	// container in all devices.
	Container            []string `protobuf:"bytes,1,rep,name=container,proto3" json:"container,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CleanupAllRequest) Reset()         { *m = CleanupAllRequest{} }
func (m *CleanupAllRequest) String() string { return proto.CompactTextString(m) }
func (*CleanupAllRequest) ProtoMessage()    {}
func (*CleanupAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{10}
}

func (m *CleanupAllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanupAllRequest.Unmarshal(m, b)
}
func (m *CleanupAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanupAllRequest.Marshal(b, m, deterministic)
}
func (m *CleanupAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanupAllRequest.Merge(m, src)
}
func (m *CleanupAllRequest) XXX_Size() int {
	return xxx_messageInfo_CleanupAllRequest.Size(m)
}
func (m *CleanupAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanupAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CleanupAllRequest proto.InternalMessageInfo

func (m *CleanupAllRequest) GetContainer() []string {
	if m != nil {
		return m.Container
	}
	return nil
}

type CleanupAllResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CleanupAllResponse) Reset()         { *m = CleanupAllResponse{} }
func (m *CleanupAllResponse) String() string { return proto.CompactTextString(m) }
func (*CleanupAllResponse) ProtoMessage()    {}
func (*CleanupAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{11}
}

func (m *CleanupAllResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanupAllResponse.Unmarshal(m, b)
}
func (m *CleanupAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanupAllResponse.Marshal(b, m, deterministic)
}
func (m *CleanupAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanupAllResponse.Merge(m, src)
}
func (m *CleanupAllResponse) XXX_Size() int {
	return xxx_messageInfo_CleanupAllResponse.Size(m)
}
func (m *CleanupAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanupAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CleanupAllResponse proto.InternalMessageInfo

// Options specific to the execution of a single step.
type ExecutorOpts struct {
	RecordCosts                    bool     `protobuf:"varint,1,opt,name=record_costs,json=recordCosts,proto3" json:"record_costs,omitempty"`
	RecordTimeline                 bool     `protobuf:"varint,3,opt,name=record_timeline,json=recordTimeline,proto3" json:"record_timeline,omitempty"`
	RecordPartitionGraphs          bool     `protobuf:"varint,4,opt,name=record_partition_graphs,json=recordPartitionGraphs,proto3" json:"record_partition_graphs,omitempty"`
	ReportTensorAllocationsUponOom bool     `protobuf:"varint,5,opt,name=report_tensor_allocations_upon_oom,json=reportTensorAllocationsUponOom,proto3" json:"report_tensor_allocations_upon_oom,omitempty"`
	XXX_NoUnkeyedLiteral           struct{} `json:"-"`
	XXX_unrecognized               []byte   `json:"-"`
	XXX_sizecache                  int32    `json:"-"`
}

func (m *ExecutorOpts) Reset()         { *m = ExecutorOpts{} }
func (m *ExecutorOpts) String() string { return proto.CompactTextString(m) }
func (*ExecutorOpts) ProtoMessage()    {}
func (*ExecutorOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{12}
}

func (m *ExecutorOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutorOpts.Unmarshal(m, b)
}
func (m *ExecutorOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutorOpts.Marshal(b, m, deterministic)
}
func (m *ExecutorOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutorOpts.Merge(m, src)
}
func (m *ExecutorOpts) XXX_Size() int {
	return xxx_messageInfo_ExecutorOpts.Size(m)
}
func (m *ExecutorOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutorOpts.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutorOpts proto.InternalMessageInfo

func (m *ExecutorOpts) GetRecordCosts() bool {
	if m != nil {
		return m.RecordCosts
	}
	return false
}

func (m *ExecutorOpts) GetRecordTimeline() bool {
	if m != nil {
		return m.RecordTimeline
	}
	return false
}

func (m *ExecutorOpts) GetRecordPartitionGraphs() bool {
	if m != nil {
		return m.RecordPartitionGraphs
	}
	return false
}

func (m *ExecutorOpts) GetReportTensorAllocationsUponOom() bool {
	if m != nil {
		return m.ReportTensorAllocationsUponOom
	}
	return false
}

type RunGraphRequest struct {
	// session_handle is the master-generated unique id for this session.
	// If session_handle is non-empty, it must be the same as used when
	// registering the graph. If it is empty, a single global namespace is used to
	// search for the graph_handle.
	SessionHandle string `protobuf:"bytes,8,opt,name=session_handle,json=sessionHandle,proto3" json:"session_handle,omitempty"`
	// Set to true if `CreateWorkerSession` was called for `session_handle`.
	CreateWorkerSessionCalled bool `protobuf:"varint,10,opt,name=create_worker_session_called,json=createWorkerSessionCalled,proto3" json:"create_worker_session_called,omitempty"`
	// REQUIRED: graph_handle must be returned by a RegisterGraph call
	// to the same WorkerService.
	GraphHandle string `protobuf:"bytes,1,opt,name=graph_handle,json=graphHandle,proto3" json:"graph_handle,omitempty"`
	// A unique ID to distinguish different runs of the same graph.
	//
	// The master generates a global unique `step_id` to distinguish
	// different runs of the graph computation. Subgraphs communicate
	// (e.g., send/recv ops) with each other using `step_id` to
	// distinguish tensors generated by different runs.
	StepId int64 `protobuf:"varint,2,opt,name=step_id,json=stepId,proto3" json:"step_id,omitempty"`
	// Options for this step.
	ExecOpts *ExecutorOpts `protobuf:"bytes,5,opt,name=exec_opts,json=execOpts,proto3" json:"exec_opts,omitempty"`
	// Runs the graph.
	//
	// Sends the tensors in "send" into the graph before the run and
	// fetches the keys into `RunGraphResponse.recv` after the run.
	Send    []*NamedTensorProto `protobuf:"bytes,3,rep,name=send,proto3" json:"send,omitempty"`
	RecvKey []string            `protobuf:"bytes,4,rep,name=recv_key,json=recvKey,proto3" json:"recv_key,omitempty"`
	// True if the RunGraphRequest is a partial run request.
	IsPartial bool `protobuf:"varint,6,opt,name=is_partial,json=isPartial,proto3" json:"is_partial,omitempty"`
	// True if this is the last partial run request in a sequence of requests.
	IsLastPartialRun bool `protobuf:"varint,7,opt,name=is_last_partial_run,json=isLastPartialRun,proto3" json:"is_last_partial_run,omitempty"`
	// If true then some errors, e.g., execution errors that have long
	// error messages, may return an OK RunGraphResponse with the actual
	// error saved in the status_code/status_error_message fields of the
	// response body. This is a workaround since the RPC subsystem may
	// truncate long metadata messages.
	StoreErrorsInResponseBody bool `protobuf:"varint,9,opt,name=store_errors_in_response_body,json=storeErrorsInResponseBody,proto3" json:"store_errors_in_response_body,omitempty"`
	// Unique identifier for this request. Every RunGraphRequest must have a
	// unique request_id, and retried RunGraphRequests must have the same
	// request_id. If request_id is zero, retry detection is disabled.
	//
	// Retried RunGraphRequests are problematic because they may issue a
	// RecvTensor that will have no corresponding sender and will wait forever.
	// Workers use request_ids to reject retried RunGraph requests instead of
	// waiting forever.
	RequestId            int64    `protobuf:"varint,11,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunGraphRequest) Reset()         { *m = RunGraphRequest{} }
func (m *RunGraphRequest) String() string { return proto.CompactTextString(m) }
func (*RunGraphRequest) ProtoMessage()    {}
func (*RunGraphRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{13}
}

func (m *RunGraphRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunGraphRequest.Unmarshal(m, b)
}
func (m *RunGraphRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunGraphRequest.Marshal(b, m, deterministic)
}
func (m *RunGraphRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunGraphRequest.Merge(m, src)
}
func (m *RunGraphRequest) XXX_Size() int {
	return xxx_messageInfo_RunGraphRequest.Size(m)
}
func (m *RunGraphRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunGraphRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunGraphRequest proto.InternalMessageInfo

func (m *RunGraphRequest) GetSessionHandle() string {
	if m != nil {
		return m.SessionHandle
	}
	return ""
}

func (m *RunGraphRequest) GetCreateWorkerSessionCalled() bool {
	if m != nil {
		return m.CreateWorkerSessionCalled
	}
	return false
}

func (m *RunGraphRequest) GetGraphHandle() string {
	if m != nil {
		return m.GraphHandle
	}
	return ""
}

func (m *RunGraphRequest) GetStepId() int64 {
	if m != nil {
		return m.StepId
	}
	return 0
}

func (m *RunGraphRequest) GetExecOpts() *ExecutorOpts {
	if m != nil {
		return m.ExecOpts
	}
	return nil
}

func (m *RunGraphRequest) GetSend() []*NamedTensorProto {
	if m != nil {
		return m.Send
	}
	return nil
}

func (m *RunGraphRequest) GetRecvKey() []string {
	if m != nil {
		return m.RecvKey
	}
	return nil
}

func (m *RunGraphRequest) GetIsPartial() bool {
	if m != nil {
		return m.IsPartial
	}
	return false
}

func (m *RunGraphRequest) GetIsLastPartialRun() bool {
	if m != nil {
		return m.IsLastPartialRun
	}
	return false
}

func (m *RunGraphRequest) GetStoreErrorsInResponseBody() bool {
	if m != nil {
		return m.StoreErrorsInResponseBody
	}
	return false
}

func (m *RunGraphRequest) GetRequestId() int64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

type RunGraphResponse struct {
	// A list of tensors corresponding to those requested by
	// `RunGraphRequest.recv_key`.
	Recv []*NamedTensorProto `protobuf:"bytes,1,rep,name=recv,proto3" json:"recv,omitempty"`
	// If the request asked for execution stats, the cost graph, or the partition
	// graphs, these are returned here.
	// TODO(suharshs): Package these in a RunMetadata instead.
	StepStats      *framework.StepStats    `protobuf:"bytes,2,opt,name=step_stats,json=stepStats,proto3" json:"step_stats,omitempty"`
	CostGraph      *framework.CostGraphDef `protobuf:"bytes,3,opt,name=cost_graph,json=costGraph,proto3" json:"cost_graph,omitempty"`
	PartitionGraph []*framework.GraphDef   `protobuf:"bytes,4,rep,name=partition_graph,json=partitionGraph,proto3" json:"partition_graph,omitempty"`
	// If store_errors_in_response_body is true in the request, then
	// optionally the server may return an OK status for the RPC and
	// fill the true status into the fields below, to allow for messages
	// that are too long to fit in metadata.
	StatusCode           core.Code `protobuf:"varint,5,opt,name=status_code,json=statusCode,proto3,enum=tensorflow.error.Code" json:"status_code,omitempty"`
	StatusErrorMessage   string    `protobuf:"bytes,6,opt,name=status_error_message,json=statusErrorMessage,proto3" json:"status_error_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RunGraphResponse) Reset()         { *m = RunGraphResponse{} }
func (m *RunGraphResponse) String() string { return proto.CompactTextString(m) }
func (*RunGraphResponse) ProtoMessage()    {}
func (*RunGraphResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{14}
}

func (m *RunGraphResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunGraphResponse.Unmarshal(m, b)
}
func (m *RunGraphResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunGraphResponse.Marshal(b, m, deterministic)
}
func (m *RunGraphResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunGraphResponse.Merge(m, src)
}
func (m *RunGraphResponse) XXX_Size() int {
	return xxx_messageInfo_RunGraphResponse.Size(m)
}
func (m *RunGraphResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RunGraphResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RunGraphResponse proto.InternalMessageInfo

func (m *RunGraphResponse) GetRecv() []*NamedTensorProto {
	if m != nil {
		return m.Recv
	}
	return nil
}

func (m *RunGraphResponse) GetStepStats() *framework.StepStats {
	if m != nil {
		return m.StepStats
	}
	return nil
}

func (m *RunGraphResponse) GetCostGraph() *framework.CostGraphDef {
	if m != nil {
		return m.CostGraph
	}
	return nil
}

func (m *RunGraphResponse) GetPartitionGraph() []*framework.GraphDef {
	if m != nil {
		return m.PartitionGraph
	}
	return nil
}

func (m *RunGraphResponse) GetStatusCode() core.Code {
	if m != nil {
		return m.StatusCode
	}
	return core.Code_OK
}

func (m *RunGraphResponse) GetStatusErrorMessage() string {
	if m != nil {
		return m.StatusErrorMessage
	}
	return ""
}

type CleanupGraphRequest struct {
	StepId               int64    `protobuf:"varint,1,opt,name=step_id,json=stepId,proto3" json:"step_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CleanupGraphRequest) Reset()         { *m = CleanupGraphRequest{} }
func (m *CleanupGraphRequest) String() string { return proto.CompactTextString(m) }
func (*CleanupGraphRequest) ProtoMessage()    {}
func (*CleanupGraphRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{15}
}

func (m *CleanupGraphRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanupGraphRequest.Unmarshal(m, b)
}
func (m *CleanupGraphRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanupGraphRequest.Marshal(b, m, deterministic)
}
func (m *CleanupGraphRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanupGraphRequest.Merge(m, src)
}
func (m *CleanupGraphRequest) XXX_Size() int {
	return xxx_messageInfo_CleanupGraphRequest.Size(m)
}
func (m *CleanupGraphRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanupGraphRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CleanupGraphRequest proto.InternalMessageInfo

func (m *CleanupGraphRequest) GetStepId() int64 {
	if m != nil {
		return m.StepId
	}
	return 0
}

type CleanupGraphResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CleanupGraphResponse) Reset()         { *m = CleanupGraphResponse{} }
func (m *CleanupGraphResponse) String() string { return proto.CompactTextString(m) }
func (*CleanupGraphResponse) ProtoMessage()    {}
func (*CleanupGraphResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{16}
}

func (m *CleanupGraphResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanupGraphResponse.Unmarshal(m, b)
}
func (m *CleanupGraphResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanupGraphResponse.Marshal(b, m, deterministic)
}
func (m *CleanupGraphResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanupGraphResponse.Merge(m, src)
}
func (m *CleanupGraphResponse) XXX_Size() int {
	return xxx_messageInfo_CleanupGraphResponse.Size(m)
}
func (m *CleanupGraphResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanupGraphResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CleanupGraphResponse proto.InternalMessageInfo

type RecvTensorRequest struct {
	// The step in which the tensor will be produced.
	//
	// REQUIRED: This must eventually correspond to the `step_id` passed
	// into a RunGraph call on the same WorkerService.
	StepId int64 `protobuf:"varint,1,opt,name=step_id,json=stepId,proto3" json:"step_id,omitempty"`
	// A key identifying the channel to receive tensors from. A RecvTensor request
	// retrieves one tensor from the channel, but multiple tensors can be sent and
	// received over the same channel with multiple RecvTensor requests. See
	// rendezvous.h for details.
	RendezvousKey string `protobuf:"bytes,2,opt,name=rendezvous_key,json=rendezvousKey,proto3" json:"rendezvous_key,omitempty"`
	// If true, use an out-of-band DMA mechanism to transfer the
	// received tensor.
	DmaOk bool `protobuf:"varint,3,opt,name=dma_ok,json=dmaOk,proto3" json:"dma_ok,omitempty"`
	// Optional information on client-side device locality.
	ClientLocality *framework.DeviceLocality `protobuf:"bytes,4,opt,name=client_locality,json=clientLocality,proto3" json:"client_locality,omitempty"`
	// Optional information on server-side device locality.
	ServerLocality *framework.DeviceLocality `protobuf:"bytes,5,opt,name=server_locality,json=serverLocality,proto3" json:"server_locality,omitempty"`
	// Optional information needed by the RPC subsystem.
	TransportOptions *any.Any `protobuf:"bytes,6,opt,name=transport_options,json=transportOptions,proto3" json:"transport_options,omitempty"`
	// Unique identifier for this request. Every RecvTensorRequest must have a
	// unique request_id, and retried RecvTensorRequests must have the same
	// request_id. If request_id is zero, retry detection and response cache
	// are disabled.
	//
	// Retried RecvTensorRequests are problematic because a RecvTensor with no
	// corresponding sender will wait forever, and the tensor may have been
	// delivered to a previous retry. Workers use request_ids to reject retried
	// RecvTensor requests instead of waiting forever.
	RequestId            int64    `protobuf:"varint,7,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecvTensorRequest) Reset()         { *m = RecvTensorRequest{} }
func (m *RecvTensorRequest) String() string { return proto.CompactTextString(m) }
func (*RecvTensorRequest) ProtoMessage()    {}
func (*RecvTensorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{17}
}

func (m *RecvTensorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecvTensorRequest.Unmarshal(m, b)
}
func (m *RecvTensorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecvTensorRequest.Marshal(b, m, deterministic)
}
func (m *RecvTensorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecvTensorRequest.Merge(m, src)
}
func (m *RecvTensorRequest) XXX_Size() int {
	return xxx_messageInfo_RecvTensorRequest.Size(m)
}
func (m *RecvTensorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecvTensorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecvTensorRequest proto.InternalMessageInfo

func (m *RecvTensorRequest) GetStepId() int64 {
	if m != nil {
		return m.StepId
	}
	return 0
}

func (m *RecvTensorRequest) GetRendezvousKey() string {
	if m != nil {
		return m.RendezvousKey
	}
	return ""
}

func (m *RecvTensorRequest) GetDmaOk() bool {
	if m != nil {
		return m.DmaOk
	}
	return false
}

func (m *RecvTensorRequest) GetClientLocality() *framework.DeviceLocality {
	if m != nil {
		return m.ClientLocality
	}
	return nil
}

func (m *RecvTensorRequest) GetServerLocality() *framework.DeviceLocality {
	if m != nil {
		return m.ServerLocality
	}
	return nil
}

func (m *RecvTensorRequest) GetTransportOptions() *any.Any {
	if m != nil {
		return m.TransportOptions
	}
	return nil
}

func (m *RecvTensorRequest) GetRequestId() int64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

type RecvTensorResponse struct {
	// The tensor as a proto.
	Tensor *framework.TensorProto `protobuf:"bytes,1,opt,name=tensor,proto3" json:"tensor,omitempty"`
	// If true, this tensor was the output of a dead node, and the
	// content is invalid.
	IsDead bool `protobuf:"varint,2,opt,name=is_dead,json=isDead,proto3" json:"is_dead,omitempty"`
	// The time at which tensor was available and started to be returned.
	SendStartMicros int64 `protobuf:"varint,3,opt,name=send_start_micros,json=sendStartMicros,proto3" json:"send_start_micros,omitempty"`
	// Optional additional information about how to receive the tensor,
	// e.g. in the event that `RecvTensorRequest.dma_ok` was true.
	TransportOptions *any.Any `protobuf:"bytes,4,opt,name=transport_options,json=transportOptions,proto3" json:"transport_options,omitempty"`
	// Whether the receiver should send a MarkRecvFinishedRequest to the sender
	// to ack the message.
	RequireAck           bool     `protobuf:"varint,5,opt,name=require_ack,json=requireAck,proto3" json:"require_ack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecvTensorResponse) Reset()         { *m = RecvTensorResponse{} }
func (m *RecvTensorResponse) String() string { return proto.CompactTextString(m) }
func (*RecvTensorResponse) ProtoMessage()    {}
func (*RecvTensorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{18}
}

func (m *RecvTensorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecvTensorResponse.Unmarshal(m, b)
}
func (m *RecvTensorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecvTensorResponse.Marshal(b, m, deterministic)
}
func (m *RecvTensorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecvTensorResponse.Merge(m, src)
}
func (m *RecvTensorResponse) XXX_Size() int {
	return xxx_messageInfo_RecvTensorResponse.Size(m)
}
func (m *RecvTensorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecvTensorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecvTensorResponse proto.InternalMessageInfo

func (m *RecvTensorResponse) GetTensor() *framework.TensorProto {
	if m != nil {
		return m.Tensor
	}
	return nil
}

func (m *RecvTensorResponse) GetIsDead() bool {
	if m != nil {
		return m.IsDead
	}
	return false
}

func (m *RecvTensorResponse) GetSendStartMicros() int64 {
	if m != nil {
		return m.SendStartMicros
	}
	return 0
}

func (m *RecvTensorResponse) GetTransportOptions() *any.Any {
	if m != nil {
		return m.TransportOptions
	}
	return nil
}

func (m *RecvTensorResponse) GetRequireAck() bool {
	if m != nil {
		return m.RequireAck
	}
	return false
}

// Message for managing the response cache maintained on the sender side.
// Currently only used by the gRPC worker service.
type MarkRecvFinishedRequest struct {
	RequestId            int64    `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarkRecvFinishedRequest) Reset()         { *m = MarkRecvFinishedRequest{} }
func (m *MarkRecvFinishedRequest) String() string { return proto.CompactTextString(m) }
func (*MarkRecvFinishedRequest) ProtoMessage()    {}
func (*MarkRecvFinishedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{19}
}

func (m *MarkRecvFinishedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarkRecvFinishedRequest.Unmarshal(m, b)
}
func (m *MarkRecvFinishedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarkRecvFinishedRequest.Marshal(b, m, deterministic)
}
func (m *MarkRecvFinishedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarkRecvFinishedRequest.Merge(m, src)
}
func (m *MarkRecvFinishedRequest) XXX_Size() int {
	return xxx_messageInfo_MarkRecvFinishedRequest.Size(m)
}
func (m *MarkRecvFinishedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarkRecvFinishedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarkRecvFinishedRequest proto.InternalMessageInfo

func (m *MarkRecvFinishedRequest) GetRequestId() int64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

type MarkRecvFinishedResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarkRecvFinishedResponse) Reset()         { *m = MarkRecvFinishedResponse{} }
func (m *MarkRecvFinishedResponse) String() string { return proto.CompactTextString(m) }
func (*MarkRecvFinishedResponse) ProtoMessage()    {}
func (*MarkRecvFinishedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{20}
}

func (m *MarkRecvFinishedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarkRecvFinishedResponse.Unmarshal(m, b)
}
func (m *MarkRecvFinishedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarkRecvFinishedResponse.Marshal(b, m, deterministic)
}
func (m *MarkRecvFinishedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarkRecvFinishedResponse.Merge(m, src)
}
func (m *MarkRecvFinishedResponse) XXX_Size() int {
	return xxx_messageInfo_MarkRecvFinishedResponse.Size(m)
}
func (m *MarkRecvFinishedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MarkRecvFinishedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MarkRecvFinishedResponse proto.InternalMessageInfo

// Out-of-band request to begin or end logging, or
// to retrieve logs for particular steps.
type LoggingRequest struct {
	// If true, RPC logging will be enabled.
	EnableRpcLogging bool `protobuf:"varint,1,opt,name=enable_rpc_logging,json=enableRpcLogging,proto3" json:"enable_rpc_logging,omitempty"`
	// If true, RPC logging will be disabled.
	DisableRpcLogging bool `protobuf:"varint,4,opt,name=disable_rpc_logging,json=disableRpcLogging,proto3" json:"disable_rpc_logging,omitempty"`
	// If true, discard any saved logging data (for all steps).
	Clear bool `protobuf:"varint,2,opt,name=clear,proto3" json:"clear,omitempty"`
	// When set, requests all saved log data pertaining to the step.
	// Any log data retrieved is eliminated from the store and cannot be
	// retrieved again.
	FetchStepId          []int64  `protobuf:"varint,3,rep,packed,name=fetch_step_id,json=fetchStepId,proto3" json:"fetch_step_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoggingRequest) Reset()         { *m = LoggingRequest{} }
func (m *LoggingRequest) String() string { return proto.CompactTextString(m) }
func (*LoggingRequest) ProtoMessage()    {}
func (*LoggingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{21}
}

func (m *LoggingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoggingRequest.Unmarshal(m, b)
}
func (m *LoggingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoggingRequest.Marshal(b, m, deterministic)
}
func (m *LoggingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoggingRequest.Merge(m, src)
}
func (m *LoggingRequest) XXX_Size() int {
	return xxx_messageInfo_LoggingRequest.Size(m)
}
func (m *LoggingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoggingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoggingRequest proto.InternalMessageInfo

func (m *LoggingRequest) GetEnableRpcLogging() bool {
	if m != nil {
		return m.EnableRpcLogging
	}
	return false
}

func (m *LoggingRequest) GetDisableRpcLogging() bool {
	if m != nil {
		return m.DisableRpcLogging
	}
	return false
}

func (m *LoggingRequest) GetClear() bool {
	if m != nil {
		return m.Clear
	}
	return false
}

func (m *LoggingRequest) GetFetchStepId() []int64 {
	if m != nil {
		return m.FetchStepId
	}
	return nil
}

type LabeledStepStats struct {
	StepId               int64                `protobuf:"varint,1,opt,name=step_id,json=stepId,proto3" json:"step_id,omitempty"`
	StepStats            *framework.StepStats `protobuf:"bytes,2,opt,name=step_stats,json=stepStats,proto3" json:"step_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LabeledStepStats) Reset()         { *m = LabeledStepStats{} }
func (m *LabeledStepStats) String() string { return proto.CompactTextString(m) }
func (*LabeledStepStats) ProtoMessage()    {}
func (*LabeledStepStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{22}
}

func (m *LabeledStepStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabeledStepStats.Unmarshal(m, b)
}
func (m *LabeledStepStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabeledStepStats.Marshal(b, m, deterministic)
}
func (m *LabeledStepStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabeledStepStats.Merge(m, src)
}
func (m *LabeledStepStats) XXX_Size() int {
	return xxx_messageInfo_LabeledStepStats.Size(m)
}
func (m *LabeledStepStats) XXX_DiscardUnknown() {
	xxx_messageInfo_LabeledStepStats.DiscardUnknown(m)
}

var xxx_messageInfo_LabeledStepStats proto.InternalMessageInfo

func (m *LabeledStepStats) GetStepId() int64 {
	if m != nil {
		return m.StepId
	}
	return 0
}

func (m *LabeledStepStats) GetStepStats() *framework.StepStats {
	if m != nil {
		return m.StepStats
	}
	return nil
}

type LoggingResponse struct {
	Step                 []*LabeledStepStats `protobuf:"bytes,1,rep,name=step,proto3" json:"step,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *LoggingResponse) Reset()         { *m = LoggingResponse{} }
func (m *LoggingResponse) String() string { return proto.CompactTextString(m) }
func (*LoggingResponse) ProtoMessage()    {}
func (*LoggingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{23}
}

func (m *LoggingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoggingResponse.Unmarshal(m, b)
}
func (m *LoggingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoggingResponse.Marshal(b, m, deterministic)
}
func (m *LoggingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoggingResponse.Merge(m, src)
}
func (m *LoggingResponse) XXX_Size() int {
	return xxx_messageInfo_LoggingResponse.Size(m)
}
func (m *LoggingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoggingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoggingResponse proto.InternalMessageInfo

func (m *LoggingResponse) GetStep() []*LabeledStepStats {
	if m != nil {
		return m.Step
	}
	return nil
}

type TraceOpts struct {
	// Length of the trace to be taken, in seconds.
	Duration float64 `protobuf:"fixed64,1,opt,name=duration,proto3" json:"duration,omitempty"`
	// If true, capture step profile locally in each worker. Currently
	// unimplemented.
	UseStepProfiler bool `protobuf:"varint,2,opt,name=use_step_profiler,json=useStepProfiler,proto3" json:"use_step_profiler,omitempty"`
	// If true, capture kernel events from each worker.
	UseKernelProfiler bool `protobuf:"varint,3,opt,name=use_kernel_profiler,json=useKernelProfiler,proto3" json:"use_kernel_profiler,omitempty"`
	// If true, capture extended profiling events from TensorFlow process.
	UseExtendedProfiler bool `protobuf:"varint,4,opt,name=use_extended_profiler,json=useExtendedProfiler,proto3" json:"use_extended_profiler,omitempty"`
	// If true, capture GPU profiling events locally on each
	// machine. Currently unimplemented.
	UseGpuProfiler bool `protobuf:"varint,5,opt,name=use_gpu_profiler,json=useGpuProfiler,proto3" json:"use_gpu_profiler,omitempty"`
	// If true, collect sampled profile events. Currently unimplemented.
	UseSampleProfiler    bool     `protobuf:"varint,6,opt,name=use_sample_profiler,json=useSampleProfiler,proto3" json:"use_sample_profiler,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraceOpts) Reset()         { *m = TraceOpts{} }
func (m *TraceOpts) String() string { return proto.CompactTextString(m) }
func (*TraceOpts) ProtoMessage()    {}
func (*TraceOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{24}
}

func (m *TraceOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceOpts.Unmarshal(m, b)
}
func (m *TraceOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceOpts.Marshal(b, m, deterministic)
}
func (m *TraceOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceOpts.Merge(m, src)
}
func (m *TraceOpts) XXX_Size() int {
	return xxx_messageInfo_TraceOpts.Size(m)
}
func (m *TraceOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceOpts.DiscardUnknown(m)
}

var xxx_messageInfo_TraceOpts proto.InternalMessageInfo

func (m *TraceOpts) GetDuration() float64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *TraceOpts) GetUseStepProfiler() bool {
	if m != nil {
		return m.UseStepProfiler
	}
	return false
}

func (m *TraceOpts) GetUseKernelProfiler() bool {
	if m != nil {
		return m.UseKernelProfiler
	}
	return false
}

func (m *TraceOpts) GetUseExtendedProfiler() bool {
	if m != nil {
		return m.UseExtendedProfiler
	}
	return false
}

func (m *TraceOpts) GetUseGpuProfiler() bool {
	if m != nil {
		return m.UseGpuProfiler
	}
	return false
}

func (m *TraceOpts) GetUseSampleProfiler() bool {
	if m != nil {
		return m.UseSampleProfiler
	}
	return false
}

// Out-of-band request to configure distributed tracing.
type TracingRequest struct {
	Options              *TraceOpts `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TracingRequest) Reset()         { *m = TracingRequest{} }
func (m *TracingRequest) String() string { return proto.CompactTextString(m) }
func (*TracingRequest) ProtoMessage()    {}
func (*TracingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{25}
}

func (m *TracingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TracingRequest.Unmarshal(m, b)
}
func (m *TracingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TracingRequest.Marshal(b, m, deterministic)
}
func (m *TracingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TracingRequest.Merge(m, src)
}
func (m *TracingRequest) XXX_Size() int {
	return xxx_messageInfo_TracingRequest.Size(m)
}
func (m *TracingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TracingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TracingRequest proto.InternalMessageInfo

func (m *TracingRequest) GetOptions() *TraceOpts {
	if m != nil {
		return m.Options
	}
	return nil
}

type TracingResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TracingResponse) Reset()         { *m = TracingResponse{} }
func (m *TracingResponse) String() string { return proto.CompactTextString(m) }
func (*TracingResponse) ProtoMessage()    {}
func (*TracingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{26}
}

func (m *TracingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TracingResponse.Unmarshal(m, b)
}
func (m *TracingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TracingResponse.Marshal(b, m, deterministic)
}
func (m *TracingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TracingResponse.Merge(m, src)
}
func (m *TracingResponse) XXX_Size() int {
	return xxx_messageInfo_TracingResponse.Size(m)
}
func (m *TracingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TracingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TracingResponse proto.InternalMessageInfo

type RecvBufRequest struct {
	// Used at server side to find the correct BufRendezvous.
	StepId int64 `protobuf:"varint,1,opt,name=step_id,json=stepId,proto3" json:"step_id,omitempty"`
	// Arbitrary string identifying a BufRendezvous entry.
	BufRendezvousKey string `protobuf:"bytes,2,opt,name=buf_rendezvous_key,json=bufRendezvousKey,proto3" json:"buf_rendezvous_key,omitempty"`
	// Size of value expected, must agree with BufRendezvous entry.
	NumBytes int64 `protobuf:"varint,3,opt,name=num_bytes,json=numBytes,proto3" json:"num_bytes,omitempty"`
	// When RDMA is in use, address of destination field on client.
	BufPtr uint64 `protobuf:"fixed64,4,opt,name=buf_ptr,json=bufPtr,proto3" json:"buf_ptr,omitempty"`
	// Optional information on client-side device locality.
	ClientLocality *framework.DeviceLocality `protobuf:"bytes,5,opt,name=client_locality,json=clientLocality,proto3" json:"client_locality,omitempty"`
	// Optional information on server-side device locality.
	ServerLocality *framework.DeviceLocality `protobuf:"bytes,6,opt,name=server_locality,json=serverLocality,proto3" json:"server_locality,omitempty"`
	// Optional, implementation-specific data.
	TransportOptions *any.Any `protobuf:"bytes,7,opt,name=transport_options,json=transportOptions,proto3" json:"transport_options,omitempty"`
	// For annotating timeline and device incarnation check.
	SrcDevice string `protobuf:"bytes,8,opt,name=src_device,json=srcDevice,proto3" json:"src_device,omitempty"`
	// Optional, for annotating the timeline.
	DstDevice string `protobuf:"bytes,9,opt,name=dst_device,json=dstDevice,proto3" json:"dst_device,omitempty"`
	// Depending on the RPC system in use, it may be necessary to set this
	// id to detect resends of RPCs where the server is not aware that
	// the prior RPC failed.
	RequestId int64 `protobuf:"varint,10,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Incarnation number of the source device, used to detect worker failures.
	SrcIncarnation       uint64   `protobuf:"varint,11,opt,name=src_incarnation,json=srcIncarnation,proto3" json:"src_incarnation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecvBufRequest) Reset()         { *m = RecvBufRequest{} }
func (m *RecvBufRequest) String() string { return proto.CompactTextString(m) }
func (*RecvBufRequest) ProtoMessage()    {}
func (*RecvBufRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{27}
}

func (m *RecvBufRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecvBufRequest.Unmarshal(m, b)
}
func (m *RecvBufRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecvBufRequest.Marshal(b, m, deterministic)
}
func (m *RecvBufRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecvBufRequest.Merge(m, src)
}
func (m *RecvBufRequest) XXX_Size() int {
	return xxx_messageInfo_RecvBufRequest.Size(m)
}
func (m *RecvBufRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecvBufRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecvBufRequest proto.InternalMessageInfo

func (m *RecvBufRequest) GetStepId() int64 {
	if m != nil {
		return m.StepId
	}
	return 0
}

func (m *RecvBufRequest) GetBufRendezvousKey() string {
	if m != nil {
		return m.BufRendezvousKey
	}
	return ""
}

func (m *RecvBufRequest) GetNumBytes() int64 {
	if m != nil {
		return m.NumBytes
	}
	return 0
}

func (m *RecvBufRequest) GetBufPtr() uint64 {
	if m != nil {
		return m.BufPtr
	}
	return 0
}

func (m *RecvBufRequest) GetClientLocality() *framework.DeviceLocality {
	if m != nil {
		return m.ClientLocality
	}
	return nil
}

func (m *RecvBufRequest) GetServerLocality() *framework.DeviceLocality {
	if m != nil {
		return m.ServerLocality
	}
	return nil
}

func (m *RecvBufRequest) GetTransportOptions() *any.Any {
	if m != nil {
		return m.TransportOptions
	}
	return nil
}

func (m *RecvBufRequest) GetSrcDevice() string {
	if m != nil {
		return m.SrcDevice
	}
	return ""
}

func (m *RecvBufRequest) GetDstDevice() string {
	if m != nil {
		return m.DstDevice
	}
	return ""
}

func (m *RecvBufRequest) GetRequestId() int64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *RecvBufRequest) GetSrcIncarnation() uint64 {
	if m != nil {
		return m.SrcIncarnation
	}
	return 0
}

type RecvBufResponse struct {
	BufPtr   uint64 `protobuf:"fixed64,1,opt,name=buf_ptr,json=bufPtr,proto3" json:"buf_ptr,omitempty"`
	NumBytes int64  `protobuf:"varint,2,opt,name=num_bytes,json=numBytes,proto3" json:"num_bytes,omitempty"`
	IsDead   bool   `protobuf:"varint,3,opt,name=is_dead,json=isDead,proto3" json:"is_dead,omitempty"`
	// Optional, implementation-specific data.
	TransportOptions *any.Any `protobuf:"bytes,4,opt,name=transport_options,json=transportOptions,proto3" json:"transport_options,omitempty"`
	// Optional, for timeline.
	SendStartMicros int64 `protobuf:"varint,5,opt,name=send_start_micros,json=sendStartMicros,proto3" json:"send_start_micros,omitempty"`
	// Whether the receiver should send a MarkRecvFinishedRequest to the sender
	// to ack the message.
	RequireAck           bool     `protobuf:"varint,6,opt,name=require_ack,json=requireAck,proto3" json:"require_ack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecvBufResponse) Reset()         { *m = RecvBufResponse{} }
func (m *RecvBufResponse) String() string { return proto.CompactTextString(m) }
func (*RecvBufResponse) ProtoMessage()    {}
func (*RecvBufResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{28}
}

func (m *RecvBufResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecvBufResponse.Unmarshal(m, b)
}
func (m *RecvBufResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecvBufResponse.Marshal(b, m, deterministic)
}
func (m *RecvBufResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecvBufResponse.Merge(m, src)
}
func (m *RecvBufResponse) XXX_Size() int {
	return xxx_messageInfo_RecvBufResponse.Size(m)
}
func (m *RecvBufResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecvBufResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecvBufResponse proto.InternalMessageInfo

func (m *RecvBufResponse) GetBufPtr() uint64 {
	if m != nil {
		return m.BufPtr
	}
	return 0
}

func (m *RecvBufResponse) GetNumBytes() int64 {
	if m != nil {
		return m.NumBytes
	}
	return 0
}

func (m *RecvBufResponse) GetIsDead() bool {
	if m != nil {
		return m.IsDead
	}
	return false
}

func (m *RecvBufResponse) GetTransportOptions() *any.Any {
	if m != nil {
		return m.TransportOptions
	}
	return nil
}

func (m *RecvBufResponse) GetSendStartMicros() int64 {
	if m != nil {
		return m.SendStartMicros
	}
	return 0
}

func (m *RecvBufResponse) GetRequireAck() bool {
	if m != nil {
		return m.RequireAck
	}
	return false
}

// Supplies one or more device names as members of the group identified by
// group_key.  Service will respond when all group_size devices become known.
// All devices in group must have same type.
type CompleteGroupRequest struct {
	GroupKey             int32    `protobuf:"varint,1,opt,name=group_key,json=groupKey,proto3" json:"group_key,omitempty"`
	GroupSize            int32    `protobuf:"varint,2,opt,name=group_size,json=groupSize,proto3" json:"group_size,omitempty"`
	DeviceType           string   `protobuf:"bytes,3,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	DeviceName           []string `protobuf:"bytes,4,rep,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	CollectiveType       int32    `protobuf:"varint,5,opt,name=collective_type,json=collectiveType,proto3" json:"collective_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompleteGroupRequest) Reset()         { *m = CompleteGroupRequest{} }
func (m *CompleteGroupRequest) String() string { return proto.CompactTextString(m) }
func (*CompleteGroupRequest) ProtoMessage()    {}
func (*CompleteGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{29}
}

func (m *CompleteGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteGroupRequest.Unmarshal(m, b)
}
func (m *CompleteGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteGroupRequest.Marshal(b, m, deterministic)
}
func (m *CompleteGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteGroupRequest.Merge(m, src)
}
func (m *CompleteGroupRequest) XXX_Size() int {
	return xxx_messageInfo_CompleteGroupRequest.Size(m)
}
func (m *CompleteGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteGroupRequest proto.InternalMessageInfo

func (m *CompleteGroupRequest) GetGroupKey() int32 {
	if m != nil {
		return m.GroupKey
	}
	return 0
}

func (m *CompleteGroupRequest) GetGroupSize() int32 {
	if m != nil {
		return m.GroupSize
	}
	return 0
}

func (m *CompleteGroupRequest) GetDeviceType() string {
	if m != nil {
		return m.DeviceType
	}
	return ""
}

func (m *CompleteGroupRequest) GetDeviceName() []string {
	if m != nil {
		return m.DeviceName
	}
	return nil
}

func (m *CompleteGroupRequest) GetCollectiveType() int32 {
	if m != nil {
		return m.CollectiveType
	}
	return 0
}

// Gives the complete membership of the group identified by group_key.
type CompleteGroupResponse struct {
	GroupKey             int32    `protobuf:"varint,1,opt,name=group_key,json=groupKey,proto3" json:"group_key,omitempty"`
	GroupSize            int32    `protobuf:"varint,2,opt,name=group_size,json=groupSize,proto3" json:"group_size,omitempty"`
	DeviceType           string   `protobuf:"bytes,3,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	NumTasks             int32    `protobuf:"varint,4,opt,name=num_tasks,json=numTasks,proto3" json:"num_tasks,omitempty"`
	DeviceName           []string `protobuf:"bytes,5,rep,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	TaskName             []string `protobuf:"bytes,6,rep,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	CommunicatorKey      []byte   `protobuf:"bytes,7,opt,name=communicator_key,json=communicatorKey,proto3" json:"communicator_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompleteGroupResponse) Reset()         { *m = CompleteGroupResponse{} }
func (m *CompleteGroupResponse) String() string { return proto.CompactTextString(m) }
func (*CompleteGroupResponse) ProtoMessage()    {}
func (*CompleteGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{30}
}

func (m *CompleteGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteGroupResponse.Unmarshal(m, b)
}
func (m *CompleteGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteGroupResponse.Marshal(b, m, deterministic)
}
func (m *CompleteGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteGroupResponse.Merge(m, src)
}
func (m *CompleteGroupResponse) XXX_Size() int {
	return xxx_messageInfo_CompleteGroupResponse.Size(m)
}
func (m *CompleteGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteGroupResponse proto.InternalMessageInfo

func (m *CompleteGroupResponse) GetGroupKey() int32 {
	if m != nil {
		return m.GroupKey
	}
	return 0
}

func (m *CompleteGroupResponse) GetGroupSize() int32 {
	if m != nil {
		return m.GroupSize
	}
	return 0
}

func (m *CompleteGroupResponse) GetDeviceType() string {
	if m != nil {
		return m.DeviceType
	}
	return ""
}

func (m *CompleteGroupResponse) GetNumTasks() int32 {
	if m != nil {
		return m.NumTasks
	}
	return 0
}

func (m *CompleteGroupResponse) GetDeviceName() []string {
	if m != nil {
		return m.DeviceName
	}
	return nil
}

func (m *CompleteGroupResponse) GetTaskName() []string {
	if m != nil {
		return m.TaskName
	}
	return nil
}

func (m *CompleteGroupResponse) GetCommunicatorKey() []byte {
	if m != nil {
		return m.CommunicatorKey
	}
	return nil
}

// Supplies data about one collective op belonging to the instance identified
// by instance_key.  Service will respond when all group_size ops have
// become known.  Most of the data being sent is for correctness checking,
// to ensure that all ops in the instance share common attributes.
type CompleteInstanceRequest struct {
	Name                 string                      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 int32                       `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	DataType             framework.DataType          `protobuf:"varint,3,opt,name=data_type,json=dataType,proto3,enum=tensorflow.DataType" json:"data_type,omitempty"`
	Shape                *framework.TensorShapeProto `protobuf:"bytes,4,opt,name=shape,proto3" json:"shape,omitempty"`
	GroupKey             int32                       `protobuf:"varint,5,opt,name=group_key,json=groupKey,proto3" json:"group_key,omitempty"`
	GroupSize            int32                       `protobuf:"varint,6,opt,name=group_size,json=groupSize,proto3" json:"group_size,omitempty"`
	InstanceKey          int32                       `protobuf:"varint,7,opt,name=instance_key,json=instanceKey,proto3" json:"instance_key,omitempty"`
	DeviceType           string                      `protobuf:"bytes,8,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	SubdivOffset         []int32                     `protobuf:"varint,9,rep,packed,name=subdiv_offset,json=subdivOffset,proto3" json:"subdiv_offset,omitempty"`
	Device               string                      `protobuf:"bytes,10,opt,name=device,proto3" json:"device,omitempty"`
	IsSource             bool                        `protobuf:"varint,11,opt,name=is_source,json=isSource,proto3" json:"is_source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CompleteInstanceRequest) Reset()         { *m = CompleteInstanceRequest{} }
func (m *CompleteInstanceRequest) String() string { return proto.CompactTextString(m) }
func (*CompleteInstanceRequest) ProtoMessage()    {}
func (*CompleteInstanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{31}
}

func (m *CompleteInstanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteInstanceRequest.Unmarshal(m, b)
}
func (m *CompleteInstanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteInstanceRequest.Marshal(b, m, deterministic)
}
func (m *CompleteInstanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteInstanceRequest.Merge(m, src)
}
func (m *CompleteInstanceRequest) XXX_Size() int {
	return xxx_messageInfo_CompleteInstanceRequest.Size(m)
}
func (m *CompleteInstanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteInstanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteInstanceRequest proto.InternalMessageInfo

func (m *CompleteInstanceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CompleteInstanceRequest) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *CompleteInstanceRequest) GetDataType() framework.DataType {
	if m != nil {
		return m.DataType
	}
	return framework.DataType_DT_INVALID
}

func (m *CompleteInstanceRequest) GetShape() *framework.TensorShapeProto {
	if m != nil {
		return m.Shape
	}
	return nil
}

func (m *CompleteInstanceRequest) GetGroupKey() int32 {
	if m != nil {
		return m.GroupKey
	}
	return 0
}

func (m *CompleteInstanceRequest) GetGroupSize() int32 {
	if m != nil {
		return m.GroupSize
	}
	return 0
}

func (m *CompleteInstanceRequest) GetInstanceKey() int32 {
	if m != nil {
		return m.InstanceKey
	}
	return 0
}

func (m *CompleteInstanceRequest) GetDeviceType() string {
	if m != nil {
		return m.DeviceType
	}
	return ""
}

func (m *CompleteInstanceRequest) GetSubdivOffset() []int32 {
	if m != nil {
		return m.SubdivOffset
	}
	return nil
}

func (m *CompleteInstanceRequest) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *CompleteInstanceRequest) GetIsSource() bool {
	if m != nil {
		return m.IsSource
	}
	return false
}

// Confirms that every op in the instance has consistently declared itself.
// Also gives the source_rank in case of broadcast.
type CompleteInstanceResponse struct {
	InstanceKey          int32    `protobuf:"varint,1,opt,name=instance_key,json=instanceKey,proto3" json:"instance_key,omitempty"`
	SourceRank           int32    `protobuf:"varint,2,opt,name=source_rank,json=sourceRank,proto3" json:"source_rank,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompleteInstanceResponse) Reset()         { *m = CompleteInstanceResponse{} }
func (m *CompleteInstanceResponse) String() string { return proto.CompactTextString(m) }
func (*CompleteInstanceResponse) ProtoMessage()    {}
func (*CompleteInstanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{32}
}

func (m *CompleteInstanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteInstanceResponse.Unmarshal(m, b)
}
func (m *CompleteInstanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteInstanceResponse.Marshal(b, m, deterministic)
}
func (m *CompleteInstanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteInstanceResponse.Merge(m, src)
}
func (m *CompleteInstanceResponse) XXX_Size() int {
	return xxx_messageInfo_CompleteInstanceResponse.Size(m)
}
func (m *CompleteInstanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteInstanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteInstanceResponse proto.InternalMessageInfo

func (m *CompleteInstanceResponse) GetInstanceKey() int32 {
	if m != nil {
		return m.InstanceKey
	}
	return 0
}

func (m *CompleteInstanceResponse) GetSourceRank() int32 {
	if m != nil {
		return m.SourceRank
	}
	return 0
}

// Request for next agreed-upon step_id for the specified graph_keys.
// This is used to enable multiple graphs containing nodes from
// a common collective instance to coordinate using the same step_ids.
type GetStepSequenceRequest struct {
	GraphKey             []int64  `protobuf:"varint,1,rep,packed,name=graph_key,json=graphKey,proto3" json:"graph_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStepSequenceRequest) Reset()         { *m = GetStepSequenceRequest{} }
func (m *GetStepSequenceRequest) String() string { return proto.CompactTextString(m) }
func (*GetStepSequenceRequest) ProtoMessage()    {}
func (*GetStepSequenceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{33}
}

func (m *GetStepSequenceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStepSequenceRequest.Unmarshal(m, b)
}
func (m *GetStepSequenceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStepSequenceRequest.Marshal(b, m, deterministic)
}
func (m *GetStepSequenceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStepSequenceRequest.Merge(m, src)
}
func (m *GetStepSequenceRequest) XXX_Size() int {
	return xxx_messageInfo_GetStepSequenceRequest.Size(m)
}
func (m *GetStepSequenceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStepSequenceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStepSequenceRequest proto.InternalMessageInfo

func (m *GetStepSequenceRequest) GetGraphKey() []int64 {
	if m != nil {
		return m.GraphKey
	}
	return nil
}

type StepSequence struct {
	GraphKey             int64    `protobuf:"varint,1,opt,name=graph_key,json=graphKey,proto3" json:"graph_key,omitempty"`
	NextStepId           int64    `protobuf:"varint,2,opt,name=next_step_id,json=nextStepId,proto3" json:"next_step_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StepSequence) Reset()         { *m = StepSequence{} }
func (m *StepSequence) String() string { return proto.CompactTextString(m) }
func (*StepSequence) ProtoMessage()    {}
func (*StepSequence) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{34}
}

func (m *StepSequence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StepSequence.Unmarshal(m, b)
}
func (m *StepSequence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StepSequence.Marshal(b, m, deterministic)
}
func (m *StepSequence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StepSequence.Merge(m, src)
}
func (m *StepSequence) XXX_Size() int {
	return xxx_messageInfo_StepSequence.Size(m)
}
func (m *StepSequence) XXX_DiscardUnknown() {
	xxx_messageInfo_StepSequence.DiscardUnknown(m)
}

var xxx_messageInfo_StepSequence proto.InternalMessageInfo

func (m *StepSequence) GetGraphKey() int64 {
	if m != nil {
		return m.GraphKey
	}
	return 0
}

func (m *StepSequence) GetNextStepId() int64 {
	if m != nil {
		return m.NextStepId
	}
	return 0
}

// Next valid step_ids for one or more graph_keys.
type GetStepSequenceResponse struct {
	StepSequence         []*StepSequence `protobuf:"bytes,1,rep,name=step_sequence,json=stepSequence,proto3" json:"step_sequence,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetStepSequenceResponse) Reset()         { *m = GetStepSequenceResponse{} }
func (m *GetStepSequenceResponse) String() string { return proto.CompactTextString(m) }
func (*GetStepSequenceResponse) ProtoMessage()    {}
func (*GetStepSequenceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f24b6dc95cbd078c, []int{35}
}

func (m *GetStepSequenceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStepSequenceResponse.Unmarshal(m, b)
}
func (m *GetStepSequenceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStepSequenceResponse.Marshal(b, m, deterministic)
}
func (m *GetStepSequenceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStepSequenceResponse.Merge(m, src)
}
func (m *GetStepSequenceResponse) XXX_Size() int {
	return xxx_messageInfo_GetStepSequenceResponse.Size(m)
}
func (m *GetStepSequenceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStepSequenceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetStepSequenceResponse proto.InternalMessageInfo

func (m *GetStepSequenceResponse) GetStepSequence() []*StepSequence {
	if m != nil {
		return m.StepSequence
	}
	return nil
}

func init() {
	proto.RegisterType((*GetStatusRequest)(nil), "tensorflow.GetStatusRequest")
	proto.RegisterType((*GetStatusResponse)(nil), "tensorflow.GetStatusResponse")
	proto.RegisterType((*CreateWorkerSessionRequest)(nil), "tensorflow.CreateWorkerSessionRequest")
	proto.RegisterType((*CreateWorkerSessionResponse)(nil), "tensorflow.CreateWorkerSessionResponse")
	proto.RegisterType((*DeleteWorkerSessionRequest)(nil), "tensorflow.DeleteWorkerSessionRequest")
	proto.RegisterType((*DeleteWorkerSessionResponse)(nil), "tensorflow.DeleteWorkerSessionResponse")
	proto.RegisterType((*RegisterGraphRequest)(nil), "tensorflow.RegisterGraphRequest")
	proto.RegisterType((*RegisterGraphResponse)(nil), "tensorflow.RegisterGraphResponse")
	proto.RegisterType((*DeregisterGraphRequest)(nil), "tensorflow.DeregisterGraphRequest")
	proto.RegisterType((*DeregisterGraphResponse)(nil), "tensorflow.DeregisterGraphResponse")
	proto.RegisterType((*CleanupAllRequest)(nil), "tensorflow.CleanupAllRequest")
	proto.RegisterType((*CleanupAllResponse)(nil), "tensorflow.CleanupAllResponse")
	proto.RegisterType((*ExecutorOpts)(nil), "tensorflow.ExecutorOpts")
	proto.RegisterType((*RunGraphRequest)(nil), "tensorflow.RunGraphRequest")
	proto.RegisterType((*RunGraphResponse)(nil), "tensorflow.RunGraphResponse")
	proto.RegisterType((*CleanupGraphRequest)(nil), "tensorflow.CleanupGraphRequest")
	proto.RegisterType((*CleanupGraphResponse)(nil), "tensorflow.CleanupGraphResponse")
	proto.RegisterType((*RecvTensorRequest)(nil), "tensorflow.RecvTensorRequest")
	proto.RegisterType((*RecvTensorResponse)(nil), "tensorflow.RecvTensorResponse")
	proto.RegisterType((*MarkRecvFinishedRequest)(nil), "tensorflow.MarkRecvFinishedRequest")
	proto.RegisterType((*MarkRecvFinishedResponse)(nil), "tensorflow.MarkRecvFinishedResponse")
	proto.RegisterType((*LoggingRequest)(nil), "tensorflow.LoggingRequest")
	proto.RegisterType((*LabeledStepStats)(nil), "tensorflow.LabeledStepStats")
	proto.RegisterType((*LoggingResponse)(nil), "tensorflow.LoggingResponse")
	proto.RegisterType((*TraceOpts)(nil), "tensorflow.TraceOpts")
	proto.RegisterType((*TracingRequest)(nil), "tensorflow.TracingRequest")
	proto.RegisterType((*TracingResponse)(nil), "tensorflow.TracingResponse")
	proto.RegisterType((*RecvBufRequest)(nil), "tensorflow.RecvBufRequest")
	proto.RegisterType((*RecvBufResponse)(nil), "tensorflow.RecvBufResponse")
	proto.RegisterType((*CompleteGroupRequest)(nil), "tensorflow.CompleteGroupRequest")
	proto.RegisterType((*CompleteGroupResponse)(nil), "tensorflow.CompleteGroupResponse")
	proto.RegisterType((*CompleteInstanceRequest)(nil), "tensorflow.CompleteInstanceRequest")
	proto.RegisterType((*CompleteInstanceResponse)(nil), "tensorflow.CompleteInstanceResponse")
	proto.RegisterType((*GetStepSequenceRequest)(nil), "tensorflow.GetStepSequenceRequest")
	proto.RegisterType((*StepSequence)(nil), "tensorflow.StepSequence")
	proto.RegisterType((*GetStepSequenceResponse)(nil), "tensorflow.GetStepSequenceResponse")
}

func init() {
	proto.RegisterFile("tensorflow/core/protobuf/worker.proto", fileDescriptor_f24b6dc95cbd078c)
}

var fileDescriptor_f24b6dc95cbd078c = []byte{
	// 2214 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0x4f, 0x73, 0x1b, 0x4b,
	0x11, 0xaf, 0xb5, 0x2c, 0x59, 0x6a, 0x3b, 0xb2, 0xbc, 0xb1, 0x63, 0xc5, 0x49, 0xc0, 0x6f, 0x21,
	0x60, 0x1e, 0xc1, 0x4e, 0x0c, 0x8f, 0x47, 0x51, 0xa4, 0xc0, 0x7f, 0xf2, 0x82, 0x5f, 0x12, 0xe2,
	0x1a, 0x9b, 0xe2, 0x15, 0x07, 0xb6, 0x46, 0xbb, 0x23, 0x79, 0x4b, 0xab, 0x9d, 0x65, 0x66, 0xd6,
	0x89, 0x72, 0xe4, 0xc2, 0x91, 0xe2, 0x33, 0x70, 0xe1, 0x4b, 0xf0, 0x35, 0xb8, 0x41, 0x71, 0xe4,
	0x44, 0x71, 0xa4, 0x38, 0x51, 0x3d, 0x33, 0xbb, 0x5a, 0x69, 0xe5, 0xe7, 0x24, 0x2f, 0xdc, 0x76,
	0xba, 0x7f, 0xd3, 0xd3, 0xd3, 0xbf, 0xee, 0x9e, 0x99, 0x85, 0xfb, 0x8a, 0x25, 0x92, 0x8b, 0x7e,
	0xcc, 0x5f, 0xed, 0x05, 0x5c, 0xb0, 0xbd, 0x54, 0x70, 0xc5, 0x7b, 0x59, 0x7f, 0xef, 0x15, 0x17,
	0x43, 0x26, 0x76, 0xf5, 0xd8, 0x85, 0x09, 0x6c, 0xeb, 0xf6, 0x80, 0xf3, 0x41, 0x5c, 0x42, 0xd2,
	0x64, 0x6c, 0x60, 0x5b, 0x1f, 0xcf, 0x5a, 0xeb, 0x0b, 0x3a, 0x62, 0x68, 0x69, 0x2f, 0xe0, 0x52,
	0xf9, 0x03, 0x41, 0xd3, 0x0b, 0x8b, 0x7d, 0x74, 0x35, 0x36, 0x64, 0x97, 0x51, 0xc0, 0x7c, 0xaa,
	0x94, 0x88, 0x7a, 0x99, 0x62, 0xd2, 0x4e, 0xb9, 0x7f, 0xf5, 0x94, 0xb2, 0xe5, 0x2f, 0xf1, 0x42,
	0x2a, 0x96, 0xfa, 0x52, 0x51, 0x95, 0x9b, 0xfc, 0xd6, 0xd5, 0x58, 0xa3, 0xb1, 0xb8, 0x07, 0xd7,
	0xe1, 0x7c, 0x79, 0x41, 0x53, 0x76, 0xbd, 0xa3, 0x6a, 0x9c, 0x16, 0xfb, 0xa9, 0x38, 0x1a, 0x47,
	0x3d, 0xf3, 0xc1, 0x84, 0xe0, 0xc2, 0x0f, 0x78, 0x78, 0xf5, 0xde, 0x8b, 0xf0, 0x07, 0x3c, 0xe9,
	0x47, 0x03, 0x0b, 0xfb, 0xe6, 0x95, 0xb0, 0x90, 0xf5, 0xb2, 0x1c, 0xf5, 0xdd, 0x2b, 0x51, 0x09,
	0x1d, 0xb1, 0xd0, 0x9f, 0xda, 0xfa, 0xc3, 0x2b, 0xc1, 0x13, 0x85, 0x2f, 0x99, 0xb8, 0xcc, 0xb3,
	0xc5, 0x73, 0xa1, 0xf3, 0x94, 0xa9, 0x33, 0x45, 0x55, 0x26, 0x09, 0xfb, 0x6d, 0xc6, 0xa4, 0xf2,
	0x7e, 0x03, 0x6b, 0x25, 0x99, 0x4c, 0x79, 0x22, 0x99, 0x7b, 0x02, 0x6b, 0x15, 0xae, 0xbb, 0xce,
	0x76, 0x6d, 0x67, 0x79, 0xff, 0xee, 0xee, 0xc4, 0xfa, 0xee, 0xb1, 0x06, 0x1d, 0x14, 0x18, 0xd2,
	0x09, 0x67, 0x24, 0xde, 0xef, 0x17, 0x60, 0xeb, 0x48, 0x30, 0xaa, 0xd8, 0xaf, 0x74, 0xe2, 0x9e,
	0x31, 0x29, 0x23, 0x9e, 0xd8, 0xe5, 0xdd, 0xfb, 0xd0, 0x96, 0x46, 0xe2, 0x5f, 0xd0, 0x24, 0x8c,
	0x59, 0xd7, 0xd9, 0x76, 0x76, 0x5a, 0xe4, 0x86, 0x95, 0xfe, 0x5c, 0x0b, 0xdd, 0x1f, 0x00, 0x98,
	0x9d, 0xf8, 0x21, 0xeb, 0x77, 0x17, 0xb6, 0x9d, 0x9d, 0xe5, 0xfd, 0x8d, 0xb2, 0x27, 0x67, 0x5a,
	0x7b, 0xcc, 0xfa, 0xa4, 0x25, 0xf3, 0x4f, 0x77, 0x1f, 0x36, 0x22, 0xc9, 0x63, 0xaa, 0x98, 0x9f,
	0x2f, 0x82, 0x39, 0xc6, 0xba, 0xb5, 0x6d, 0x67, 0xa7, 0x49, 0x6e, 0x5a, 0xa5, 0x75, 0x09, 0x63,
	0xc0, 0xdc, 0x2f, 0xe0, 0x76, 0x10, 0x67, 0x52, 0xe9, 0xa5, 0x66, 0x43, 0xb0, 0xf8, 0x16, 0x21,
	0xd8, 0xb4, 0xd3, 0x67, 0x15, 0xde, 0x3d, 0xb8, 0x33, 0x37, 0x10, 0x26, 0xe6, 0xde, 0x11, 0x6c,
	0x1d, 0xb3, 0x98, 0x7d, 0xa5, 0x38, 0xe1, 0x1a, 0x73, 0x8d, 0xd8, 0x35, 0xfe, 0x50, 0x83, 0x75,
	0xc2, 0x06, 0x11, 0xfa, 0xf7, 0x14, 0x2b, 0xf3, 0x1d, 0x69, 0xf8, 0x29, 0xdc, 0x0d, 0xf4, 0x16,
	0x7c, 0xd3, 0x85, 0x8a, 0xb0, 0x06, 0x34, 0x8e, 0x59, 0xd8, 0x6d, 0xe8, 0xb8, 0xde, 0x0e, 0xaa,
	0xdb, 0x3c, 0xd2, 0x00, 0xf7, 0x11, 0xb4, 0x74, 0x47, 0x28, 0xd1, 0xb8, 0x5e, 0x8e, 0xa6, 0x76,
	0x0a, 0x59, 0x6c, 0x0e, 0xec, 0x97, 0xfb, 0x00, 0x3a, 0x17, 0x54, 0xfa, 0x01, 0x4f, 0x94, 0xe0,
	0xb1, 0x8f, 0x30, 0xc3, 0xdf, 0xe1, 0x42, 0xd7, 0x21, 0xed, 0x0b, 0x2a, 0x8f, 0x8c, 0xea, 0xb3,
	0x98, 0xbf, 0x72, 0x1f, 0xc3, 0x0d, 0xb3, 0x00, 0x4f, 0x55, 0xc4, 0x13, 0xa4, 0x0c, 0x17, 0xe9,
	0x56, 0x16, 0x79, 0x69, 0xf4, 0x64, 0x65, 0x50, 0x1a, 0xe1, 0x74, 0x5d, 0x8f, 0xc5, 0xf4, 0x7a,
	0x75, 0xfa, 0x31, 0x02, 0x8a, 0xe9, 0x61, 0x69, 0xe4, 0x3e, 0x84, 0xf5, 0x80, 0xc7, 0x31, 0x0b,
	0x54, 0x74, 0xc9, 0x4c, 0x57, 0xf5, 0x87, 0x6c, 0xdc, 0x5d, 0xda, 0x76, 0x76, 0x6a, 0xc4, 0x9d,
	0xe8, 0xb4, 0x0b, 0xcf, 0xd8, 0xd8, 0xfb, 0x31, 0x6c, 0xcc, 0x10, 0x62, 0x4b, 0xf0, 0x23, 0x30,
	0x9e, 0x4d, 0xf3, 0xb1, 0xac, 0x65, 0x96, 0xec, 0x3f, 0x39, 0x70, 0xeb, 0x98, 0x89, 0xb7, 0xe3,
	0x73, 0xe1, 0x7d, 0xf8, 0xac, 0x5d, 0xc7, 0xe7, 0x5b, 0x78, 0x79, 0x1b, 0x36, 0x2b, 0x4e, 0xda,
	0x74, 0x7c, 0x04, 0x6b, 0x47, 0x31, 0xa3, 0x49, 0x96, 0x1e, 0xc4, 0x71, 0xee, 0xfa, 0x5d, 0x68,
	0x21, 0xd7, 0x34, 0x4a, 0x98, 0xd0, 0x3d, 0xa7, 0x45, 0x26, 0x02, 0x6f, 0x1d, 0xdc, 0xf2, 0x14,
	0x6b, 0xe8, 0xef, 0x0e, 0xac, 0x3c, 0x79, 0xcd, 0x82, 0x4c, 0x71, 0xf1, 0x32, 0x55, 0x12, 0xfd,
	0x12, 0x2c, 0xe0, 0x22, 0xf4, 0xf1, 0x7c, 0x93, 0xda, 0xaf, 0x26, 0x59, 0x36, 0xb2, 0x23, 0x14,
	0xb9, 0xdf, 0x86, 0x55, 0x0b, 0x51, 0xd1, 0x88, 0xc5, 0x51, 0x92, 0xb7, 0x85, 0xb6, 0x11, 0x9f,
	0x5b, 0xa9, 0xfb, 0x43, 0xd8, 0xb4, 0xc0, 0x94, 0x0a, 0x15, 0x21, 0xd3, 0x86, 0x5a, 0x93, 0x5c,
	0x4d, 0xb2, 0x61, 0xd4, 0xa7, 0xb9, 0x56, 0x6f, 0x52, 0xba, 0x9f, 0x83, 0x27, 0x58, 0xca, 0x85,
	0xb2, 0x6d, 0xdb, 0xa7, 0x71, 0xcc, 0x03, 0xaa, 0x33, 0xc5, 0xcf, 0x52, 0x9e, 0xf8, 0x9c, 0x8f,
	0x74, 0x82, 0x35, 0xc9, 0xd7, 0x0c, 0xf2, 0x5c, 0x03, 0x0f, 0x26, 0xb8, 0x5f, 0xa6, 0x3c, 0x79,
	0xc9, 0x47, 0xde, 0x3f, 0x6b, 0xb0, 0x4a, 0xb2, 0xe4, 0x1a, 0x8e, 0x9b, 0xef, 0xc3, 0x31, 0x7c,
	0x75, 0x8e, 0xdd, 0x4d, 0x58, 0xd2, 0x27, 0x78, 0x14, 0xea, 0x3c, 0xab, 0x91, 0x06, 0x0e, 0x4f,
	0x42, 0xf7, 0x13, 0x68, 0xb1, 0xd7, 0x2c, 0xc0, 0x72, 0x9a, 0x5b, 0x4b, 0x65, 0xd2, 0x48, 0x13,
	0xa1, 0x9a, 0xbe, 0x87, 0xb0, 0x28, 0x59, 0x82, 0xf9, 0x57, 0xe9, 0xb7, 0xbf, 0xc0, 0x83, 0xd0,
	0xc4, 0xe9, 0x14, 0x0f, 0x35, 0xa2, 0x91, 0xee, 0x6d, 0x68, 0x0a, 0x16, 0x5c, 0xea, 0x6a, 0x5b,
	0xd4, 0x49, 0xb3, 0x84, 0xe3, 0x67, 0x6c, 0xec, 0xde, 0x03, 0x88, 0xa4, 0xe1, 0x8e, 0xc6, 0xb6,
	0x45, 0xb5, 0x22, 0x79, 0x6a, 0x04, 0xee, 0xf7, 0xe0, 0x66, 0x24, 0xfd, 0x98, 0x4a, 0x95, 0x63,
	0x7c, 0x91, 0x25, 0xba, 0x64, 0x9b, 0xa4, 0x13, 0xc9, 0xe7, 0x54, 0x2a, 0x8b, 0x25, 0x59, 0xe2,
	0xfe, 0x0c, 0xee, 0x49, 0xc5, 0x05, 0xf3, 0xf5, 0x55, 0x40, 0xfa, 0x51, 0xe2, 0x0b, 0x9b, 0x86,
	0x7e, 0x8f, 0x87, 0xe3, 0x6e, 0xcb, 0xc4, 0x53, 0x83, 0x9e, 0x68, 0xcc, 0x49, 0xd1, 0x80, 0x0f,
	0x79, 0xa8, 0xfd, 0x11, 0x86, 0x42, 0x8c, 0xd7, 0xb2, 0x8e, 0x57, 0xcb, 0x4a, 0x4e, 0x42, 0xef,
	0x6f, 0x0b, 0xd0, 0x99, 0x50, 0x6d, 0xbb, 0xc1, 0x43, 0x58, 0xc4, 0xed, 0xcc, 0x3b, 0x83, 0xab,
	0x01, 0x41, 0xa4, 0x3e, 0x31, 0x8b, 0x4b, 0xd5, 0xdc, 0x13, 0x53, 0xb1, 0x14, 0x8f, 0x3c, 0x49,
	0x5a, 0x32, 0xff, 0x74, 0x3f, 0x05, 0x98, 0x5c, 0x08, 0x75, 0x3d, 0xcc, 0x10, 0x86, 0xb5, 0x53,
	0x34, 0xe9, 0x56, 0x90, 0x8f, 0xdc, 0xc7, 0xb0, 0x3a, 0x53, 0x1d, 0xf6, 0xb0, 0x9c, 0xdf, 0xde,
	0xdb, 0xe9, 0x54, 0xb1, 0xb8, 0x9f, 0xc2, 0xb2, 0xd4, 0x57, 0x10, 0x7d, 0xb7, 0xd2, 0x99, 0xd2,
	0xde, 0xbf, 0x55, 0x9e, 0xaa, 0xc3, 0xbd, 0x7b, 0xc4, 0x43, 0x46, 0xc0, 0x40, 0xf1, 0x1b, 0x3b,
	0xae, 0x9d, 0x68, 0xae, 0x66, 0x23, 0x26, 0x25, 0x1d, 0x30, 0x4d, 0x73, 0x8b, 0xb8, 0x46, 0xa7,
	0x69, 0x78, 0x61, 0x34, 0xde, 0x2e, 0xdc, 0xb4, 0x1d, 0x64, 0xaa, 0x9a, 0x4a, 0x29, 0xec, 0x94,
	0x53, 0xd8, 0xbb, 0x05, 0xeb, 0xd3, 0x78, 0xdb, 0x73, 0xfe, 0xba, 0x00, 0x6b, 0x84, 0x05, 0x97,
	0x26, 0xf4, 0xd7, 0x99, 0xc1, 0x6a, 0x15, 0x2c, 0x09, 0xd9, 0x9b, 0x4b, 0x9e, 0x49, 0x9d, 0xa6,
	0xb6, 0x23, 0x4f, 0xa4, 0x98, 0xac, 0x1b, 0xd0, 0x08, 0x47, 0xd4, 0xe7, 0x43, 0xdb, 0x8c, 0xea,
	0xe1, 0x88, 0xbe, 0x1c, 0xba, 0x47, 0xb0, 0x1a, 0xc4, 0x11, 0x4b, 0x94, 0x8f, 0xad, 0x21, 0x8e,
	0xd4, 0xd8, 0x1e, 0x6c, 0x5b, 0xd5, 0xbb, 0xc8, 0x73, 0x8b, 0x20, 0x6d, 0x33, 0x25, 0x1f, 0xa3,
	0x11, 0x7b, 0x89, 0x2a, 0x8c, 0xd4, 0xaf, 0x37, 0x62, 0xa6, 0x14, 0x46, 0x0e, 0x60, 0x4d, 0x09,
	0x9a, 0x48, 0xdd, 0xd8, 0xf2, 0x53, 0xb2, 0x61, 0x4f, 0x72, 0xf3, 0x02, 0xd9, 0xcd, 0x2f, 0xa2,
	0xbb, 0x07, 0xc9, 0x98, 0x74, 0x0a, 0x78, 0x7e, 0x4a, 0x4e, 0x17, 0xc0, 0xd2, 0x6c, 0x01, 0xfc,
	0xcb, 0x01, 0xb7, 0x1c, 0x58, 0x5b, 0x02, 0x7b, 0xd0, 0x30, 0x5e, 0xea, 0xc0, 0x2e, 0xef, 0x6f,
	0x96, 0x9d, 0x2e, 0xe7, 0xbf, 0x85, 0x21, 0x15, 0x91, 0xf4, 0x43, 0x46, 0x4d, 0x53, 0x6a, 0x92,
	0x46, 0x24, 0x8f, 0x19, 0x0d, 0xdd, 0x8f, 0x61, 0x0d, 0x7b, 0x06, 0x96, 0x86, 0x50, 0xfe, 0x28,
	0x0a, 0x04, 0x97, 0x3a, 0xdc, 0x35, 0xb2, 0x8a, 0x8a, 0x33, 0x94, 0xbf, 0xd0, 0xe2, 0xf9, 0xdb,
	0x5d, 0x7c, 0xa7, 0xed, 0x7e, 0x1d, 0x96, 0x71, 0x73, 0x91, 0x60, 0x3e, 0x0d, 0x86, 0xb6, 0xe1,
	0x83, 0x15, 0x1d, 0x04, 0x43, 0xef, 0x47, 0xb0, 0xf9, 0x82, 0x8a, 0x21, 0xee, 0xf9, 0xb3, 0x28,
	0x89, 0xe4, 0x05, 0x0b, 0xf3, 0x74, 0x9a, 0x0e, 0x95, 0x33, 0x1b, 0xaa, 0x2d, 0xe8, 0x56, 0x67,
	0xda, 0xfc, 0xfc, 0xb3, 0x03, 0xed, 0xe7, 0x7c, 0x30, 0x88, 0x92, 0x41, 0x6e, 0xed, 0x01, 0xb8,
	0x2c, 0xa1, 0xbd, 0x98, 0xf9, 0x22, 0x0d, 0xfc, 0xd8, 0x28, 0xed, 0xd9, 0xd8, 0x31, 0x1a, 0x92,
	0x06, 0x76, 0x92, 0xbb, 0x0b, 0x37, 0xc3, 0x48, 0x56, 0xe0, 0xe6, 0xcc, 0x5b, 0xb3, 0xaa, 0x12,
	0x7e, 0x1d, 0xea, 0x41, 0xcc, 0xa8, 0xb0, 0xd1, 0x36, 0x03, 0xd7, 0x83, 0x1b, 0x7d, 0xa6, 0x82,
	0x0b, 0x3f, 0x2f, 0x0b, 0xec, 0xe9, 0x35, 0xb2, 0xac, 0x85, 0x67, 0xa6, 0xc4, 0x28, 0x74, 0x9e,
	0xd3, 0x1e, 0x8b, 0x59, 0x58, 0x34, 0xa5, 0xab, 0x0b, 0xe9, 0xbd, 0x1a, 0x9b, 0x77, 0x04, 0xab,
	0x45, 0x30, 0x26, 0x3d, 0x15, 0xf5, 0xf3, 0x7a, 0xea, 0xac, 0x37, 0x44, 0x23, 0xbd, 0x3f, 0x2e,
	0x40, 0xeb, 0x5c, 0xd0, 0x80, 0xe9, 0x43, 0x6a, 0x0b, 0x9a, 0x61, 0x26, 0xf4, 0x39, 0xad, 0x5d,
	0x74, 0x48, 0x31, 0xc6, 0x14, 0xcb, 0x24, 0x33, 0x7b, 0x4e, 0x05, 0xef, 0x47, 0x31, 0xcb, 0xe3,
	0xb2, 0x9a, 0x49, 0x86, 0x86, 0x4f, 0xad, 0x18, 0xe3, 0x8c, 0xd8, 0x21, 0x13, 0x09, 0x8b, 0x27,
	0x68, 0x53, 0xff, 0x68, 0xe6, 0x99, 0xd6, 0x14, 0xf8, 0x7d, 0xd8, 0x40, 0x3c, 0x7b, 0xad, 0xb0,
	0x73, 0x84, 0x93, 0x19, 0x86, 0x19, 0x34, 0xf6, 0xc4, 0xea, 0x8a, 0x39, 0x3b, 0xd0, 0xc1, 0x39,
	0x83, 0x34, 0x9b, 0xc0, 0x4d, 0x22, 0xb6, 0x33, 0xc9, 0x9e, 0xa6, 0xd9, 0xac, 0x37, 0x92, 0x8e,
	0xd2, 0x98, 0x4d, 0xc0, 0x8d, 0xc2, 0x9b, 0x33, 0xad, 0xc9, 0xf1, 0xde, 0x01, 0xb4, 0x31, 0x24,
	0xa5, 0x2c, 0xdb, 0x83, 0xa5, 0xbc, 0x50, 0x9c, 0x2a, 0x3b, 0x45, 0xfc, 0x48, 0x8e, 0xf2, 0xd6,
	0x60, 0xb5, 0x30, 0x61, 0x93, 0xf7, 0x1f, 0x35, 0x68, 0x63, 0x56, 0x1f, 0x66, 0xfd, 0x6b, 0x3b,
	0xeb, 0x03, 0x70, 0x7b, 0x59, 0xdf, 0x9f, 0xdb, 0x5d, 0x3b, 0x3d, 0x34, 0x50, 0x6e, 0xb0, 0x77,
	0xa0, 0x95, 0x64, 0x23, 0xbf, 0x37, 0xc6, 0xf7, 0x9c, 0x29, 0xfa, 0x66, 0x92, 0x8d, 0x0e, 0x71,
	0x8c, 0x6b, 0xa0, 0xa9, 0x54, 0x99, 0x60, 0x36, 0x48, 0xa3, 0x97, 0xf5, 0x4f, 0x95, 0x98, 0xd7,
	0x7f, 0xeb, 0x1f, 0xa2, 0xff, 0x36, 0x3e, 0x4c, 0xff, 0x5d, 0x7a, 0xd7, 0xfe, 0x2b, 0x45, 0x60,
	0x9f, 0xb7, 0xf6, 0xd2, 0xd8, 0x92, 0x22, 0x30, 0x2b, 0xa3, 0x3a, 0x94, 0x2a, 0x57, 0xb7, 0x8c,
	0x3a, 0x94, 0x6a, 0xa2, 0x2e, 0xb5, 0x24, 0x98, 0x69, 0x49, 0x78, 0xad, 0x46, 0xe3, 0x51, 0x12,
	0x50, 0x91, 0x98, 0xe2, 0xc0, 0x2b, 0xce, 0x22, 0x69, 0x4b, 0x11, 0x9c, 0x4c, 0xa4, 0xde, 0xbf,
	0x1d, 0x58, 0x2d, 0x28, 0xb6, 0x25, 0x59, 0x8a, 0xbf, 0x33, 0x15, 0xff, 0x29, 0xd6, 0x16, 0xaa,
	0xac, 0xe5, 0x8d, 0xbe, 0x36, 0xd5, 0xe8, 0x3f, 0x40, 0xf3, 0x9e, 0x7b, 0x56, 0xd4, 0xe7, 0x9f,
	0x15, 0x33, 0x8d, 0xbe, 0x51, 0x69, 0xf4, 0x7f, 0x71, 0x60, 0xfd, 0x88, 0x63, 0xf9, 0x28, 0xf6,
	0x54, 0xf0, 0x2c, 0xcd, 0x73, 0xfb, 0x0e, 0x3e, 0x8b, 0x79, 0x96, 0xea, 0xcc, 0xc5, 0x9d, 0xd7,
	0xf1, 0x01, 0xcc, 0xb3, 0xd4, 0xde, 0x5f, 0x8d, 0x52, 0x46, 0x6f, 0xcc, 0x3b, 0xae, 0x4e, 0x0c,
	0xfc, 0x2c, 0x7a, 0xc3, 0x70, 0x55, 0xfb, 0xa3, 0x42, 0x8d, 0x53, 0xf3, 0x86, 0x69, 0x11, 0x30,
	0xa2, 0xf3, 0x71, 0x5a, 0x06, 0x24, 0x74, 0xc4, 0xec, 0xed, 0xd8, 0x02, 0xf0, 0xf2, 0x88, 0x94,
	0x95, 0x5e, 0xad, 0xda, 0x4a, 0x5d, 0xaf, 0xd2, 0x9e, 0x88, 0xd1, 0x92, 0xf7, 0x5f, 0x07, 0x36,
	0x66, 0xfc, 0xb7, 0xc4, 0xfd, 0x5f, 0x37, 0x60, 0xc9, 0x57, 0x54, 0x0e, 0x0d, 0x7d, 0x75, 0x4d,
	0xfe, 0x39, 0x8e, 0x67, 0x77, 0x57, 0xaf, 0xec, 0xee, 0x0e, 0xb4, 0x70, 0xa6, 0x51, 0x37, 0xb4,
	0xba, 0x89, 0x02, 0xad, 0xfc, 0x0e, 0x74, 0x02, 0x3e, 0x1a, 0x65, 0x49, 0x14, 0x50, 0xc5, 0x45,
	0xf1, 0x58, 0x5f, 0x21, 0xab, 0x65, 0x39, 0xbe, 0xd4, 0x7f, 0x57, 0x83, 0xcd, 0x7c, 0xf3, 0x27,
	0x89, 0x54, 0x34, 0x09, 0x58, 0xce, 0x9f, 0x0b, 0x8b, 0xda, 0xbc, 0x79, 0x1a, 0xe9, 0x6f, 0x94,
	0xe9, 0xfd, 0x98, 0xfd, 0xea, 0x6f, 0xf7, 0x11, 0xb4, 0x42, 0xaa, 0xe8, 0x64, 0xa3, 0xed, 0xe9,
	0xfb, 0xf1, 0x31, 0x55, 0x14, 0xb7, 0x4c, 0x9a, 0xa1, 0xfd, 0x72, 0xf7, 0xa1, 0xae, 0xff, 0x60,
	0xda, 0xbc, 0xbd, 0x5b, 0xbd, 0xf5, 0x9c, 0xa1, 0xda, 0x5c, 0x7d, 0x0c, 0x74, 0x9a, 0x8d, 0xfa,
	0x97, 0xb2, 0xd1, 0x98, 0x65, 0xe3, 0x23, 0x58, 0x89, 0xec, 0xee, 0x8a, 0x68, 0xd4, 0xc9, 0x72,
	0x2e, 0x43, 0x0b, 0x33, 0x84, 0x35, 0x2b, 0x84, 0x7d, 0x03, 0x6e, 0xc8, 0xac, 0x17, 0x46, 0x97,
	0x3e, 0xef, 0xf7, 0x25, 0x53, 0xdd, 0xd6, 0x76, 0x6d, 0xa7, 0x4e, 0x56, 0x8c, 0xf0, 0xa5, 0x96,
	0xb9, 0xb7, 0xa0, 0x61, 0x5b, 0x0c, 0x68, 0x03, 0x76, 0x84, 0xce, 0x47, 0xd2, 0x97, 0x3c, 0x13,
	0x01, 0xd3, 0xad, 0xa3, 0x49, 0x9a, 0x91, 0x3c, 0xd3, 0x63, 0x2f, 0x84, 0x6e, 0x95, 0x83, 0xc9,
	0x1f, 0x93, 0x29, 0xcf, 0x9d, 0xb9, 0x9e, 0x1b, 0xc3, 0xbe, 0xa0, 0xc9, 0xd0, 0x52, 0x03, 0x46,
	0x44, 0x68, 0x32, 0xfc, 0x7c, 0xb1, 0x59, 0xeb, 0x2c, 0x7a, 0x9f, 0xc0, 0x2d, 0xfd, 0x4f, 0x94,
	0xa5, 0x67, 0x48, 0x70, 0x89, 0xe8, 0x3b, 0xf9, 0xff, 0x2b, 0xb3, 0x00, 0xde, 0x64, 0xcc, 0x9f,
	0x2a, 0xcc, 0x90, 0x17, 0xb0, 0x52, 0x9e, 0x33, 0x0b, 0x76, 0xca, 0x60, 0x77, 0x1b, 0x56, 0x12,
	0xf6, 0x5a, 0xf9, 0xd3, 0xef, 0x66, 0x40, 0x99, 0xbd, 0x15, 0x7d, 0x01, 0x9b, 0x15, 0x2f, 0xec,
	0x56, 0x1f, 0xc3, 0x0d, 0x73, 0x07, 0xb2, 0x0a, 0x7b, 0x87, 0xe9, 0x56, 0xae, 0x41, 0xf9, 0xc4,
	0x15, 0x59, 0x1a, 0x1d, 0x8e, 0x60, 0x8b, 0x8b, 0x41, 0x19, 0x1c, 0x46, 0x52, 0x89, 0x2c, 0x51,
	0xd1, 0x88, 0x1d, 0xae, 0x98, 0x9f, 0x00, 0x3a, 0xa3, 0xe4, 0xa9, 0xf3, 0xeb, 0x9f, 0x0c, 0x22,
	0x75, 0x91, 0xf5, 0x76, 0x03, 0x3e, 0x2a, 0xfd, 0x59, 0xbe, 0xe2, 0x73, 0xc0, 0xa7, 0xff, 0x45,
	0xff, 0xc7, 0x71, 0x7a, 0x0d, 0x3d, 0xf8, 0xfe, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x92, 0x41,
	0x12, 0x3f, 0xd4, 0x18, 0x00, 0x00,
}
