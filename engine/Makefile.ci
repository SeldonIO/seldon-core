IMAGE_NAME=seldonio/engine
VERSION_FILE=target/version.txt

LOCAL_PRIVATE_REPO=127.0.0.1:5000

# clean and build image
build: clean build_image


build_jar: update_proto update_swagger
	@set -x && mvn clean verify -Dlicense.useMissingFile -B

write_version: build_jar
	ls target/seldon-engine-*.jar | sed -n 's/target\/seldon-engine-\(.*\).jar$$/\1/p' > $(VERSION_FILE) && cat $(VERSION_FILE)

build_image: write_version
	docker build --build-arg APP_VERSION=$$(cat $(VERSION_FILE)) -t $(IMAGE_NAME):latest .
	docker tag $(IMAGE_NAME):latest $(IMAGE_NAME):$$(cat $(VERSION_FILE))
	docker tag $(IMAGE_NAME):latest $(LOCAL_PRIVATE_REPO)/$(IMAGE_NAME):$$(cat $(VERSION_FILE))

repo_login:
	if [ ! -z "${SELDON_CORE_DOCKER_HUB_USER}" ] && [ ! -z "${SELDON_CORE_DOCKER_HUB_PASSWORD}" ]; then \
		docker login -u ${SELDON_CORE_DOCKER_HUB_USER} -p ${SELDON_CORE_DOCKER_HUB_PASSWORD}; \
	else \
		echo "Missing credentials!"; \
	fi

push_image:
	docker push $(IMAGE_NAME):$$(cat $(VERSION_FILE))

push_image_private_repo:
	@set -x && docker push $(LOCAL_PRIVATE_REPO)/$(IMAGE_NAME):$$(cat $(VERSION_FILE))

clean:
	mvn clean -B
	rm -fv src/main/proto/seldon_deployment.proto
	rm -fv src/main/proto/prediction.proto
	rm -fvr src/main/proto/k8s.io
	rm -fv src/main/proto/v1.proto

download_protos:
	cd ../proto/k8s ; make create_protos

update_proto: download_protos
	cp -v ../proto/seldon_deployment.proto src/main/proto/
	cp -v ../proto/prediction.proto src/main/proto/
	cp -vr ../proto/k8s/k8s.io src/main/proto
	cp -v ../proto/k8s/v1.proto src/main/proto

update_swagger:
	cp -v ../openapi/engine.oa3.json src/main/resources/static/seldon.json
